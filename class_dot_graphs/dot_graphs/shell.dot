digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00000090" [URL="fcn.00000278/0x00000090", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x101\l0x00000090      mov edi, ebx                                           ; int64_t arg1\l0x00000092      lea rsi, [0x00000099]                                  ; int64_t arg4\l; DATA XREF from fcn.00000278 @ 0x92\l0x00000099      xor eax, eax\l0x0000009b      call 0xa0\l"]
	"0x000000a0" [URL="fcn.00000278/0x000000a0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x0000008a  CALL 0x0000009b  CODE 0x000000fc  \l; XREFS: CODE 0x00000737  CODE 0x0000075e  CODE 0x000007bf  \l; XREFS: CODE 0x0000090d  CODE 0x00000926  CODE 0x0000093f  \l; XREFS: CODE 0x00000971  CODE 0x000009ac  CODE 0x000009d4  \l0x000000a0      mov edi, ebx                                           ; int64_t arg1\l0x000000a2      mov rsi, r13                                           ; int64_t arg4\l0x000000a5      mov rdx, r14                                           ; int64_t arg6\l0x000000a8      xor eax, eax\l0x000000aa      call 0xaf\l; CALL XREF from fcn.00000278 @ 0xaa\l0x000000af      mov rdi, r12                                           ; int64_t arg1\l0x000000b2      xor eax, eax\l0x000000b4      call 0xb9\l; CALL XREF from fcn.00000278 @ 0xb4\l0x000000b9      mov edi, ebx                                           ; int64_t arg1\l0x000000bb      mov rsi, r15                                           ; int64_t arg4\l0x000000be      mov edx, 0x50                                          ; 'P' ; int64_t arg6\l0x000000c3      xor eax, eax\l0x000000c5      call 0xca\l; CALL XREF from fcn.00000278 @ 0xc5\l0x000000ca      test eax, eax\l0x000000cc      jne 0xdf\l"]
	"0x000000ce" [URL="fcn.00000278/0x000000ce", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000000ce      mov edi, ebx                                           ; int64_t arg1\l0x000000d0      mov rsi, r15                                           ; int64_t arg4\l0x000000d3      mov edx, 0x50                                          ; 'P' ; int64_t arg6\l0x000000d8      xor eax, eax\l0x000000da      call 0xdf\l"]
	"0x000000df" [URL="fcn.00000278/0x000000df", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CALL XREFS from fcn.00000278 @ 0xcc, 0xda\l0x000000df      cmp eax, 0xfffffffe\l0x000000e2      je 0x9d9\l"]
	"0x000000e8" [URL="fcn.00000278/0x000000e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000000e8      cdqe\l0x000000ea      mov byte [r12 + rax + 0x2d], 0\l0x000000f0      mov rdi, r15                                           ; int64_t arg1\l0x000000f3      xor eax, eax\l0x000000f5      call 0xfa\l; CALL XREF from fcn.00000278 @ 0xf5\l0x000000fa      test eax, eax\l0x000000fc      je 0xa0\l"]
	"0x000000fe" [URL="fcn.00000278/0x000000fe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000000fe      cmp eax, 0xffffffff\l0x00000101      je 0x90\l"]
	"0x00000103" [URL="fcn.00000278/0x00000103", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000103      movsxd rbx, eax\l0x00000106      mov cl, byte [r12 + rbx + 0xff]\l0x0000010e      dec rbx\l0x00000111      mov byte [var_42h], cl\l0x00000114      cmp cl, 0x26\l0x00000117      cmovne ebx, eax\l0x0000011a      test ebx, ebx\l0x0000011c      jle 0x73c\l"]
	"0x00000122" [URL="fcn.00000278/0x00000122", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000122      xor eax, eax\l0x00000124      mov qword [var_d0h], rax\l0x0000012b      mov r14, qword [var_e8h]\l0x00000132      mov r13, qword [var_f0h]\l0x00000139      xor ecx, ecx\l0x0000013b      xor r10d, r10d\l0x0000013e      xor eax, eax\l0x00000140      mov qword [var_80h], rax\l0x00000144      xor eax, eax\l0x00000146      mov qword [var_90h], rax\l"]
	"0x0000014d" [URL="fcn.00000278/0x0000014d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x6b5\l0x0000014d      lea rax, [r12 + rcx + 0x100]\l0x00000155      mov qword [var_c8h], rax\l0x0000015c      lea rax, [r12 + rcx*8 + 0x80]\l0x00000164      mov qword [var_c0h], rax\l0x0000016b      mov rax, rcx\l0x0000016e      not rax\l0x00000171      mov qword [var_b8h], rax\l0x00000178      lea rax, [r12 + rcx + 0x102]\l0x00000180      mov qword [var_b0h], rax\l0x00000187      lea rax, [r12 + rcx*8 + 0x90]\l0x0000018f      mov qword [var_a8h], rax\l0x00000196      lea rax, [rcx + 1]\l0x0000019a      mov qword [var_e0h], rax\l0x000001a1      mov qword [var_50h], rcx\l"]
	"0x000001a5" [URL="fcn.00000278/0x000001a5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x66a\l0x000001a5      lea eax, [rbx - 2]\l0x000001a8      xor r9d, r9d\l0x000001ab      mov dword [var_74h], eax\l0x000001ae      mov edi, eax\l"]
	"0x000001b0" [URL="fcn.00000278/0x000001b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x429\l0x000001b0      mov edi, edi                                           ; arg1\l0x000001b2      mov rax, qword [var_d0h]\l0x000001b9      lea rsi, [rax + rdi]\l0x000001bd      and rsi, 0xfffffffffffffffc\l0x000001c1      mov al, byte [r12 + rcx + 0x100]\l0x000001c9      cmp al, 0x3c\l0x000001cb      jne 0x440\l"]
	"0x000001d1" [URL="fcn.00000278/0x000001d1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000001d1      test r10, r10\l0x000001d4      jne 0x73c\l"]
	"0x000001da" [URL="fcn.00000278/0x000001da", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000001da      lea eax, [rbx - 1]\l0x000001dd      cdqe\l0x000001df      cmp rcx, rax\l0x000001e2      jge 0x73c\l"]
	"0x000001e8" [URL="fcn.00000278/0x000001e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000001e8      mov r10, qword [r12 + rcx*8 + 0x88]\l0x000001f0      add ebx, 0xfffffffe\l0x000001f3      movsxd rax, ebx\l0x000001f6      cmp rcx, rax\l0x000001f9      jge 0x6bb\l"]
	"0x000001ff" [URL="fcn.00000278/0x000001ff", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000001ff      mov qword [var_a0h], rax\l0x00000206      mov qword [var_68h], r10\l0x0000020a      mov qword [var_60h], rbx\l0x0000020e      lea eax, [r9 + r9]                                     ; arg6\l0x00000212      mov edx, dword [var_74h]\l0x00000215      mov r10d, edx\l0x00000218      sub r10d, eax\l0x0000021b      mov r11, r10\l0x0000021e      sub r11, rcx\l0x00000221      mov rax, rcx\l0x00000224      cmp r11, 4\l0x00000228      jae 0x2c0\l"]
	"0x0000022e" [URL="fcn.00000278/0x0000022e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00000364  CODE 0x00000374  CODE 0x0000038c  \l; XREFS: CODE 0x00000399  CODE 0x000003a6  CODE 0x000003ff  \l0x0000022e      mov edx, r10d\l0x00000231      sub edx, eax\l0x00000233      mov rcx, rax\l0x00000236      not rcx\l0x00000239      test dl, 1\l0x0000023c      je 0x261\l"]
	"0x0000023e" [URL="fcn.00000278/0x0000023e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000023e      mov dl, byte [r12 + rax + 0x102]\l0x00000246      mov byte [r12 + rax + 0x100], dl\l0x0000024e      mov rdx, qword [r12 + rax*8 + 0x90]\l0x00000256      mov qword [r12 + rax*8 + 0x80], rdx\l0x0000025e      inc rax\l"]
	"0x00000261" [URL="fcn.00000278/0x00000261", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x23c\l0x00000261      add rcx, r10\l0x00000264      je 0x410\l"]
	"0x0000026a" [URL="fcn.00000278/0x0000026a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000026a      nop word [rax + rax]\l"]
	"0x00000270" [URL="fcn.00000278/0x00000270", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x2b9\l0x00000270  ~   movzx ecx, byte [r12 + rax + 0x102]\l  ;-- rip:\l2467: fcn.00000278 (char *arg1, int64_t arg4, int64_t arg6);\l; var int64_t var_f0h @ rbp-0xf0\l; var int64_t var_e8h @ rbp-0xe8\l; var int64_t var_e0h @ rbp-0xe0\l; var int64_t var_d8h @ rbp-0xd8\l; var int64_t var_d0h @ rbp-0xd0\l; var int64_t var_c8h @ rbp-0xc8\l; var int64_t var_c0h @ rbp-0xc0\l; var int64_t var_b8h @ rbp-0xb8\l; var int64_t var_b0h @ rbp-0xb0\l; var int64_t var_a8h @ rbp-0xa8\l; var uint32_t var_a0h @ rbp-0xa0\l; var int64_t var_98h @ rbp-0x98\l; var int64_t var_90h @ rbp-0x90\l; var int64_t var_88h @ rbp-0x88\l; var uint32_t var_80h @ rbp-0x80\l; var int64_t var_74h @ rbp-0x74\l; var char *var_70h @ rbp-0x70\l; var char *var_68h @ rbp-0x68\l; var int64_t var_60h @ rbp-0x60\l; var int64_t var_53h @ rbp-0x53\l; var int64_t var_52h @ rbp-0x52\l; var int64_t var_51h @ rbp-0x51\l; var char *var_50h @ rbp-0x50\l; var uint32_t var_42h @ rbp-0x42\l; var int64_t var_41h @ rbp-0x41\l; var int64_t var_40h @ rbp-0x40\l; var int64_t var_3fh @ rbp-0x3f\l; var int64_t var_3eh @ rbp-0x3e\l; var int64_t var_3dh @ rbp-0x3d\l; var int64_t var_3ch @ rbp-0x3c\l; var uint32_t var_30h @ rbp-0x30\l; arg char *arg1 @ rdi\l; arg int64_t arg4 @ rcx\l; arg int64_t arg6 @ r9\l0x00000278      add byte [rcx - 0x78], al                              ; arg4\l0x0000027b      mov word [rax + rax], es\l0x0000027e      add dword [rax], eax\l0x00000280      add byte [rcx - 0x75], cl                              ; arg4\l0x00000283      mov esp, es\l0x00000285      nop\l0x00000286      add byte [rax], al\l0x00000288      add byte [rcx - 0x77], cl                              ; arg4\l0x0000028b      mov esp, es\l0x0000028d      add byte [rax], 0\l0x00000290      add byte [rcx + 0xf], al                               ; arg4\l0x00000293      mov dh, 0x8c\l0x00000295      add al, 3\l0x00000297      add dword [rax], eax\l0x00000299      add byte [rcx - 0x78], al                              ; arg4\l; DATA XREF from fcn.00000278 @ 0x81a\l0x0000029c      mov word [rcx + rax], es                               ; arg4\l0x0000029f      add dword [rax], eax\l0x000002a1      add byte [rcx - 0x75], cl                              ; arg4\l0x000002a4      mov esp, es\l0x000002a6      cwde\l0x000002a7      add byte [rax], al\l0x000002a9      add byte [rcx - 0x77], cl                              ; arg4\l0x000002ac      mov esp, es\l0x000002ae      mov byte [rax], al\l0x000002b0      add byte [rax], al\l"]
	"0x00000278" [URL="fcn.00000278/0x00000278", fillcolor="white",color="#767676", fontname="Courier",label="  ;-- rip:\l2467: fcn.00000278 (char *arg1, int64_t arg4, int64_t arg6);\l; var int64_t var_f0h @ rbp-0xf0\l; var int64_t var_e8h @ rbp-0xe8\l; var int64_t var_e0h @ rbp-0xe0\l; var int64_t var_d8h @ rbp-0xd8\l; var int64_t var_d0h @ rbp-0xd0\l; var int64_t var_c8h @ rbp-0xc8\l; var int64_t var_c0h @ rbp-0xc0\l; var int64_t var_b8h @ rbp-0xb8\l; var int64_t var_b0h @ rbp-0xb0\l; var int64_t var_a8h @ rbp-0xa8\l; var uint32_t var_a0h @ rbp-0xa0\l; var int64_t var_98h @ rbp-0x98\l; var int64_t var_90h @ rbp-0x90\l; var int64_t var_88h @ rbp-0x88\l; var uint32_t var_80h @ rbp-0x80\l; var int64_t var_74h @ rbp-0x74\l; var char *var_70h @ rbp-0x70\l; var char *var_68h @ rbp-0x68\l; var int64_t var_60h @ rbp-0x60\l; var int64_t var_53h @ rbp-0x53\l; var int64_t var_52h @ rbp-0x52\l; var int64_t var_51h @ rbp-0x51\l; var char *var_50h @ rbp-0x50\l; var uint32_t var_42h @ rbp-0x42\l; var int64_t var_41h @ rbp-0x41\l; var int64_t var_40h @ rbp-0x40\l; var int64_t var_3fh @ rbp-0x3f\l; var int64_t var_3eh @ rbp-0x3e\l; var int64_t var_3dh @ rbp-0x3d\l; var int64_t var_3ch @ rbp-0x3c\l; var uint32_t var_30h @ rbp-0x30\l; arg char *arg1 @ rdi\l; arg int64_t arg4 @ rcx\l; arg int64_t arg6 @ r9\l0x00000278      add byte [rcx - 0x78], al                              ; arg4\l0x0000027b      mov word [rax + rax], es\l0x0000027e      add dword [rax], eax\l0x00000280      add byte [rcx - 0x75], cl                              ; arg4\l0x00000283      mov esp, es\l0x00000285      nop\l0x00000286      add byte [rax], al\l0x00000288      add byte [rcx - 0x77], cl                              ; arg4\l0x0000028b      mov esp, es\l0x0000028d      add byte [rax], 0\l0x00000290      add byte [rcx + 0xf], al                               ; arg4\l0x00000293      mov dh, 0x8c\l0x00000295      add al, 3\l0x00000297      add dword [rax], eax\l0x00000299      add byte [rcx - 0x78], al                              ; arg4\l; DATA XREF from fcn.00000278 @ 0x81a\l0x0000029c      mov word [rcx + rax], es                               ; arg4\l0x0000029f      add dword [rax], eax\l0x000002a1      add byte [rcx - 0x75], cl                              ; arg4\l0x000002a4      mov esp, es\l0x000002a6      cwde\l0x000002a7      add byte [rax], al\l0x000002a9      add byte [rcx - 0x77], cl                              ; arg4\l0x000002ac      mov esp, es\l0x000002ae      mov byte [rax], al\l0x000002b0      add byte [rax], al\l"]
	"0x000002b2" [URL="fcn.00000278/0x000002b2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000002b2      add rax, 2\l0x000002b6      cmp rdi, rax                                           ; arg1\l0x000002b9      jne 0x270\l"]
	"0x000002bb" [URL="fcn.00000278/0x000002bb", fillcolor="white",color="#767676", fontname="Courier",label="0x000002bb      jmp 0x410\l"]
	"0x000002c0" [URL="fcn.00000278/0x000002c0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x228\l0x000002c0      lea rax, [r12 + r10 + 0x100]\l0x000002c8      mov rcx, qword [var_b8h]\l0x000002cf      lea rcx, [rcx + r10]\l0x000002d3      lea r15, [r12 + r10*8 + 0x80]\l0x000002db      lea rbx, [r12 + r10 + 0x102]\l0x000002e3      mov rdx, qword [var_c0h]\l0x000002ea      lea rcx, [rdx + rcx*8 + 0x18]\l0x000002ef      mov qword [var_98h], r9                                ; arg6\l0x000002f6      mov r9, qword [var_c8h]\l0x000002fd      cmp r9, r15\l0x00000300      setb byte [var_41h]\l0x00000304      cmp rax, rdx\l0x00000307      seta byte [var_40h]\l0x0000030b      cmp r9, rbx\l0x0000030e      setb byte [var_3fh]\l0x00000312      mov r8, qword [var_b0h]\l0x00000319      cmp r8, rax\l0x0000031c      setb byte [var_3eh]\l0x00000320      cmp r9, rcx\l0x00000323      setb byte [var_3dh]\l0x00000327      mov r9, qword [var_a8h]\l0x0000032e      cmp rax, r9\l0x00000331      seta byte [var_53h]\l0x00000335      cmp rbx, rdx\l0x00000338      seta bl\l0x0000033b      cmp r8, r15\l0x0000033e      setb byte [var_52h]\l0x00000342      cmp rdx, rcx\l0x00000345      setb cl\l0x00000348      cmp r9, r15\l0x0000034b      mov r9, qword [var_98h]\l0x00000352      mov r15, qword [var_70h]\l0x00000356      setb byte [var_51h]\l0x0000035a      mov rax, qword [var_50h]\l0x0000035e      mov dl, byte [var_40h]\l0x00000361      test byte [var_41h], dl\l0x00000364      jne 0x22e\l"]
	"0x0000036a" [URL="fcn.00000278/0x0000036a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000036a      mov rax, qword [var_50h]\l0x0000036e      mov dl, byte [var_3eh]\l; DATA XREF from fcn.00000278 @ 0x72c\l0x00000371      and byte [var_3fh], dl\l0x00000374      jne 0x22e\l"]
	"0x0000037a" [URL="fcn.00000278/0x0000037a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000037a      mov rax, qword [var_50h]\l0x0000037e      mov r8, r15\l0x00000381      mov r15b, byte [var_53h]\l0x00000385      and byte [var_3dh], r15b\l0x00000389      mov r15, r8\l0x0000038c      jne 0x22e\l"]
	"0x00000392" [URL="fcn.00000278/0x00000392", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000392      mov rax, qword [var_50h]\l0x00000396      and bl, byte [var_52h]\l0x00000399      jne 0x22e\l"]
	"0x0000039f" [URL="fcn.00000278/0x0000039f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000039f      mov rax, qword [var_50h]\l0x000003a3      and cl, byte [var_51h]\l0x000003a6      jne 0x22e\l"]
	"0x000003ac" [URL="fcn.00000278/0x000003ac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000003ac      mov r15, r11\l0x000003af      and r15, 0xfffffffffffffffc\l0x000003b3      mov rax, qword [var_50h]\l0x000003b7      lea rax, [rax + r15]\l0x000003bb      xor ecx, ecx\l0x000003bd      nop dword [rax]\l"]
	"0x000003c0" [URL="fcn.00000278/0x000003c0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x3f6\l0x000003c0      movzx edx, word [r14 + rcx - 2]\l0x000003c6      movzx ebx, word [r14 + rcx]\l0x000003cb      mov word [r14 + rcx - 4], dx\l0x000003d1      mov word [r14 + rcx - 2], bx\l0x000003d7      movups xmm0, xmmword [r13 + rcx*8 - 0x10]\l0x000003dd      movups xmm1, xmmword [r13 + rcx*8]\l0x000003e3      movups xmmword [r13 + rcx*8 - 0x20], xmm0\l0x000003e9      movups xmmword [r13 + rcx*8 - 0x10], xmm1\l0x000003ef      add rcx, 4\l0x000003f3      cmp rsi, rcx\l0x000003f6      jne 0x3c0\l"]
	"0x000003f8" [URL="fcn.00000278/0x000003f8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000003f8      cmp r11, r15\l0x000003fb      mov r15, qword [var_70h]\l0x000003ff      jne 0x22e\l"]
	"0x00000405" [URL="fcn.00000278/0x00000405", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000405      nop word cs:[rax + rax]\l0x0000040f      nop\l"]
	"0x00000410" [URL="fcn.00000278/0x00000410", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from fcn.00000278 @ 0x264, 0x2bb\l0x00000410      inc r9d                                                ; arg6\l0x00000413      add edi, 0xfffffffe                                    ; arg1\l0x00000416      mov rcx, qword [var_50h]\l0x0000041a      cmp rcx, qword [var_a0h]\l0x00000421      mov rbx, qword [var_60h]\l0x00000425      mov r10, qword [var_68h]\l0x00000429      jl 0x1b0\l"]
	"0x0000042f" [URL="fcn.00000278/0x0000042f", fillcolor="white",color="#767676", fontname="Courier",label="0x0000042f      jmp 0x6bb\l"]
	"0x00000440" [URL="fcn.00000278/0x00000440", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x1cb\l0x00000440      cmp al, 0x26\l0x00000442      je 0x73c\l"]
	"0x00000448" [URL="fcn.00000278/0x00000448", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000448      cmp al, 0x3e\l0x0000044a      jne 0x672\l"]
	"0x00000450" [URL="fcn.00000278/0x00000450", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000450      cmp qword [var_80h], 0\l0x00000455      jne 0x73c\l"]
	"0x0000045b" [URL="fcn.00000278/0x0000045b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000045b      lea eax, [rbx - 1]\l0x0000045e      cdqe\l0x00000460      cmp rcx, rax\l0x00000463      jge 0x73c\l"]
	"0x00000469" [URL="fcn.00000278/0x00000469", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000469      mov rax, qword [r12 + rcx*8 + 0x88]\l0x00000471      mov qword [var_80h], rax\l0x00000475      add ebx, 0xfffffffe\l0x00000478      movsxd r8, ebx\l0x0000047b      cmp rcx, r8\l0x0000047e      jge 0x6bb\l"]
	"0x00000484" [URL="fcn.00000278/0x00000484", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000484      mov qword [var_60h], rbx\l0x00000488      mov ebx, ebx\l0x0000048a      mov r9, rbx\l0x0000048d      sub r9, rcx\l0x00000490      mov rax, rcx\l0x00000493      cmp r9, 4\l0x00000497      jb 0x5d5\l"]
	"0x0000049d" [URL="fcn.00000278/0x0000049d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000049d      lea rax, [r12 + rbx + 0x100]\l0x000004a5      mov rcx, qword [var_b8h]\l0x000004ac      lea r11, [rcx + rbx]\l0x000004b0      mov qword [var_68h], r10\l0x000004b4      lea r10, [r12 + rbx*8 + 0x80]\l0x000004bc      lea rcx, [r12 + rbx + 0x102]\l0x000004c4      mov r15, qword [var_c0h]\l0x000004cb      lea r11, [r15 + r11*8 + 0x18]\l0x000004d0      mov rdx, qword [var_c8h]\l0x000004d7      cmp rdx, r10\l0x000004da      setb byte [var_74h]\l0x000004de      cmp rax, r15\l0x000004e1      seta byte [var_98h]\l0x000004e8      cmp rdx, rcx\l0x000004eb      setb byte [var_41h]\l0x000004ef      mov qword [var_a0h], r8\l0x000004f6      mov r8, qword [var_b0h]\l0x000004fd      cmp r8, rax\l0x00000500      setb byte [var_40h]\l0x00000504      cmp rdx, r11\l0x00000507      setb byte [var_3fh]\l0x0000050b      mov rdx, qword [var_a8h]\l0x00000512      cmp rax, rdx\l0x00000515      seta byte [var_3eh]\l0x00000519      cmp rcx, r15\l0x0000051c      seta cl\l0x0000051f      cmp r8, r10\l0x00000522      mov r8, qword [var_a0h]\l0x00000529      setb byte [var_3dh]\l0x0000052d      cmp r15, r11\l0x00000530      setb r11b\l0x00000534      cmp rdx, r10\l0x00000537      mov r10, qword [var_68h]\l0x0000053b      setb r15b\l0x0000053f      mov rax, qword [var_50h]\l0x00000543      mov dl, byte [var_98h]\l0x00000549      test byte [var_74h], dl\l0x0000054c      jne 0x5d5\l"]
	"0x00000552" [URL="fcn.00000278/0x00000552", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000552      mov rax, qword [var_50h]\l0x00000556      mov dl, byte [var_40h]\l0x00000559      and byte [var_41h], dl\l0x0000055c      jne 0x5d5\l"]
	"0x0000055e" [URL="fcn.00000278/0x0000055e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000055e      mov rax, qword [var_50h]\l0x00000562      mov dl, byte [var_3eh]\l0x00000565      and byte [var_3fh], dl\l0x00000568      jne 0x5d5\l"]
	"0x0000056a" [URL="fcn.00000278/0x0000056a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000056a      mov rax, qword [var_50h]\l0x0000056e      and cl, byte [var_3dh]\l0x00000571      jne 0x5d5\l"]
	"0x00000573" [URL="fcn.00000278/0x00000573", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000573      mov rax, qword [var_50h]\l0x00000577      and r11b, r15b\l0x0000057a      jne 0x5d5\l"]
	"0x0000057c" [URL="fcn.00000278/0x0000057c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000057c      mov r10, r9\l0x0000057f      and r10, 0xfffffffffffffffc\l0x00000583      mov rax, qword [var_50h]\l0x00000587      lea rax, [rax + r10]\l0x0000058b      xor ecx, ecx\l0x0000058d      nop dword [rax]\l"]
	"0x00000590" [URL="fcn.00000278/0x00000590", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x5c6\l0x00000590      movzx edx, word [r14 + rcx - 2]\l0x00000596      movzx r11d, word [r14 + rcx]\l0x0000059b      mov word [r14 + rcx - 4], dx\l0x000005a1      mov word [r14 + rcx - 2], r11w\l0x000005a7      movups xmm0, xmmword [r13 + rcx*8 - 0x10]\l0x000005ad      movups xmm1, xmmword [r13 + rcx*8]\l0x000005b3      movups xmmword [r13 + rcx*8 - 0x20], xmm0\l0x000005b9      movups xmmword [r13 + rcx*8 - 0x10], xmm1\l0x000005bf      add rcx, 4\l0x000005c3      cmp rsi, rcx\l0x000005c6      jne 0x590\l"]
	"0x000005c8" [URL="fcn.00000278/0x000005c8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000005c8      cmp r9, r10\l0x000005cb      mov r10, qword [var_68h]\l0x000005cf      je 0x65b\l"]
	"0x000005d5" [URL="fcn.00000278/0x000005d5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00000497  CODE 0x0000054c  CODE 0x0000055c  \l; XREFS: CODE 0x00000568  CODE 0x00000571  CODE 0x0000057a  \l0x000005d5      mov edx, ebx\l0x000005d7      sub edx, eax\l0x000005d9      mov rcx, rax\l0x000005dc      not rcx\l0x000005df      test dl, 1\l0x000005e2      je 0x607\l"]
	"0x000005e4" [URL="fcn.00000278/0x000005e4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000005e4      mov dl, byte [r12 + rax + 0x102]\l0x000005ec      mov byte [r12 + rax + 0x100], dl\l0x000005f4      mov rdx, qword [r12 + rax*8 + 0x90]\l0x000005fc      mov qword [r12 + rax*8 + 0x80], rdx\l0x00000604      inc rax\l"]
	"0x00000607" [URL="fcn.00000278/0x00000607", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x5e2\l0x00000607      add rcx, rbx\l0x0000060a      je 0x65b\l"]
	"0x0000060c" [URL="fcn.00000278/0x0000060c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000060c      nop dword [rax]\l"]
	"0x00000610" [URL="fcn.00000278/0x00000610", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x659\l0x00000610      movzx ecx, byte [r12 + rax + 0x102]\l0x00000619      mov byte [r12 + rax + 0x100], cl\l0x00000621      mov rcx, qword [r12 + rax*8 + 0x90]\l0x00000629      mov qword [r12 + rax*8 + 0x80], rcx\l0x00000631      movzx ecx, byte [r12 + rax + 0x103]\l0x0000063a      mov byte [r12 + rax + 0x101], cl\l0x00000642      mov rcx, qword [r12 + rax*8 + 0x98]\l0x0000064a      mov qword [r12 + rax*8 + 0x88], rcx\l0x00000652      add rax, 2\l0x00000656      cmp rdi, rax                                           ; arg1\l0x00000659      jne 0x610\l"]
	"0x0000065b" [URL="fcn.00000278/0x0000065b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from fcn.00000278 @ 0x5cf, 0x60a\l0x0000065b      mov rcx, qword [var_50h]\l0x0000065f      cmp rcx, r8\l0x00000662      mov r15, qword [var_70h]\l0x00000666      mov rbx, qword [var_60h]\l0x0000066a      jl 0x1a5\l"]
	"0x00000670" [URL="fcn.00000278/0x00000670", fillcolor="white",color="#767676", fontname="Courier",label="0x00000670      jmp 0x6bb\l"]
	"0x00000672" [URL="fcn.00000278/0x00000672", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x44a\l0x00000672      mov rdi, qword [r12 + rcx*8 + 0x80]                    ; int64_t arg1\l0x0000067a      mov qword [var_68h], r10\l0x0000067e      call 0x683\l; CALL XREF from fcn.00000278 @ 0x67e\l0x00000683      mov r10, qword [var_68h]\l0x00000687      mov rcx, qword [var_90h]\l0x0000068e      add ecx, eax\l0x00000690      mov qword [var_90h], rcx\l0x00000697      movsxd rax, ebx\l0x0000069a      add r13, 8\l0x0000069e      inc r14\l0x000006a1      dec qword [var_d0h]\l0x000006a8      mov rdx, qword [var_e0h]\l0x000006af      mov rcx, rdx\l0x000006b2      cmp rdx, rax\l0x000006b5      jl 0x14d\l"]
	"0x000006bb" [URL="fcn.00000278/0x000006bb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from fcn.00000278 @ 0x1f9, 0x42f, 0x47e, 0x670\l0x000006bb      test ebx, ebx\l0x000006bd      jle 0x73c\l"]
	"0x000006bf" [URL="fcn.00000278/0x000006bf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000006bf      mov qword [var_68h], r10\l0x000006c3      movsxd r13, dword [r12 + 0x10]\l0x000006c8      mov rax, qword [r12 + 0x80]\l0x000006d0      mov qword [var_50h], rax\l0x000006d4      test r13, r13\l0x000006d7      jle 0x70d\l"]
	"0x000006d9" [URL="fcn.00000278/0x000006d9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000006d9      lea r14, [0x000006f0]\l0x000006e0      xor r15d, r15d\l0x000006e3      nop word cs:[rax + rax]\l0x000006ed      nop dword [rax]\l"]
	"0x000006f0" [URL="fcn.00000278/0x000006f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from fcn.00000278 @ 0x6d9, 0x70b\l0x000006f0      mov rdi, qword [r14 - 0x10]                            ; int64_t arg1\l0x000006f4      mov rsi, qword [var_50h]                               ; int64_t arg4\l0x000006f8      call 0x6fd\l; CALL XREF from fcn.00000278 @ 0x6f8\l0x000006fd      test eax, eax\l0x000006ff      je 0x763\l"]
	"0x00000701" [URL="fcn.00000278/0x00000701", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000701      inc r15\l0x00000704      add r14, 0x18\l0x00000708      cmp r15, r13\l0x0000070b      jl 0x6f0\l"]
	"0x0000070d" [URL="fcn.00000278/0x0000070d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x6d7\l0x0000070d      mov rbx, qword [var_88h]\l0x00000714      mov edi, ebx                                           ; int64_t arg1\l0x00000716      lea rsi, str._s:_not_found_n                           ; 0xaab ; \"%s: not found\\n\" ; int64_t arg4\l0x0000071d      mov rdx, qword [var_50h]                               ; int64_t arg6\l0x00000721      xor eax, eax\l0x00000723      call 0x728\l; CALL XREF from fcn.00000278 @ 0x723\l0x00000728      lea r14, [var_3ch]\l0x0000072c      lea r13, str._s____                                    ; 0xaa4 ; \"%s %% \"\l0x00000733      mov r15, qword [var_70h]\l0x00000737      jmp 0xa0\l"]
	"0x0000073c" [URL="fcn.00000278/0x0000073c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x0000011c  CODE 0x000001d4  CODE 0x000001e2  \l; XREFS: CODE 0x00000442  CODE 0x00000455  CODE 0x00000463  \l; XREFS: CODE 0x000006bd  \l0x0000073c      mov rbx, qword [var_88h]\l0x00000743      mov edi, ebx                                           ; int64_t arg1\l0x00000745      lea rsi, [0x0000074c]                                  ; int64_t arg4\l; DATA XREF from fcn.00000278 @ 0x745\l0x0000074c      xor eax, eax\l0x0000074e      call 0x753\l; CALL XREF from fcn.00000278 @ 0x74e\l0x00000753      lea r14, [var_3ch]\l0x00000757      lea r13, str._s____                                    ; 0xaa4 ; \"%s %% \"\l0x0000075e      jmp 0xa0\l"]
	"0x00000763" [URL="fcn.00000278/0x00000763", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x6ff\l0x00000763      mov qword [var_60h], rbx\l0x00000767      cmp byte [r14 - 8], 0\l0x0000076c      je 0x7ca\l"]
	"0x0000076e" [URL="fcn.00000278/0x0000076e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000076e      cmp byte [var_42h], 0x26\l0x00000772      mov rbx, qword [var_88h]\l0x00000779      lea r13, str._s____                                    ; 0xaa4 ; \"%s %% \"\l0x00000780      mov r15, qword [var_70h]\l0x00000784      mov rax, qword [var_68h]\l0x00000788      je 0x912\l"]
	"0x0000078e" [URL="fcn.00000278/0x0000078e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000078e      cmp qword [var_80h], 0\l0x00000793      jne 0x912\l"]
	"0x00000799" [URL="fcn.00000278/0x00000799", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000799      test rax, rax\l0x0000079c      jne 0x912\l"]
	"0x000007a2" [URL="fcn.00000278/0x000007a2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000007a2      mov edi, ebx\l0x000007a4      mov esi, ebx\l0x000007a6      mov edx, ebx\l0x000007a8      mov rcx, qword [var_60h]\l0x000007ac      mov r8, qword [var_d8h]\l0x000007b3      xor eax, eax\l0x000007b5      call qword [r14]\l0x000007b8      cmp eax, 0xfffffffb\l0x000007bb      lea r14, [var_3ch]\l0x000007bf      jne 0xa0\l"]
	"0x000007c5" [URL="fcn.00000278/0x000007c5", fillcolor="white",color="#767676", fontname="Courier",label="0x000007c5      jmp 0x9d9\l"]
	"0x000007ca" [URL="fcn.00000278/0x000007ca", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x76c\l0x000007ca      mov rbx, qword [var_88h]\l0x000007d1      mov eax, ebx\l0x000007d3      mov rsi, qword [var_68h]\l0x000007d7      test rsi, rsi\l0x000007da      lea r13, str._s____                                    ; 0xaa4 ; \"%s %% \"\l0x000007e1      mov r15, qword [var_70h]\l0x000007e5      je 0x807\l"]
	"0x000007e7" [URL="fcn.00000278/0x000007e7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000007e7      mov edi, 0x14                                          ; int64_t arg1\l0x000007ec      lea rdx, [0x00000aba]                                  ; \"ro\" ; int64_t arg6\l0x000007f3      xor eax, eax\l0x000007f5      call 0x7fa\l; CALL XREF from fcn.00000278 @ 0x7f5\l0x000007fa      mov rdx, qword [var_68h]\l0x000007fe      cmp eax, 0xffffffff\l0x00000801      je 0x92b\l"]
	"0x00000807" [URL="fcn.00000278/0x00000807", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x7e5\l0x00000807      mov dword [var_68h], eax\l0x0000080a      mov eax, ebx\l0x0000080c      mov rsi, qword [var_80h]\l0x00000810      test rsi, rsi\l0x00000813      je 0x835\l"]
	"0x00000815" [URL="fcn.00000278/0x00000815", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00000815      mov edi, 0x14                                          ; int64_t arg1\l0x0000081a      lea rdx, [0x00000abd]                                  ; \"w\" ; int64_t arg6\l0x00000821      xor eax, eax\l0x00000823      call 0x828\l; CALL XREF from fcn.00000278 @ 0x823\l0x00000828      mov rdx, qword [var_80h]\l0x0000082c      cmp eax, 0xffffffff\l0x0000082f      je 0x92b\l"]
	"0x00000835" [URL="fcn.00000278/0x00000835", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x813\l0x00000835      mov qword [var_50h], rax\l0x00000839      mov rax, qword [var_60h]\l0x0000083d      lea eax, [rax + rax*8]\l0x00000840      mov rcx, qword [var_90h]\l0x00000847      lea r15d, [rcx + rax + 0x12]\l0x0000084c      mov eax, r15d\l0x0000084f      and eax, 1\l0x00000852      sub r15d, eax\l0x00000855      xor eax, eax\l0x00000857      call 0x85c\l; CALL XREF from fcn.00000278 @ 0x857\l0x0000085c      mov edi, ebx                                           ; int64_t arg1\l0x0000085e      mov esi, 0xb                                           ; int64_t arg4\l0x00000863      mov edx, eax                                           ; int64_t arg6\l0x00000865      xor eax, eax\l0x00000867      call 0x86c\l; CALL XREF from fcn.00000278 @ 0x867\l0x0000086c      mov rdi, qword [r14]                                   ; int64_t arg1\l0x0000086f      mov rcx, qword [r12 + 0x80]\l0x00000877      movsxd r8, r15d\l0x0000087a      shr r8, 2\l0x0000087e      add r8, 4\l0x00000882      sub rsp, 8\l0x00000886      mov esi, 0x1f4                                         ; int64_t arg4\l0x0000088b      mov edx, 0x14                                          ; int64_t arg6\l0x00000890      mov r14d, dword [var_68h]\l0x00000894      mov r9d, r14d\l0x00000897      xor eax, eax\l0x00000899      push qword [var_60h]\l0x0000089c      push rbx\l0x0000089d      push qword [var_50h]\l0x000008a0      call 0x8a5\l; CALL XREF from fcn.00000278 @ 0x8a0\l0x000008a5      add rsp, 0x20\l0x000008a9      cmp eax, 0xffffffff\l0x000008ac      je 0x944\l"]
	"0x000008b2" [URL="fcn.00000278/0x000008b2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000008b2      mov r14d, eax\l0x000008b5      mov edi, eax                                           ; int64_t arg1\l0x000008b7      mov rsi, qword [var_60h]                               ; int64_t arg4\l0x000008bb      mov edx, r15d                                          ; int64_t arg6\l0x000008be      xor eax, eax\l0x000008c0      call 0x8c5\l; CALL XREF from fcn.00000278 @ 0x8c0\l0x000008c5      mov dword [var_60h], r14d\l0x000008c9      mov edi, r14d                                          ; int64_t arg1\l0x000008cc      mov esi, dword [var_68h]                               ; int64_t arg4\l0x000008cf      mov rdx, qword [var_50h]                               ; int64_t arg6\l0x000008d3      xor eax, eax\l0x000008d5      call 0x8da\l; CALL XREF from fcn.00000278 @ 0x8d5\l0x000008da      cmp byte [var_42h], 0x26\l0x000008de      lea r14, [var_3ch]\l0x000008e2      jne 0x976\l"]
	"0x000008e8" [URL="fcn.00000278/0x000008e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000008e8      mov edi, ebx                                           ; int64_t arg1\l0x000008ea      lea rsi, [0x000008f1]                                  ; int64_t arg4\l; DATA XREF from fcn.00000278 @ 0x8ea\l0x000008f1      mov r15d, dword [var_60h]\l0x000008f5      mov edx, r15d                                          ; int64_t arg6\l0x000008f8      xor eax, eax\l0x000008fa      call 0x8ff\l; CALL XREF from fcn.00000278 @ 0x8fa\l0x000008ff      mov edi, r15d                                          ; int64_t arg1\l0x00000902      xor eax, eax\l0x00000904      call 0x909\l; CALL XREF from fcn.00000278 @ 0x904\l0x00000909      mov r15, qword [var_70h]\l0x0000090d      jmp 0xa0\l"]
	"0x00000912" [URL="fcn.00000278/0x00000912", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from fcn.00000278 @ 0x788, 0x793, 0x79c\l0x00000912      mov edi, ebx                                           ; int64_t arg1\l0x00000914      lea rsi, [0x0000091b]                                  ; int64_t arg4\l; DATA XREF from fcn.00000278 @ 0x914\l0x0000091b      xor eax, eax\l0x0000091d      call 0x922\l; CALL XREF from fcn.00000278 @ 0x91d\l0x00000922      lea r14, [var_3ch]\l0x00000926      jmp 0xa0\l"]
	"0x0000092b" [URL="fcn.00000278/0x0000092b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from fcn.00000278 @ 0x801, 0x82f\l0x0000092b      mov edi, ebx                                           ; int64_t arg1\l0x0000092d      lea rsi, [0x00000934]                                  ; int64_t arg4\l; DATA XREF from fcn.00000278 @ 0x92d\l0x00000934      xor eax, eax\l0x00000936      call 0x93b\l; CALL XREF from fcn.00000278 @ 0x936\l0x0000093b      lea r14, [var_3ch]\l0x0000093f      jmp 0xa0\l"]
	"0x00000944" [URL="fcn.00000278/0x00000944", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x8ac\l0x00000944      mov edi, ebx                                           ; int64_t arg1\l0x00000946      lea rsi, str.Cannot_create_n                           ; 0xabf ; \"Cannot create\\n\" ; int64_t arg4\l0x0000094d      xor eax, eax\l0x0000094f      call 0x954\l; CALL XREF from fcn.00000278 @ 0x94f\l0x00000954      mov rdi, qword [var_50h]                               ; int64_t arg1\l0x00000958      xor eax, eax\l0x0000095a      call 0x95f\l; CALL XREF from fcn.00000278 @ 0x95a\l0x0000095f      mov edi, r14d                                          ; int64_t arg1\l0x00000962      xor eax, eax\l0x00000964      call 0x969\l; CALL XREF from fcn.00000278 @ 0x964\l0x00000969      lea r14, [var_3ch]\l0x0000096d      mov r15, qword [var_70h]\l0x00000971      jmp 0xa0\l"]
	"0x00000976" [URL="fcn.00000278/0x00000976", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x8e2\l0x00000976      xor eax, eax\l0x00000978      call 0x97d\l; CALL XREF from fcn.00000278 @ 0x978\l0x0000097d      mov edi, eax                                           ; int64_t arg1\l0x0000097f      mov r15d, dword [var_60h]\l0x00000983      mov esi, r15d                                          ; int64_t arg4\l0x00000986      xor eax, eax\l0x00000988      call 0x98d\l; CALL XREF from fcn.00000278 @ 0x988\l0x0000098d      xor eax, eax\l0x0000098f      call 0x994\l; CALL XREF from fcn.00000278 @ 0x98f\l0x00000994      mov edi, r15d                                          ; int64_t arg1\l0x00000997      xor eax, eax\l0x00000999      call 0x99e\l; CALL XREF from fcn.00000278 @ 0x999\l0x0000099e      xor eax, eax\l0x000009a0      call 0x9a5\l; CALL XREF from fcn.00000278 @ 0x9a0\l0x000009a5      cmp eax, 0xfffffffc\l0x000009a8      mov r15, qword [var_70h]\l0x000009ac      jne 0xa0\l"]
	"0x000009b2" [URL="fcn.00000278/0x000009b2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000009b2      mov edi, 0xffffffff                                    ; -1 ; int64_t arg1\l0x000009b7      mov esi, dword [var_60h]                               ; int64_t arg4\l0x000009ba      xor eax, eax\l0x000009bc      call 0x9c1\l; CALL XREF from fcn.00000278 @ 0x9bc\l0x000009c1      mov edi, ebx                                           ; int64_t arg1\l0x000009c3      lea rsi, [0x000009ca]                                  ; int64_t arg4\l; DATA XREF from fcn.00000278 @ 0x9c3\l0x000009ca      mov edx, dword [var_60h]                               ; int64_t arg6\l0x000009cd      xor eax, eax\l0x000009cf      call 0x9d4\l; CALL XREF from fcn.00000278 @ 0x9cf\l0x000009d4      jmp 0xa0\l"]
	"0x000009d9" [URL="fcn.00000278/0x000009d9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from fcn.00000278 @ 0xe2, 0x7c5\l0x000009d9      mov rax, qword [0x000009e0]                            ; [0x9e0:8]=0x75d0453b48008b48 ; \"H\\x8b\"\l; DATA XREF from fcn.00000278 @ 0x9d9\l0x000009e0      mov rax, qword [rax]\l0x000009e3      cmp rax, qword [var_30h]\l0x000009e7      jne 0xa00\l"]
	"0x000009e9" [URL="fcn.00000278/0x000009e9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000009e9      mov eax, 1\l0x000009ee      add rsp, 0xc8\l0x000009f5      pop rbx\l0x000009f6      pop r12\l0x000009f8      pop r13\l0x000009fa      pop r14\l0x000009fc      pop r15\l0x000009fe      pop rbp\l0x000009ff      ret\l"]
	"0x00000a00" [URL="fcn.00000278/0x00000a00", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from fcn.00000278 @ 0x9e7\l0x00000a00      call str.bpool\l"]
        "0x00000090" -> "0x000000a0" [color="#3a96dd"];
        "0x000000a0" -> "0x000000df" [color="#13a10e"];
        "0x000000a0" -> "0x000000ce" [color="#c50f1f"];
        "0x000000ce" -> "0x000000df" [color="#3a96dd"];
        "0x000000df" -> "0x000009d9" [color="#13a10e"];
        "0x000000df" -> "0x000000e8" [color="#c50f1f"];
        "0x000000e8" -> "0x000000a0" [color="#13a10e"];
        "0x000000e8" -> "0x000000fe" [color="#c50f1f"];
        "0x000000fe" -> "0x00000090" [color="#13a10e"];
        "0x000000fe" -> "0x00000103" [color="#c50f1f"];
        "0x00000103" -> "0x0000073c" [color="#13a10e"];
        "0x00000103" -> "0x00000122" [color="#c50f1f"];
        "0x00000122" -> "0x0000014d" [color="#3a96dd"];
        "0x0000014d" -> "0x000001a5" [color="#3a96dd"];
        "0x000001a5" -> "0x000001b0" [color="#3a96dd"];
        "0x000001b0" -> "0x00000440" [color="#13a10e"];
        "0x000001b0" -> "0x000001d1" [color="#c50f1f"];
        "0x000001d1" -> "0x0000073c" [color="#13a10e"];
        "0x000001d1" -> "0x000001da" [color="#c50f1f"];
        "0x000001da" -> "0x0000073c" [color="#13a10e"];
        "0x000001da" -> "0x000001e8" [color="#c50f1f"];
        "0x000001e8" -> "0x000006bb" [color="#13a10e"];
        "0x000001e8" -> "0x000001ff" [color="#c50f1f"];
        "0x000001ff" -> "0x000002c0" [color="#13a10e"];
        "0x000001ff" -> "0x0000022e" [color="#c50f1f"];
        "0x0000022e" -> "0x00000261" [color="#13a10e"];
        "0x0000022e" -> "0x0000023e" [color="#c50f1f"];
        "0x0000023e" -> "0x00000261" [color="#3a96dd"];
        "0x00000261" -> "0x00000410" [color="#13a10e"];
        "0x00000261" -> "0x0000026a" [color="#c50f1f"];
        "0x0000026a" -> "0x00000270" [color="#3a96dd"];
        "0x00000270" -> "0x000002b2" [color="#3a96dd"];
        "0x00000278" -> "0x000002b2" [color="#3a96dd"];
        "0x000002b2" -> "0x00000270" [color="#13a10e"];
        "0x000002b2" -> "0x000002bb" [color="#c50f1f"];
        "0x000002bb" -> "0x00000410" [color="#3a96dd"];
        "0x000002c0" -> "0x0000022e" [color="#13a10e"];
        "0x000002c0" -> "0x0000036a" [color="#c50f1f"];
        "0x0000036a" -> "0x0000022e" [color="#13a10e"];
        "0x0000036a" -> "0x0000037a" [color="#c50f1f"];
        "0x0000037a" -> "0x0000022e" [color="#13a10e"];
        "0x0000037a" -> "0x00000392" [color="#c50f1f"];
        "0x00000392" -> "0x0000022e" [color="#13a10e"];
        "0x00000392" -> "0x0000039f" [color="#c50f1f"];
        "0x0000039f" -> "0x0000022e" [color="#13a10e"];
        "0x0000039f" -> "0x000003ac" [color="#c50f1f"];
        "0x000003ac" -> "0x000003c0" [color="#3a96dd"];
        "0x000003c0" -> "0x000003c0" [color="#13a10e"];
        "0x000003c0" -> "0x000003f8" [color="#c50f1f"];
        "0x000003f8" -> "0x0000022e" [color="#13a10e"];
        "0x000003f8" -> "0x00000405" [color="#c50f1f"];
        "0x00000405" -> "0x00000410" [color="#3a96dd"];
        "0x00000410" -> "0x000001b0" [color="#13a10e"];
        "0x00000410" -> "0x0000042f" [color="#c50f1f"];
        "0x0000042f" -> "0x000006bb" [color="#3a96dd"];
        "0x00000440" -> "0x0000073c" [color="#13a10e"];
        "0x00000440" -> "0x00000448" [color="#c50f1f"];
        "0x00000448" -> "0x00000672" [color="#13a10e"];
        "0x00000448" -> "0x00000450" [color="#c50f1f"];
        "0x00000450" -> "0x0000073c" [color="#13a10e"];
        "0x00000450" -> "0x0000045b" [color="#c50f1f"];
        "0x0000045b" -> "0x0000073c" [color="#13a10e"];
        "0x0000045b" -> "0x00000469" [color="#c50f1f"];
        "0x00000469" -> "0x000006bb" [color="#13a10e"];
        "0x00000469" -> "0x00000484" [color="#c50f1f"];
        "0x00000484" -> "0x000005d5" [color="#13a10e"];
        "0x00000484" -> "0x0000049d" [color="#c50f1f"];
        "0x0000049d" -> "0x000005d5" [color="#13a10e"];
        "0x0000049d" -> "0x00000552" [color="#c50f1f"];
        "0x00000552" -> "0x000005d5" [color="#13a10e"];
        "0x00000552" -> "0x0000055e" [color="#c50f1f"];
        "0x0000055e" -> "0x000005d5" [color="#13a10e"];
        "0x0000055e" -> "0x0000056a" [color="#c50f1f"];
        "0x0000056a" -> "0x000005d5" [color="#13a10e"];
        "0x0000056a" -> "0x00000573" [color="#c50f1f"];
        "0x00000573" -> "0x000005d5" [color="#13a10e"];
        "0x00000573" -> "0x0000057c" [color="#c50f1f"];
        "0x0000057c" -> "0x00000590" [color="#3a96dd"];
        "0x00000590" -> "0x00000590" [color="#13a10e"];
        "0x00000590" -> "0x000005c8" [color="#c50f1f"];
        "0x000005c8" -> "0x0000065b" [color="#13a10e"];
        "0x000005c8" -> "0x000005d5" [color="#c50f1f"];
        "0x000005d5" -> "0x00000607" [color="#13a10e"];
        "0x000005d5" -> "0x000005e4" [color="#c50f1f"];
        "0x000005e4" -> "0x00000607" [color="#3a96dd"];
        "0x00000607" -> "0x0000065b" [color="#13a10e"];
        "0x00000607" -> "0x0000060c" [color="#c50f1f"];
        "0x0000060c" -> "0x00000610" [color="#3a96dd"];
        "0x00000610" -> "0x00000610" [color="#13a10e"];
        "0x00000610" -> "0x0000065b" [color="#c50f1f"];
        "0x0000065b" -> "0x000001a5" [color="#13a10e"];
        "0x0000065b" -> "0x00000670" [color="#c50f1f"];
        "0x00000670" -> "0x000006bb" [color="#3a96dd"];
        "0x00000672" -> "0x0000014d" [color="#13a10e"];
        "0x00000672" -> "0x000006bb" [color="#c50f1f"];
        "0x000006bb" -> "0x0000073c" [color="#13a10e"];
        "0x000006bb" -> "0x000006bf" [color="#c50f1f"];
        "0x000006bf" -> "0x0000070d" [color="#13a10e"];
        "0x000006bf" -> "0x000006d9" [color="#c50f1f"];
        "0x000006d9" -> "0x000006f0" [color="#3a96dd"];
        "0x000006f0" -> "0x00000763" [color="#13a10e"];
        "0x000006f0" -> "0x00000701" [color="#c50f1f"];
        "0x00000701" -> "0x000006f0" [color="#13a10e"];
        "0x00000701" -> "0x0000070d" [color="#c50f1f"];
        "0x0000070d" -> "0x000000a0" [color="#3a96dd"];
        "0x0000073c" -> "0x000000a0" [color="#3a96dd"];
        "0x00000763" -> "0x000007ca" [color="#13a10e"];
        "0x00000763" -> "0x0000076e" [color="#c50f1f"];
        "0x0000076e" -> "0x00000912" [color="#13a10e"];
        "0x0000076e" -> "0x0000078e" [color="#c50f1f"];
        "0x0000078e" -> "0x00000912" [color="#13a10e"];
        "0x0000078e" -> "0x00000799" [color="#c50f1f"];
        "0x00000799" -> "0x00000912" [color="#13a10e"];
        "0x00000799" -> "0x000007a2" [color="#c50f1f"];
        "0x000007a2" -> "0x000000a0" [color="#13a10e"];
        "0x000007a2" -> "0x000007c5" [color="#c50f1f"];
        "0x000007c5" -> "0x000009d9" [color="#3a96dd"];
        "0x000007ca" -> "0x00000807" [color="#13a10e"];
        "0x000007ca" -> "0x000007e7" [color="#c50f1f"];
        "0x000007e7" -> "0x0000092b" [color="#13a10e"];
        "0x000007e7" -> "0x00000807" [color="#c50f1f"];
        "0x00000807" -> "0x00000835" [color="#13a10e"];
        "0x00000807" -> "0x00000815" [color="#c50f1f"];
        "0x00000815" -> "0x0000092b" [color="#13a10e"];
        "0x00000815" -> "0x00000835" [color="#c50f1f"];
        "0x00000835" -> "0x00000944" [color="#13a10e"];
        "0x00000835" -> "0x000008b2" [color="#c50f1f"];
        "0x000008b2" -> "0x00000976" [color="#13a10e"];
        "0x000008b2" -> "0x000008e8" [color="#c50f1f"];
        "0x000008e8" -> "0x000000a0" [color="#3a96dd"];
        "0x00000912" -> "0x000000a0" [color="#3a96dd"];
        "0x0000092b" -> "0x000000a0" [color="#3a96dd"];
        "0x00000944" -> "0x000000a0" [color="#3a96dd"];
        "0x00000976" -> "0x000000a0" [color="#13a10e"];
        "0x00000976" -> "0x000009b2" [color="#c50f1f"];
        "0x000009b2" -> "0x000000a0" [color="#3a96dd"];
        "0x000009d9" -> "0x00000a00" [color="#13a10e"];
        "0x000009d9" -> "0x000009e9" [color="#c50f1f"];
}
