digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00102811" [URL="sym.kill/0x00102811", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.exit @ 0x10165b\l  ; CALL XREF from sym.userret @ 0x105706\l  ; CALL XREF from sym.xsh_kill @ 0x11511a\l352: int sym.kill (pid_t pid, int sig);\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_8h @ ebp-0x8\l; arg int32_t arg_8h @ ebp+0x8\l0x00102811      push ebp\l0x00102812      mov ebp, esp\l0x00102814      push esi\l0x00102815      push ebx\l0x00102816      sub esp, 0x10\l0x00102819      call sym.__x86.get_pc_thunk.bx\l0x0010281e      add ebx, 0x1e7e2\l0x00102824      call loc.disable\l0x00102829      mov dword [var_10h], eax\l0x0010282c      cmp dword [arg_8h], 0\l0x00102830      js 0x10287c\l"]
	"0x00102832" [URL="sym.kill/0x00102832", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00102832      cmp dword [arg_8h], 0x63\l0x00102836      jg 0x10287c\l"]
	"0x00102838" [URL="sym.kill/0x00102838", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00102838      mov ecx, obj.proctab                                   ; 0x1212e0\l0x0010283e      mov edx, dword [arg_8h]\l0x00102841      mov eax, edx\l0x00102843      shl eax, 3\l0x00102846      sub eax, edx\l0x00102848      shl eax, 3\l0x0010284b      add eax, ecx\l0x0010284d      mov eax, dword [eax]\l0x0010284f      test ax, ax\l0x00102852      je 0x10287c\l"]
	"0x00102854" [URL="sym.kill/0x00102854", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00102854      cmp dword [arg_8h], 0\l0x00102858      je 0x10287c\l"]
	"0x0010285a" [URL="sym.kill/0x0010285a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010285a      mov edx, dword [arg_8h]\l0x0010285d      mov eax, edx\l0x0010285f      shl eax, 3\l0x00102862      sub eax, edx\l0x00102864      shl eax, 3\l0x00102867      mov edx, obj.proctab                                   ; 0x1212e0\l0x0010286d      add eax, edx\l0x0010286f      mov dword [var_14h], eax\l0x00102872      mov eax, dword [var_14h]\l0x00102875      mov eax, dword [eax]\l0x00102877      test ax, ax\l0x0010287a      jne 0x102894\l"]
	"0x0010287c" [URL="sym.kill/0x0010287c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.kill @ 0x102830, 0x102836, 0x102852, 0x102858\l0x0010287c      sub esp, 0xc\l0x0010287f      push dword [var_10h]\l0x00102882      call loc.restore\l0x00102887      add esp, 0x10\l0x0010288a      mov eax, 0xffffffff                                    ; -1\l0x0010288f      jmp 0x1029d2\l"]
	"0x00102894" [URL="sym.kill/0x00102894", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.kill @ 0x10287a\l0x00102894      mov eax, obj.prcount                                   ; 0x1228c0\l0x0010289a      mov eax, dword [eax]\l0x0010289c      lea edx, [eax - 1]\l0x0010289f      mov eax, obj.prcount                                   ; 0x1228c0\l0x001028a5      mov dword [eax], edx\l0x001028a7      mov eax, obj.prcount                                   ; 0x1228c0\l0x001028ad      mov eax, dword [eax]\l0x001028af      cmp eax, 1                                             ; 1\l0x001028b2      jg 0x1028b9\l"]
	"0x001028b4" [URL="sym.kill/0x001028b4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001028b4      call sym.xdone\l"]
	"0x001028b9" [URL="sym.kill/0x001028b9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.kill @ 0x1028b2\l0x001028b9      mov edx, dword [arg_8h]\l0x001028bc      mov eax, dword [var_14h]\l0x001028bf      mov eax, dword [eax + 0x24]\l0x001028c2      sub esp, 8\l0x001028c5      push edx\l0x001028c6      push eax\l0x001028c7      call sym.send                                          ; ssize_t send(int socket, void *buffer, size_t length, int flags)\l0x001028cc      add esp, 0x10\l0x001028cf      mov dword [var_ch], 0\l0x001028d6      jmp 0x1028f6\l"]
	"0x001028d8" [URL="sym.kill/0x001028d8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.kill @ 0x1028fa\l0x001028d8      mov eax, dword [var_14h]\l0x001028db      mov edx, dword [var_ch]\l0x001028de      add edx, 0x10                                          ; 16\l0x001028e1      mov ax, word [eax + edx*2 + 0xe]\l0x001028e6      cwde\l0x001028e7      sub esp, 0xc\l0x001028ea      push eax\l0x001028eb      call sym.close                                         ; int close(int fildes)\l0x001028f0      add esp, 0x10\l0x001028f3      inc dword [var_ch]\l"]
	"0x001028f6" [URL="sym.kill/0x001028f6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.kill @ 0x1028d6\l0x001028f6      cmp dword [var_ch], 2\l0x001028fa      jle 0x1028d8\l"]
	"0x001028fc" [URL="sym.kill/0x001028fc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001028fc      mov eax, dword [var_14h]\l0x001028ff      mov eax, dword [eax + 0xc]\l0x00102902      add eax, 7\l0x00102905      and eax, 0xfffffff8                                    ; 4294967288\l0x00102908      mov edx, eax\l0x0010290a      mov eax, dword [var_14h]\l0x0010290d      mov eax, dword [eax + 8]\l0x00102910      mov ecx, eax\l0x00102912      mov eax, dword [var_14h]\l0x00102915      mov eax, dword [eax + 0xc]\l0x00102918      add eax, 7\l0x0010291b      and eax, 0xfffffff8                                    ; 4294967288\l0x0010291e      sub ecx, eax\l0x00102920      mov eax, ecx\l0x00102922      add eax, 4\l0x00102925      sub esp, 8\l0x00102928      push edx\l0x00102929      push eax\l0x0010292a      call sym.freemem\l0x0010292f      add esp, 0x10\l0x00102932      mov eax, dword [var_14h]\l0x00102935      mov eax, dword [eax]\l0x00102937      and eax, 0xffff\l0x0010293c      cmp eax, 7                                             ; 7\l0x0010293f      ja loc..L8\l"]
	"0x00102941" [URL="sym.kill/0x00102941", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00102941      shl eax, 2\l0x00102944      mov eax, dword [eax + ebx - 0x8cd0]\l0x0010294b      add eax, ebx\l0x0010294d      jmp eax\l"]
	"0x001029b7" [URL="sym.kill/0x001029b7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.kill @ 0x10293f\l;-- .L8:\l0x001029b7      mov eax, dword [var_14h]\l0x001029ba      mov word [eax], 0\l; CODE XREF from loc..L12 @ +0x16\l0x001029bf      sub esp, 0xc\l0x001029c2      push dword [var_10h]\l0x001029c5      call loc.restore\l0x001029ca      add esp, 0x10\l0x001029cd      mov eax, 1\l"]
	"0x001029d2" [URL="sym.kill/0x001029d2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.kill @ 0x10288f\l0x001029d2      lea esp, [var_8h]\l0x001029d5      pop ebx\l0x001029d6      pop esi\l0x001029d7      pop ebp\l0x001029d8      ret\l"]
        "0x00102811" -> "0x0010287c" [color="#13a10e"];
        "0x00102811" -> "0x00102832" [color="#c50f1f"];
        "0x00102832" -> "0x0010287c" [color="#13a10e"];
        "0x00102832" -> "0x00102838" [color="#c50f1f"];
        "0x00102838" -> "0x0010287c" [color="#13a10e"];
        "0x00102838" -> "0x00102854" [color="#c50f1f"];
        "0x00102854" -> "0x0010287c" [color="#13a10e"];
        "0x00102854" -> "0x0010285a" [color="#c50f1f"];
        "0x0010285a" -> "0x00102894" [color="#13a10e"];
        "0x0010285a" -> "0x0010287c" [color="#c50f1f"];
        "0x0010287c" -> "0x001029d2" [color="#0037da"];
        "0x00102894" -> "0x001028b9" [color="#13a10e"];
        "0x00102894" -> "0x001028b4" [color="#c50f1f"];
        "0x001028b4" -> "0x001028b9" [color="#0037da"];
        "0x001028b9" -> "0x001028f6" [color="#0037da"];
        "0x001028d8" -> "0x001028f6" [color="#0037da"];
        "0x001028f6" -> "0x001028d8" [color="#13a10e"];
        "0x001028f6" -> "0x001028fc" [color="#c50f1f"];
        "0x001028fc" -> "0x001029b7" [color="#13a10e"];
        "0x001028fc" -> "0x00102941" [color="#c50f1f"];
        "0x001029b7" -> "0x001029d2" [color="#0037da"];
}
