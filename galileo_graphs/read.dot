digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00104666" [URL="sym.read/0x00104666", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; XREFS: CALL 0x0010b282  CALL 0x0010b5c5  CALL 0x0010b6ba  \l  ; XREFS: CALL 0x0010bd2a  CALL 0x0010be51  CALL 0x0010c2a9  \l  ; XREFS: CALL 0x0010c481  CALL 0x00110c72  CALL 0x001139b0  \l  ; XREFS: CALL 0x00115287  \l140: ssize_t sym.read (int fildes, void *buf, size_t nbyte);\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l0x00104666      push ebp\l0x00104667      mov ebp, esp\l0x00104669      push ebx\l0x0010466a      sub esp, 0x14\l0x0010466d      call sym.__x86.get_pc_thunk.bx\l0x00104672      add ebx, 0x1c98e\l0x00104678      call loc.disable\l0x0010467d      mov dword [var_ch], eax\l0x00104680      mov eax, dword [arg_8h]\l0x00104683      shr eax, 0x1f\l0x00104686      mov dl, al\l0x00104688      cmp dword [arg_8h], 0x17\l0x0010468c      setg al\l0x0010468f      or eax, edx\l0x00104691      test al, al\l0x00104693      je 0x1046aa\l"]
	"0x00104695" [URL="sym.read/0x00104695", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00104695      sub esp, 0xc\l0x00104698      push dword [var_ch]\l0x0010469b      call loc.restore\l0x001046a0      add esp, 0x10\l0x001046a3      mov eax, 0xffffffff                                    ; -1\l0x001046a8      jmp 0x1046ed\l"]
	"0x001046aa" [URL="sym.read/0x001046aa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.read @ 0x104693\l0x001046aa      mov edx, dword [arg_8h]\l0x001046ad      mov eax, edx\l0x001046af      shl eax, 4\l0x001046b2      sub eax, edx\l0x001046b4      shl eax, 2\l0x001046b7      mov edx, obj.devtab                                    ; 0x11f880\l0x001046bd      add eax, edx\l0x001046bf      mov dword [var_10h], eax\l0x001046c2      mov eax, dword [var_10h]\l0x001046c5      mov eax, dword [eax + 0x18]\l0x001046c8      sub esp, 4\l0x001046cb      push dword [arg_10h]\l0x001046ce      push dword [arg_ch]\l0x001046d1      push dword [var_10h]\l0x001046d4      call eax\l0x001046d6      add esp, 0x10\l0x001046d9      mov dword [var_14h], eax\l0x001046dc      sub esp, 0xc\l0x001046df      push dword [var_ch]\l0x001046e2      call loc.restore\l0x001046e7      add esp, 0x10\l0x001046ea      mov eax, dword [var_14h]\l"]
	"0x001046ed" [URL="sym.read/0x001046ed", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.read @ 0x1046a8\l0x001046ed      mov ebx, dword [var_4h]\l0x001046f0      leave\l0x001046f1      ret\l"]
        "0x00104666" -> "0x001046aa" [color="#13a10e"];
        "0x00104666" -> "0x00104695" [color="#c50f1f"];
        "0x00104695" -> "0x001046ed" [color="#0037da"];
        "0x001046aa" -> "0x001046ed" [color="#0037da"];
}
