digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00116c16" [URL="sym.xsh_udpdump/0x00116c16", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="728: sym.xsh_udpdump (int32_t arg_8h, int32_t arg_ch);\l; var int32_t var_40h @ ebp-0x40\l; var int32_t var_3ch @ ebp-0x3c\l; var int32_t var_38h @ ebp-0x38\l; var int32_t var_34h @ ebp-0x34\l; var int32_t var_30h @ ebp-0x30\l; var int32_t var_2ch @ ebp-0x2c\l; var int32_t var_28h @ ebp-0x28\l; var int32_t var_24h @ ebp-0x24\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_8h @ ebp-0x8\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l0x00116c16      push ebp\l0x00116c17      mov ebp, esp\l0x00116c19      push esi\l0x00116c1a      push ebx\l0x00116c1b      sub esp, 0x40\l0x00116c1e      call sym.__x86.get_pc_thunk.bx\l0x00116c23      add ebx, 0xa3dd\l0x00116c29      lea eax, [ebx - 0x6604]\l0x00116c2f      mov dword [var_40h], eax\l0x00116c32      lea eax, [ebx - 0x65fe]\l0x00116c38      mov dword [var_3ch], eax\l0x00116c3b      lea eax, [ebx - 0x65f8]\l0x00116c41      mov dword [var_38h], eax\l0x00116c44      cmp dword [arg_8h], 2\l0x00116c48      jne 0x116cd9\l"]
	"0x00116c4e" [URL="sym.xsh_udpdump/0x00116c4e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00116c4e      mov eax, dword [arg_ch]\l0x00116c51      add eax, 4\l0x00116c54      mov eax, dword [eax]\l0x00116c56      sub esp, 4\l0x00116c59      push 7                                                 ; 7\l0x00116c5b      lea edx, [ebx - 0x65f2]\l0x00116c61      push edx\l0x00116c62      push eax\l0x00116c63      call sym.strncmp                                       ; int strncmp(const char *s1, const char *s2, size_t n)\l0x00116c68      add esp, 0x10\l0x00116c6b      test eax, eax\l0x00116c6d      jne 0x116cd9\l"]
	"0x00116c6f" [URL="sym.xsh_udpdump/0x00116c6f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00116c6f      mov eax, dword [arg_ch]\l0x00116c72      mov eax, dword [eax]\l0x00116c74      sub esp, 8\l0x00116c77      push eax\l0x00116c78      lea eax, [ebx - 0x65eb]\l0x00116c7e      push eax\l0x00116c7f      call sym.printf                                        ; int printf(const char *format)\l0x00116c84      add esp, 0x10\l0x00116c87      sub esp, 0xc\l0x00116c8a      lea eax, [ebx - 0x65e1]\l0x00116c90      push eax\l0x00116c91      call sym.printf                                        ; int printf(const char *format)\l0x00116c96      add esp, 0x10\l0x00116c99      sub esp, 0xc\l0x00116c9c      lea eax, [ebx - 0x65d0]\l0x00116ca2      push eax\l0x00116ca3      call sym.printf                                        ; int printf(const char *format)\l0x00116ca8      add esp, 0x10\l0x00116cab      sub esp, 0xc\l0x00116cae      lea eax, [ebx - 0x65b1]\l0x00116cb4      push eax\l0x00116cb5      call sym.printf                                        ; int printf(const char *format)\l0x00116cba      add esp, 0x10\l0x00116cbd      sub esp, 0xc\l0x00116cc0      lea eax, [ebx - 0x65a4]\l0x00116cc6      push eax\l0x00116cc7      call sym.printf                                        ; int printf(const char *format)\l0x00116ccc      add esp, 0x10\l0x00116ccf      mov eax, 0\l0x00116cd4      jmp 0x116ee7\l"]
	"0x00116cd9" [URL="sym.xsh_udpdump/0x00116cd9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_udpdump @ 0x116c48, 0x116c6d\l0x00116cd9      cmp dword [arg_8h], 1\l0x00116cdd      jle 0x116d5d\l"]
	"0x00116cdf" [URL="sym.xsh_udpdump/0x00116cdf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00116cdf      mov eax, dword [arg_ch]\l0x00116ce2      mov edx, dword [eax]\l0x00116ce4      mov eax, obj.currpid                                   ; 0x1212c0\l0x00116cea      mov ecx, dword [eax]\l0x00116cec      mov esi, obj.proctab                                   ; 0x1212e0\l0x00116cf2      mov eax, ecx\l0x00116cf4      shl eax, 3\l0x00116cf7      sub eax, ecx\l0x00116cf9      shl eax, 3\l0x00116cfc      add eax, esi\l0x00116cfe      add eax, 0x32                                          ; 50\l0x00116d01      mov ax, word [eax]\l0x00116d04      cwde\l0x00116d05      sub esp, 4\l0x00116d08      push edx\l0x00116d09      lea edx, [ebx - 0x657f]\l0x00116d0f      push edx\l0x00116d10      push eax\l0x00116d11      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00116d16      add esp, 0x10\l0x00116d19      mov eax, dword [arg_ch]\l0x00116d1c      mov edx, dword [eax]\l0x00116d1e      mov eax, obj.currpid                                   ; 0x1212c0\l0x00116d24      mov ecx, dword [eax]\l0x00116d26      mov esi, obj.proctab                                   ; 0x1212e0\l0x00116d2c      mov eax, ecx\l0x00116d2e      shl eax, 3\l0x00116d31      sub eax, ecx\l0x00116d33      shl eax, 3\l0x00116d36      add eax, esi\l0x00116d38      add eax, 0x32                                          ; 50\l0x00116d3b      mov ax, word [eax]\l0x00116d3e      cwde\l0x00116d3f      sub esp, 4\l0x00116d42      push edx\l0x00116d43      lea edx, [ebx - 0x6564]\l0x00116d49      push edx\l0x00116d4a      push eax\l0x00116d4b      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00116d50      add esp, 0x10\l0x00116d53      mov eax, 1\l0x00116d58      jmp 0x116ee7\l"]
	"0x00116d5d" [URL="sym.xsh_udpdump/0x00116d5d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_udpdump @ 0x116cdd\l0x00116d5d      sub esp, 0xc\l0x00116d60      lea eax, [ebx - 0x653e]\l0x00116d66      push eax\l0x00116d67      lea eax, [ebx - 0x6539]\l0x00116d6d      push eax\l0x00116d6e      lea eax, [ebx - 0x6535]\l0x00116d74      push eax\l0x00116d75      lea eax, [ebx - 0x652c]\l0x00116d7b      push eax\l0x00116d7c      lea eax, [ebx - 0x6523]\l0x00116d82      push eax\l0x00116d83      lea eax, [ebx - 0x6519]\l0x00116d89      push eax\l0x00116d8a      lea eax, [ebx - 0x6513]\l0x00116d90      push eax\l0x00116d91      lea eax, [ebx - 0x650d]\l0x00116d97      push eax\l0x00116d98      lea eax, [ebx - 0x6504]\l0x00116d9e      push eax\l0x00116d9f      call sym.printf                                        ; int printf(const char *format)\l0x00116da4      add esp, 0x30\l0x00116da7      sub esp, 0xc\l0x00116daa      lea eax, [ebx - 0x64dd]\l0x00116db0      push eax\l0x00116db1      lea eax, [ebx - 0x64d8]\l0x00116db7      push eax\l0x00116db8      lea eax, [ebx - 0x64d4]\l0x00116dbe      push eax\l0x00116dbf      lea eax, [ebx - 0x64d4]\l0x00116dc5      push eax\l0x00116dc6      lea eax, [ebx - 0x64cb]\l0x00116dcc      push eax\l0x00116dcd      lea eax, [ebx - 0x64bb]\l0x00116dd3      push eax\l0x00116dd4      lea eax, [ebx - 0x64bb]\l0x00116dda      push eax\l0x00116ddb      lea eax, [ebx - 0x64bb]\l0x00116de1      push eax\l0x00116de2      lea eax, [ebx - 0x64b4]\l0x00116de8      push eax\l0x00116de9      call sym.printf                                        ; int printf(const char *format)\l0x00116dee      add esp, 0x30\l0x00116df1      mov dword [var_ch], 0\l0x00116df8      jmp 0x116ed8\l"]
	"0x00116dfd" [URL="sym.xsh_udpdump/0x00116dfd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_udpdump @ 0x116edc\l0x00116dfd      mov edx, dword [var_ch]\l0x00116e00      mov eax, edx\l0x00116e02      shl eax, 4\l0x00116e05      sub eax, edx\l0x00116e07      shl eax, 2\l0x00116e0a      mov edx, obj.udptab                                    ; 0x1402c0\l0x00116e10      add eax, edx\l0x00116e12      mov dword [var_10h], eax\l0x00116e15      mov eax, dword [var_10h]\l0x00116e18      mov eax, dword [eax]\l0x00116e1a      test eax, eax\l0x00116e1c      jne 0x116e38\l"]
	"0x00116e1e" [URL="sym.xsh_udpdump/0x00116e1e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00116e1e      sub esp, 8\l0x00116e21      push dword [var_ch]\l0x00116e24      lea eax, [ebx - 0x6492]\l0x00116e2a      push eax\l0x00116e2b      call sym.printf                                        ; int printf(const char *format)\l0x00116e30      add esp, 0x10\l0x00116e33      jmp 0x116ed5\l"]
	"0x00116e38" [URL="sym.xsh_udpdump/0x00116e38", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_udpdump @ 0x116e1c\l0x00116e38      mov eax, dword [var_10h]\l0x00116e3b      mov eax, dword [eax + 4]\l0x00116e3e      mov dword [var_14h], eax\l0x00116e41      mov eax, dword [var_14h]\l0x00116e44      shr eax, 0x18\l0x00116e47      mov dword [var_18h], eax\l0x00116e4a      mov eax, dword [var_14h]\l0x00116e4d      shr eax, 0x10\l0x00116e50      and eax, 0xff                                          ; 255\l0x00116e55      mov dword [var_1ch], eax\l0x00116e58      mov eax, dword [var_14h]\l0x00116e5b      shr eax, 8\l0x00116e5e      and eax, 0xff                                          ; 255\l0x00116e63      mov dword [var_20h], eax\l0x00116e66      mov eax, dword [var_14h]\l0x00116e69      and eax, 0xff                                          ; 255\l0x00116e6e      mov dword [var_24h], eax\l0x00116e71      mov eax, dword [var_10h]\l0x00116e74      mov eax, dword [eax + 8]\l0x00116e77      and eax, 0xffff\l0x00116e7c      mov dword [var_28h], eax\l0x00116e7f      mov eax, dword [var_10h]\l0x00116e82      mov ax, word [eax + 0xa]\l0x00116e86      and eax, 0xffff\l0x00116e8b      mov dword [var_2ch], eax\l0x00116e8e      mov eax, dword [var_10h]\l0x00116e91      mov eax, dword [eax + 0x18]\l0x00116e94      mov dword [var_30h], eax\l0x00116e97      mov eax, dword [var_10h]\l0x00116e9a      mov eax, dword [eax]\l0x00116e9c      mov dword [var_34h], eax\l0x00116e9f      mov eax, dword [var_10h]\l0x00116ea2      mov edx, dword [eax + 0x14]\l0x00116ea5      mov eax, dword [var_34h]\l0x00116ea8      mov eax, dword [ebp + eax*4 - 0x40]\l0x00116eac      sub esp, 8\l0x00116eaf      push edx\l0x00116eb0      push dword [var_30h]\l0x00116eb3      push dword [var_2ch]\l0x00116eb6      push dword [var_28h]\l0x00116eb9      push dword [var_24h]\l0x00116ebc      push dword [var_20h]\l0x00116ebf      push dword [var_1ch]\l0x00116ec2      push dword [var_18h]\l0x00116ec5      push eax\l0x00116ec6      lea eax, [ebx - 0x6474]\l0x00116ecc      push eax\l0x00116ecd      call sym.printf                                        ; int printf(const char *format)\l0x00116ed2      add esp, 0x30\l"]
	"0x00116ed5" [URL="sym.xsh_udpdump/0x00116ed5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_udpdump @ 0x116e33\l0x00116ed5      inc dword [var_ch]\l"]
	"0x00116ed8" [URL="sym.xsh_udpdump/0x00116ed8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_udpdump @ 0x116df8\l0x00116ed8      cmp dword [var_ch], 5\l0x00116edc      jle 0x116dfd\l"]
	"0x00116ee2" [URL="sym.xsh_udpdump/0x00116ee2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00116ee2      mov eax, 0\l"]
	"0x00116ee7" [URL="sym.xsh_udpdump/0x00116ee7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_udpdump @ 0x116cd4, 0x116d58\l0x00116ee7      lea esp, [var_8h]\l0x00116eea      pop ebx\l0x00116eeb      pop esi\l0x00116eec      pop ebp\l0x00116eed      ret\l"]
        "0x00116c16" -> "0x00116cd9" [color="#13a10e"];
        "0x00116c16" -> "0x00116c4e" [color="#c50f1f"];
        "0x00116c4e" -> "0x00116cd9" [color="#13a10e"];
        "0x00116c4e" -> "0x00116c6f" [color="#c50f1f"];
        "0x00116c6f" -> "0x00116ee7" [color="#0037da"];
        "0x00116cd9" -> "0x00116d5d" [color="#13a10e"];
        "0x00116cd9" -> "0x00116cdf" [color="#c50f1f"];
        "0x00116cdf" -> "0x00116ee7" [color="#0037da"];
        "0x00116d5d" -> "0x00116ed8" [color="#0037da"];
        "0x00116dfd" -> "0x00116e38" [color="#13a10e"];
        "0x00116dfd" -> "0x00116e1e" [color="#c50f1f"];
        "0x00116e1e" -> "0x00116ed5" [color="#0037da"];
        "0x00116e38" -> "0x00116ed5" [color="#0037da"];
        "0x00116ed5" -> "0x00116ed8" [color="#0037da"];
        "0x00116ed8" -> "0x00116dfd" [color="#13a10e"];
        "0x00116ed8" -> "0x00116ee2" [color="#c50f1f"];
        "0x00116ee2" -> "0x00116ee7" [color="#0037da"];
}
