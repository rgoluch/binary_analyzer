digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010d25e" [URL="sym.rfscontrol/0x0010d25e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="163: sym.rfscontrol (int32_t arg_ch, int32_t arg_10h);\l; var int32_t var_a0h @ ebp-0xa0\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; var int32_t var_148h @ esp+0x4\l; var int32_t var_144h @ esp+0x8\l0x0010d25e      push ebp\l0x0010d25f      mov ebp, esp\l0x0010d261      sub esp, 0x148\l0x0010d267      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010d26c      mov dword [esp], eax\l0x0010d26f      call sym.wait                                          ; pid_t wait(int *wstatus)\l0x0010d274      mov eax, dword [arg_10h]\l0x0010d277      mov dword [var_14h], eax\l0x0010d27a      lea eax, [var_a0h]\l0x0010d280      add eax, 8\l0x0010d283      mov dword [var_10h], eax\l0x0010d286      mov dword [var_ch], 0\l0x0010d28d      mov dword [var_144h], 0x80                             ; [0x80:4]=-1 ; 128\l0x0010d295      mov dword [var_148h], 0\l0x0010d29d      mov eax, dword [var_10h]\l0x0010d2a0      mov dword [esp], eax\l0x0010d2a3      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x0010d2a8      jmp 0x10d2ca\l"]
	"0x0010d2aa" [URL="sym.rfscontrol/0x0010d2aa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rfscontrol @ 0x10d2e4\l0x0010d2aa      inc dword [var_ch]\l0x0010d2ad      cmp dword [var_ch], 0x7e\l0x0010d2b1      jle 0x10d2ca\l"]
	"0x0010d2b3" [URL="sym.rfscontrol/0x0010d2b3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010d2b3      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010d2b8      mov dword [esp], eax\l0x0010d2bb      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010d2c0      mov eax, 0xffffffff                                    ; -1\l0x0010d2c5      jmp loc.0010d4b4\l"]
	"0x0010d2ca" [URL="sym.rfscontrol/0x0010d2ca", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.rfscontrol @ 0x10d2a8, 0x10d2b1\l0x0010d2ca      mov eax, dword [var_10h]\l0x0010d2cd      lea edx, [eax + 1]\l0x0010d2d0      mov dword [var_10h], edx\l0x0010d2d3      mov edx, dword [var_14h]\l0x0010d2d6      lea ecx, [edx + 1]\l0x0010d2d9      mov dword [var_14h], ecx\l0x0010d2dc      mov dl, byte [edx]\l0x0010d2de      mov byte [eax], dl\l0x0010d2e0      mov al, byte [eax]\l0x0010d2e2      test al, al\l0x0010d2e4      jne 0x10d2aa\l"]
	"0x0010d2e6" [URL="sym.rfscontrol/0x0010d2e6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010d2e6      cmp dword [arg_ch], 5\l0x0010d2ea      ja 0x10d47b\l"]
	"0x0010d2f0" [URL="sym.rfscontrol/0x0010d2f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010d2f0      mov eax, dword [arg_ch]\l0x0010d2f3      shl eax, 2\l0x0010d2f6      add eax, 0x118db4                                      ; \"{\\xd4\\x10\"\l0x0010d2fb      mov eax, dword [eax]\l0x0010d2fd      jmp eax\l"]
        "0x0010d25e" -> "0x0010d2ca" [color="#0037da"];
        "0x0010d2aa" -> "0x0010d2ca" [color="#13a10e"];
        "0x0010d2aa" -> "0x0010d2b3" [color="#c50f1f"];
        "0x0010d2ca" -> "0x0010d2aa" [color="#13a10e"];
        "0x0010d2ca" -> "0x0010d2e6" [color="#c50f1f"];
        "0x0010d2e6" -> "0x0010d2f0" [color="#c50f1f"];
}
