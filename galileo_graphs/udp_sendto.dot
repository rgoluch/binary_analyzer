digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00113119" [URL="sym.udp_sendto/0x00113119", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; XREFS: CALL 0x0010a167  CALL 0x0010e747  CALL 0x0010ea1e  \l  ; XREFS: CALL 0x0011240b  CALL 0x00112872  CALL 0x0011776c  \l446: sym.udp_sendto (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h);\l; var int32_t var_2ch @ ebp-0x2c\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; arg int32_t arg_14h @ ebp+0x14\l; arg int32_t arg_18h @ ebp+0x18\l0x00113119      push ebp\l0x0011311a      mov ebp, esp\l0x0011311c      push ebx\l0x0011311d      sub esp, 0x34\l0x00113120      call sym.__x86.get_pc_thunk.bx\l0x00113125      add ebx, 0xdedb\l0x0011312b      mov eax, dword [arg_10h]\l0x0011312e      mov word [var_2ch], ax\l0x00113132      call loc.disable\l0x00113137      mov dword [var_ch], eax\l0x0011313a      cmp dword [arg_8h], 0\l0x0011313e      js 0x113146\l"]
	"0x00113140" [URL="sym.udp_sendto/0x00113140", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00113140      cmp dword [arg_8h], 5\l0x00113144      jle 0x11315e\l"]
	"0x00113146" [URL="sym.udp_sendto/0x00113146", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.udp_sendto @ 0x11313e\l0x00113146      sub esp, 0xc\l0x00113149      push dword [var_ch]\l0x0011314c      call loc.restore\l0x00113151      add esp, 0x10\l0x00113154      mov eax, 0xffffffff                                    ; -1\l0x00113159      jmp 0x1132d2\l"]
	"0x0011315e" [URL="sym.udp_sendto/0x0011315e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.udp_sendto @ 0x113144\l0x0011315e      mov edx, dword [arg_8h]\l0x00113161      mov eax, edx\l0x00113163      shl eax, 4\l0x00113166      sub eax, edx\l0x00113168      shl eax, 2\l0x0011316b      mov edx, obj.udptab                                    ; 0x1402c0\l0x00113171      add eax, edx\l0x00113173      mov dword [var_10h], eax\l0x00113176      mov eax, dword [var_10h]\l0x00113179      mov eax, dword [eax]\l0x0011317b      test eax, eax\l0x0011317d      jne 0x113197\l"]
	"0x0011317f" [URL="sym.udp_sendto/0x0011317f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0011317f      sub esp, 0xc\l0x00113182      push dword [var_ch]\l0x00113185      call loc.restore\l0x0011318a      add esp, 0x10\l0x0011318d      mov eax, 0xffffffff                                    ; -1\l0x00113192      jmp 0x1132d2\l"]
	"0x00113197" [URL="sym.udp_sendto/0x00113197", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.udp_sendto @ 0x11317d\l0x00113197      mov eax, obj.netbufpool                                ; 0x1401e0\l0x0011319d      mov eax, dword [eax]\l0x0011319f      sub esp, 0xc\l0x001131a2      push eax\l0x001131a3      call sym.getbuf\l0x001131a8      add esp, 0x10\l0x001131ab      mov dword [var_14h], eax\l0x001131ae      cmp dword [var_14h], 0xffffffff\l0x001131b2      jne 0x1131cc\l"]
	"0x001131b4" [URL="sym.udp_sendto/0x001131b4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001131b4      sub esp, 0xc\l0x001131b7      push dword [var_ch]\l0x001131ba      call loc.restore\l0x001131bf      add esp, 0x10\l0x001131c2      mov eax, 0xffffffff                                    ; -1\l0x001131c7      jmp 0x1132d2\l"]
	"0x001131cc" [URL="sym.udp_sendto/0x001131cc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.udp_sendto @ 0x1131b2\l0x001131cc      mov eax, dword [arg_18h]\l0x001131cf      add eax, 0x2a                                          ; 42\l0x001131d2      mov dword [var_18h], eax\l0x001131d5      mov eax, dword [var_14h]\l0x001131d8      lea edx, [eax + 6]\l0x001131db      sub esp, 4\l0x001131de      push 6                                                 ; 6\l0x001131e0      mov eax, obj.NetData                                   ; 0x140200\l0x001131e6      lea eax, [eax + 0x21]\l0x001131e9      push eax\l0x001131ea      push edx\l0x001131eb      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x001131f0      add esp, 0x10\l0x001131f3      mov eax, dword [var_14h]\l0x001131f6      mov word [eax + 0xc], 0x800                            ; [0x800:2]=0xffff ; 2048\l0x001131fc      mov eax, dword [var_14h]\l0x001131ff      mov byte [eax + 0xe], 0x45                             ; 'E'\l                                                                       ; [0x45:1]=255 ; 69\l0x00113203      mov eax, dword [var_14h]\l0x00113206      mov byte [eax + 0xf], 0\l0x0011320a      mov eax, dword [var_18h]\l0x0011320d      sub eax, 0xe                                           ; 14\l0x00113210      mov edx, dword [var_14h]\l0x00113213      mov word [edx + 0x10], ax\l0x00113217      mov ax, word [ebx - 0x1096]\l0x0011321e      lea edx, [eax + 1]\l0x00113221      mov word [ebx - 0x1096], dx\l0x00113228      mov edx, dword [var_14h]\l0x0011322b      mov word [edx + 0x12], ax\l0x0011322f      mov eax, dword [var_14h]\l0x00113232      mov word [eax + 0x14], 0\l0x00113238      mov eax, dword [var_14h]\l0x0011323b      mov byte [eax + 0x16], 0xff                            ; [0xff:1]=255 ; 255\l0x0011323f      mov eax, dword [var_14h]\l0x00113242      mov byte [eax + 0x17], 0x11                            ; [0x11:1]=255 ; 17\l0x00113246      mov eax, dword [var_14h]\l0x00113249      mov word [eax + 0x18], 0\l0x0011324f      mov eax, obj.NetData                                   ; 0x140200\l0x00113255      mov edx, dword [eax]\l0x00113257      mov eax, dword [var_14h]\l0x0011325a      mov dword [eax + 0x1a], edx\l0x0011325d      mov eax, dword [var_14h]\l0x00113260      mov edx, dword [arg_ch]\l0x00113263      mov dword [eax + 0x1e], edx\l0x00113266      mov eax, dword [var_10h]\l0x00113269      mov ax, word [eax + 0xa]\l0x0011326d      mov edx, dword [var_14h]\l0x00113270      mov word [edx + 0x22], ax\l0x00113274      mov edx, dword [var_14h]\l0x00113277      mov eax, dword [var_2ch]\l0x0011327a      mov word [edx + 0x24], ax\l0x0011327e      mov eax, dword [arg_18h]\l0x00113281      add eax, 8\l0x00113284      mov edx, dword [var_14h]\l0x00113287      mov word [edx + 0x26], ax\l0x0011328b      mov eax, dword [var_14h]\l0x0011328e      mov word [eax + 0x28], 0\l0x00113294      mov eax, dword [var_14h]\l0x00113297      add eax, 0x2a                                          ; 42\l0x0011329a      mov dword [var_1ch], eax\l0x0011329d      sub esp, 4\l0x001132a0      push dword [arg_18h]\l0x001132a3      push dword [arg_14h]\l0x001132a6      push dword [var_1ch]\l0x001132a9      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x001132ae      add esp, 0x10\l0x001132b1      sub esp, 0xc\l0x001132b4      push dword [var_14h]\l0x001132b7      call sym.ip_send\l0x001132bc      add esp, 0x10\l0x001132bf      sub esp, 0xc\l0x001132c2      push dword [var_ch]\l0x001132c5      call loc.restore\l0x001132ca      add esp, 0x10\l0x001132cd      mov eax, 1\l"]
	"0x001132d2" [URL="sym.udp_sendto/0x001132d2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.udp_sendto @ 0x113159, 0x113192, 0x1131c7\l0x001132d2      mov ebx, dword [var_4h]\l0x001132d5      leave\l0x001132d6      ret\l"]
        "0x00113119" -> "0x00113146" [color="#13a10e"];
        "0x00113119" -> "0x00113140" [color="#c50f1f"];
        "0x00113140" -> "0x0011315e" [color="#13a10e"];
        "0x00113140" -> "0x00113146" [color="#c50f1f"];
        "0x00113146" -> "0x001132d2" [color="#0037da"];
        "0x0011315e" -> "0x00113197" [color="#13a10e"];
        "0x0011315e" -> "0x0011317f" [color="#c50f1f"];
        "0x0011317f" -> "0x001132d2" [color="#0037da"];
        "0x00113197" -> "0x001131cc" [color="#13a10e"];
        "0x00113197" -> "0x001131b4" [color="#c50f1f"];
        "0x001131b4" -> "0x001132d2" [color="#0037da"];
        "0x001131cc" -> "0x001132d2" [color="#0037da"];
}
