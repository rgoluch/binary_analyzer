digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x001094da" [URL="sym.ethinit/0x001094da", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="1335: sym.ethinit (int32_t arg_8h);\l; var int32_t var_40h @ ebp-0x40\l; var int32_t var_3ch @ ebp-0x3c\l; var int32_t var_38h @ ebp-0x38\l; var int32_t var_34h @ ebp-0x34\l; var int32_t var_30h @ ebp-0x30\l; var int32_t var_2ch @ ebp-0x2c\l; var int32_t var_28h @ ebp-0x28\l; var int32_t var_24h @ ebp-0x24\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; arg int32_t arg_8h @ ebp+0x8\l; var int32_t var_68h @ esp+0x4\l; var int32_t var_64h @ esp+0x8\l; var int32_t var_60h @ esp+0xc\l; var int32_t var_5ch @ esp+0x10\l; var int32_t var_58h @ esp+0x14\l; var int32_t var_54h @ esp+0x18\l0x001094da      push ebp\l0x001094db      mov ebp, esp\l0x001094dd      push edi\l0x001094de      push esi\l0x001094df      push ebx\l0x001094e0      sub esp, 0x5c\l0x001094e3      mov eax, dword [arg_8h]\l0x001094e6      mov edx, dword [eax + 4]\l0x001094e9      mov eax, edx\l0x001094eb      shl eax, 2\l0x001094ee      add eax, edx\l0x001094f0      shl eax, 3\l0x001094f3      sub eax, edx\l0x001094f5      shl eax, 3\l0x001094f8      add eax, obj.ethertab                                  ; 0x125560\l0x001094fd      mov dword [var_24h], eax\l0x00109500      mov eax, dword [arg_8h]\l0x00109503      mov edx, dword [eax + 0x30]\l0x00109506      mov eax, dword [var_24h]\l0x00109509      mov dword [eax + 0x10], edx\l0x0010950c      mov eax, dword [var_24h]\l0x0010950f      mov eax, dword [eax + 0x10]\l0x00109512      mov dword [var_28h], eax\l0x00109515      mov eax, dword [var_24h]\l0x00109518      mov eax, dword [eax + 0x14]\l0x0010951b      mov dword [var_64h], 6\l0x00109523      mov dword [var_68h], 4\l0x0010952b      mov dword [esp], eax\l0x0010952e      call sym.pci_write_config_word\l0x00109533      mov eax, dword [var_28h]\l0x00109536      mov dword [esp], eax\l0x00109539      call sym.eth_phy_reset\l0x0010953e      mov dword [var_2ch], eax\l0x00109541      cmp dword [var_2ch], 0xffffffff\l0x00109545      jne 0x109551\l"]
	"0x00109547" [URL="sym.ethinit/0x00109547", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109547      mov eax, 0xffffffff                                    ; -1\l0x0010954c      jmp 0x109a09\l"]
	"0x00109551" [URL="sym.ethinit/0x00109551", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x109545\l0x00109551      mov eax, dword [var_28h]\l0x00109554      mov eax, dword [eax + 0x1000]\l0x0010955a      or eax, 1\l0x0010955d      mov edx, eax\l0x0010955f      mov eax, dword [var_28h]\l0x00109562      mov dword [eax + 0x1000], edx\l0x00109568      mov dword [var_1ch], 0\l0x0010956f      jmp 0x109594\l"]
	"0x00109571" [URL="sym.ethinit/0x00109571", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x1095a2\l0x00109571      mov ebx, 0\l0x00109576      jmp 0x109579\l"]
	"0x00109578" [URL="sym.ethinit/0x00109578", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x10957f\l0x00109578      inc ebx\l"]
	"0x00109579" [URL="sym.ethinit/0x00109579", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x109576\l0x00109579      cmp ebx, 0x2faf07f\l0x0010957f      jle 0x109578\l"]
	"0x00109581" [URL="sym.ethinit/0x00109581", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109581      inc dword [var_1ch]\l0x00109584      cmp dword [var_1ch], 3\l0x00109588      jbe 0x109594\l"]
	"0x0010958a" [URL="sym.ethinit/0x0010958a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010958a      mov eax, 0xffffffff                                    ; -1\l0x0010958f      jmp 0x109a09\l"]
	"0x00109594" [URL="sym.ethinit/0x00109594", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.ethinit @ 0x10956f, 0x109588\l0x00109594      mov eax, dword [var_28h]\l0x00109597      mov eax, dword [eax + 0x1000]\l0x0010959d      and eax, 1\l0x001095a0      test eax, eax\l0x001095a2      jne 0x109571\l"]
	"0x001095a4" [URL="sym.ethinit/0x001095a4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001095a4      mov eax, dword [var_28h]\l0x001095a7      mov eax, dword [eax + 0x1000]\l0x001095ad      mov dword [var_30h], eax\l0x001095b0      and dword [var_30h], 0xfbffc0ff                        ; [0xfbffc0ff:4]=-1\l0x001095b7      or dword [var_30h], 0x80011000                         ; [0x80011000:4]=-1\l0x001095be      mov eax, dword [var_28h]\l0x001095c1      mov edx, dword [var_30h]\l0x001095c4      mov dword [eax + 0x1000], edx\l0x001095ca      mov eax, dword [var_28h]\l0x001095cd      mov eax, dword [eax + 0x1018]\l0x001095d3      or eax, 0x200004\l0x001095d8      mov edx, eax\l0x001095da      mov eax, dword [var_28h]\l0x001095dd      mov dword [eax + 0x1018], edx\l0x001095e3      mov ebx, dword [arg_8h]\l0x001095e6      mov eax, dword [arg_8h]\l0x001095e9      mov ecx, dword [eax + 0x34]\l0x001095ec      mov eax, dword [arg_8h]\l0x001095ef      mov al, byte [eax + 0x38]\l0x001095f2      xor edx, edx\l0x001095f4      mov dl, al\l0x001095f6      mov eax, dword [var_24h]\l0x001095f9      mov eax, dword [eax + 0x14]\l0x001095fc      mov dword [var_60h], ebx\l0x00109600      mov dword [var_64h], ecx\l0x00109604      mov dword [var_68h], edx\l0x00109608      mov dword [esp], eax\l0x0010960b      call sym.pci_set_ivec\l0x00109610      mov eax, dword [var_28h]\l0x00109613      mov eax, dword [eax]\l0x00109615      or ah, 0x48                                            ; 72\l0x00109618      mov edx, eax\l0x0010961a      mov eax, dword [var_28h]\l0x0010961d      mov dword [eax], edx\l0x0010961f      mov eax, dword [var_28h]\l0x00109622      mov eax, dword [eax + 0x100]\l0x00109628      or eax, 9\l0x0010962b      mov edx, eax\l0x0010962d      mov eax, dword [var_28h]\l0x00109630      mov dword [eax + 0x100], edx\l0x00109636      mov eax, dword [var_24h]\l0x00109639      add eax, 0x54                                          ; 84\l0x0010963c      mov dword [var_64h], 6\l0x00109644      mov dword [var_68h], eax\l0x00109648      mov dword [esp], 3\l0x0010964f      call sym.get_quark_pdat_entry_data_by_id\l0x00109654      mov eax, dword [var_24h]\l0x00109657      mov al, byte [eax + 0x59]\l0x0010965a      mov edi, eax\l0x0010965c      and edi, 0xff                                          ; 255\l0x00109662      mov eax, dword [var_24h]\l0x00109665      mov al, byte [eax + 0x58]\l0x00109668      mov esi, eax\l0x0010966a      and esi, 0xff                                          ; 255\l0x00109670      mov eax, dword [var_24h]\l0x00109673      mov al, byte [eax + 0x57]\l0x00109676      xor ebx, ebx\l0x00109678      mov bl, al\l0x0010967a      mov eax, dword [var_24h]\l0x0010967d      mov al, byte [eax + 0x56]\l0x00109680      xor ecx, ecx\l0x00109682      mov cl, al\l0x00109684      mov eax, dword [var_24h]\l0x00109687      mov al, byte [eax + 0x55]\l0x0010968a      xor edx, edx\l0x0010968c      mov dl, al\l0x0010968e      mov eax, dword [var_24h]\l0x00109691      mov al, byte [eax + 0x54]\l0x00109694      and eax, 0xff                                          ; 255\l0x00109699      mov dword [var_54h], edi\l0x0010969d      mov dword [var_58h], esi\l0x001096a1      mov dword [var_5ch], ebx\l0x001096a5      mov dword [var_60h], ecx\l0x001096a9      mov dword [var_64h], edx\l0x001096ad      mov dword [var_68h], eax\l0x001096b1      mov dword [esp], 0x1188e8                              ; [0x1188e8:4]=0x2043414d ; \"MAC address is %02x:%02x:%02x:%02x:%02x:%02x\\n\"\l0x001096b8      call sym.kprintf\l0x001096bd      mov eax, dword [var_24h]\l0x001096c0      add eax, 0x54                                          ; 84\l0x001096c3      mov edx, dword [eax]\l0x001096c5      mov eax, dword [var_28h]\l0x001096c8      mov dword [eax + 0x44], edx\l0x001096cb      mov eax, dword [var_24h]\l0x001096ce      add eax, 0x58                                          ; 88\l0x001096d1      mov ax, word [eax]\l0x001096d4      and eax, 0xffff\l0x001096d9      or eax, 0x80000000\l0x001096de      mov edx, eax\l0x001096e0      mov eax, dword [var_28h]\l0x001096e3      mov dword [eax + 0x40], edx\l0x001096e6      mov eax, dword [var_24h]\l0x001096e9      mov dword [eax + 0x4c], 0x10                           ; [0x10:4]=-1 ; 16\l0x001096f0      mov eax, dword [var_24h]\l0x001096f3      mov eax, dword [eax + 0x4c]\l0x001096f6      inc eax\l0x001096f7      shl eax, 4\l0x001096fa      mov dword [esp], eax\l0x001096fd      call sym.getmem\l0x00109702      mov dword [var_34h], eax\l0x00109705      mov eax, dword [var_34h]\l0x00109708      cmp eax, 0xffffffff\l0x0010970b      jne 0x109717\l"]
	"0x0010970d" [URL="sym.ethinit/0x0010970d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010970d      mov eax, 0xffffffff                                    ; -1\l0x00109712      jmp 0x109a09\l"]
	"0x00109717" [URL="sym.ethinit/0x00109717", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x10970b\l0x00109717      mov eax, dword [var_24h]\l0x0010971a      mov eax, dword [eax + 0x4c]\l0x0010971d      inc eax\l0x0010971e      shl eax, 4\l0x00109721      mov dword [var_64h], eax\l0x00109725      mov dword [var_68h], 0\l0x0010972d      mov eax, dword [var_34h]\l0x00109730      mov dword [esp], eax\l0x00109733      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x00109738      mov eax, dword [var_34h]\l0x0010973b      add eax, 3\l0x0010973e      and eax, 0xfffffffc                                    ; 4294967292\l0x00109741      mov edx, eax\l0x00109743      mov eax, dword [var_24h]\l0x00109746      mov dword [eax + 0x3c], edx\l0x00109749      mov eax, dword [var_24h]\l0x0010974c      mov eax, dword [eax + 0x4c]\l0x0010974f      lea edx, [eax + 1]\l0x00109752      mov eax, edx\l0x00109754      add eax, eax\l0x00109756      add eax, edx\l0x00109758      shl eax, 5\l0x0010975b      sub eax, edx\l0x0010975d      shl eax, 3\l0x00109760      add eax, edx\l0x00109762      add eax, eax\l0x00109764      mov dword [esp], eax\l0x00109767      call sym.getmem\l0x0010976c      mov edx, dword [var_24h]\l0x0010976f      mov dword [edx + 0x40], eax\l0x00109772      mov eax, dword [var_24h]\l0x00109775      mov eax, dword [eax + 0x40]\l0x00109778      cmp eax, 0xffffffff\l0x0010977b      jne 0x109787\l"]
	"0x0010977d" [URL="sym.ethinit/0x0010977d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010977d      mov eax, 0xffffffff                                    ; -1\l0x00109782      jmp 0x109a09\l"]
	"0x00109787" [URL="sym.ethinit/0x00109787", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x10977b\l0x00109787      mov eax, dword [var_24h]\l0x0010978a      mov eax, dword [eax + 0x40]\l0x0010978d      add eax, 3\l0x00109790      and eax, 0xfffffffc                                    ; 4294967292\l0x00109793      mov edx, eax\l0x00109795      mov eax, dword [var_24h]\l0x00109798      mov dword [eax + 0x40], edx\l0x0010979b      mov eax, dword [var_24h]\l0x0010979e      mov eax, dword [eax + 0x3c]\l0x001097a1      mov dword [var_38h], eax\l0x001097a4      mov eax, dword [var_24h]\l0x001097a7      mov eax, dword [eax + 0x40]\l0x001097aa      mov dword [var_3ch], eax\l0x001097ad      mov dword [var_20h], 0\l0x001097b4      jmp 0x1097e8\l"]
	"0x001097b6" [URL="sym.ethinit/0x001097b6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x1097f3\l0x001097b6      mov eax, dword [var_20h]\l0x001097b9      shl eax, 4\l0x001097bc      mov edx, eax\l0x001097be      mov eax, dword [var_38h]\l0x001097c1      lea ebx, [edx + eax]\l0x001097c4      mov ecx, dword [var_20h]\l0x001097c7      mov edx, ecx\l0x001097c9      add edx, edx\l0x001097cb      add edx, ecx\l0x001097cd      mov eax, edx\l0x001097cf      shl eax, 6\l0x001097d2      sub eax, edx\l0x001097d4      shl eax, 2\l0x001097d7      add eax, ecx\l0x001097d9      add eax, eax\l0x001097db      mov edx, eax\l0x001097dd      mov eax, dword [var_3ch]\l0x001097e0      add eax, edx\l0x001097e2      mov dword [ebx + 8], eax\l0x001097e5      inc dword [var_20h]\l"]
	"0x001097e8" [URL="sym.ethinit/0x001097e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x1097b4\l0x001097e8      mov edx, dword [var_20h]\l0x001097eb      mov eax, dword [var_24h]\l0x001097ee      mov eax, dword [eax + 0x4c]\l0x001097f1      cmp edx, eax\l0x001097f3      jb 0x1097b6\l"]
	"0x001097f5" [URL="sym.ethinit/0x001097f5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001097f5      mov eax, dword [var_24h]\l0x001097f8      mov eax, dword [eax + 0x4c]\l0x001097fb      mov dword [esp], eax\l0x001097fe      call sym.semcreate\l0x00109803      mov edx, dword [var_24h]\l0x00109806      mov dword [edx + 0x68], eax\l0x00109809      mov eax, dword [var_24h]\l0x0010980c      mov eax, dword [eax + 0x68]\l0x0010980f      cmp eax, 0xffffffff\l0x00109812      jne 0x10981e\l"]
	"0x00109814" [URL="sym.ethinit/0x00109814", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109814      mov eax, 0xffffffff                                    ; -1\l0x00109819      jmp 0x109a09\l"]
	"0x0010981e" [URL="sym.ethinit/0x0010981e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x109812\l0x0010981e      mov eax, dword [var_24h]\l0x00109821      mov dword [eax + 0x34], 0x20                           ; loc.EOI\l                                                                       ; [0x20:4]=-1\l0x00109828      mov eax, dword [var_24h]\l0x0010982b      mov eax, dword [eax + 0x34]\l0x0010982e      inc eax\l0x0010982f      shl eax, 4\l0x00109832      mov dword [esp], eax\l0x00109835      call sym.getmem\l0x0010983a      mov dword [var_34h], eax\l0x0010983d      mov eax, dword [var_34h]\l0x00109840      cmp eax, 0xffffffff\l0x00109843      jne 0x10984f\l"]
	"0x00109845" [URL="sym.ethinit/0x00109845", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109845      mov eax, 0xffffffff                                    ; -1\l0x0010984a      jmp 0x109a09\l"]
	"0x0010984f" [URL="sym.ethinit/0x0010984f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x109843\l0x0010984f      mov eax, dword [var_24h]\l0x00109852      mov eax, dword [eax + 0x34]\l0x00109855      inc eax\l0x00109856      shl eax, 4\l0x00109859      mov dword [var_64h], eax\l0x0010985d      mov dword [var_68h], 0\l0x00109865      mov eax, dword [var_34h]\l0x00109868      mov dword [esp], eax\l0x0010986b      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x00109870      mov eax, dword [var_34h]\l0x00109873      add eax, 3\l0x00109876      and eax, 0xfffffffc                                    ; 4294967292\l0x00109879      mov edx, eax\l0x0010987b      mov eax, dword [var_24h]\l0x0010987e      mov dword [eax + 0x24], edx\l0x00109881      mov eax, dword [var_24h]\l0x00109884      mov eax, dword [eax + 0x34]\l0x00109887      lea edx, [eax + 1]\l0x0010988a      mov eax, edx\l0x0010988c      add eax, eax\l0x0010988e      add eax, edx\l0x00109890      shl eax, 5\l0x00109893      sub eax, edx\l0x00109895      shl eax, 3\l0x00109898      add eax, edx\l0x0010989a      add eax, eax\l0x0010989c      mov dword [esp], eax\l0x0010989f      call sym.getmem\l0x001098a4      mov edx, dword [var_24h]\l0x001098a7      mov dword [edx + 0x28], eax\l0x001098aa      mov eax, dword [var_24h]\l0x001098ad      mov eax, dword [eax + 0x28]\l0x001098b0      cmp eax, 0xffffffff\l0x001098b3      jne 0x1098bf\l"]
	"0x001098b5" [URL="sym.ethinit/0x001098b5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001098b5      mov eax, 0xffffffff                                    ; -1\l0x001098ba      jmp 0x109a09\l"]
	"0x001098bf" [URL="sym.ethinit/0x001098bf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x1098b3\l0x001098bf      mov eax, dword [var_24h]\l0x001098c2      mov eax, dword [eax + 0x28]\l0x001098c5      add eax, 3\l0x001098c8      and eax, 0xfffffffc                                    ; 4294967292\l0x001098cb      mov edx, eax\l0x001098cd      mov eax, dword [var_24h]\l0x001098d0      mov dword [eax + 0x28], edx\l0x001098d3      mov eax, dword [var_24h]\l0x001098d6      mov eax, dword [eax + 0x24]\l0x001098d9      mov dword [var_40h], eax\l0x001098dc      mov eax, dword [var_24h]\l0x001098df      mov eax, dword [eax + 0x28]\l0x001098e2      mov dword [var_3ch], eax\l0x001098e5      mov dword [var_20h], 0\l0x001098ec      jmp 0x109946\l"]
	"0x001098ee" [URL="sym.ethinit/0x001098ee", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x109951\l0x001098ee      mov eax, dword [var_20h]\l0x001098f1      shl eax, 4\l0x001098f4      mov edx, eax\l0x001098f6      mov eax, dword [var_40h]\l0x001098f9      add eax, edx\l0x001098fb      mov dword [eax], 0x80000000                            ; [0x80000000:4]=-1\l0x00109901      mov eax, dword [var_20h]\l0x00109904      shl eax, 4\l0x00109907      mov edx, eax\l0x00109909      mov eax, dword [var_40h]\l0x0010990c      add eax, edx\l0x0010990e      mov word [eax + 4], 0x5f2                              ; [0x5f2:2]=0xffff ; 1522\l0x00109914      mov eax, dword [var_20h]\l0x00109917      shl eax, 4\l0x0010991a      mov edx, eax\l0x0010991c      mov eax, dword [var_40h]\l0x0010991f      lea ebx, [edx + eax]\l0x00109922      mov ecx, dword [var_20h]\l0x00109925      mov edx, ecx\l0x00109927      add edx, edx\l0x00109929      add edx, ecx\l0x0010992b      mov eax, edx\l0x0010992d      shl eax, 6\l0x00109930      sub eax, edx\l0x00109932      shl eax, 2\l0x00109935      add eax, ecx\l0x00109937      add eax, eax\l0x00109939      mov edx, eax\l0x0010993b      mov eax, dword [var_3ch]\l0x0010993e      add eax, edx\l0x00109940      mov dword [ebx + 8], eax\l0x00109943      inc dword [var_20h]\l"]
	"0x00109946" [URL="sym.ethinit/0x00109946", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x1098ec\l0x00109946      mov edx, dword [var_20h]\l0x00109949      mov eax, dword [var_24h]\l0x0010994c      mov eax, dword [eax + 0x34]\l0x0010994f      cmp edx, eax\l0x00109951      jb 0x1098ee\l"]
	"0x00109953" [URL="sym.ethinit/0x00109953", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109953      mov eax, dword [var_24h]\l0x00109956      mov eax, dword [eax + 0x34]\l0x00109959      add eax, 0xfffffff\l0x0010995e      shl eax, 4\l0x00109961      mov edx, eax\l0x00109963      mov eax, dword [var_40h]\l0x00109966      add edx, eax\l0x00109968      mov eax, dword [var_24h]\l0x0010996b      mov eax, dword [eax + 0x34]\l0x0010996e      add eax, 0xfffffff\l0x00109973      shl eax, 4\l0x00109976      mov ecx, eax\l0x00109978      mov eax, dword [var_40h]\l0x0010997b      add eax, ecx\l0x0010997d      mov eax, dword [eax + 4]\l0x00109980      or eax, 0xffff8000\l0x00109985      mov word [edx + 4], ax\l0x00109989      mov dword [esp], 0\l0x00109990      call sym.semcreate\l0x00109995      mov edx, dword [var_24h]\l0x00109998      mov dword [edx + 0x64], eax\l0x0010999b      mov eax, dword [var_24h]\l0x0010999e      mov eax, dword [eax + 0x64]\l0x001099a1      cmp eax, 0xffffffff\l0x001099a4      jne 0x1099ad\l"]
	"0x001099a6" [URL="sym.ethinit/0x001099a6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001099a6      mov eax, 0xffffffff                                    ; -1\l0x001099ab      jmp 0x109a09\l"]
	"0x001099ad" [URL="sym.ethinit/0x001099ad", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethinit @ 0x1099a4\l0x001099ad      mov eax, dword [var_28h]\l0x001099b0      mov dword [eax + 0x101c], 0x10041                      ; 'A'\l                                                                       ; [0x10041:4]=-1\l0x001099ba      mov eax, dword [var_24h]\l0x001099bd      mov eax, dword [eax + 0x3c]\l0x001099c0      mov edx, eax\l0x001099c2      mov eax, dword [var_28h]\l0x001099c5      mov dword [eax + 0x1010], edx\l0x001099cb      mov eax, dword [var_24h]\l0x001099ce      mov eax, dword [eax + 0x24]\l0x001099d1      mov edx, eax\l0x001099d3      mov eax, dword [var_28h]\l0x001099d6      mov dword [eax + 0x100c], edx\l0x001099dc      mov eax, dword [var_28h]\l0x001099df      mov eax, dword [eax]\l0x001099e1      or eax, 0xc                                            ; 12\l0x001099e4      mov edx, eax\l0x001099e6      mov eax, dword [var_28h]\l0x001099e9      mov dword [eax], edx\l0x001099eb      mov eax, dword [var_28h]\l0x001099ee      mov eax, dword [eax + 0x1018]\l0x001099f4      or eax, 0x2002\l0x001099f9      mov edx, eax\l0x001099fb      mov eax, dword [var_28h]\l0x001099fe      mov dword [eax + 0x1018], edx\l0x00109a04      mov eax, 1\l"]
	"0x00109a09" [URL="sym.ethinit/0x00109a09", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x0010954c  CODE 0x0010958f  CODE 0x00109712  \l; XREFS: CODE 0x00109782  CODE 0x00109819  CODE 0x0010984a  \l; XREFS: CODE 0x001098ba  CODE 0x001099ab  \l0x00109a09      add esp, 0x5c\l0x00109a0c      pop ebx\l0x00109a0d      pop esi\l0x00109a0e      pop edi\l0x00109a0f      pop ebp\l0x00109a10      ret\l"]
        "0x001094da" -> "0x00109551" [color="#13a10e"];
        "0x001094da" -> "0x00109547" [color="#c50f1f"];
        "0x00109547" -> "0x00109a09" [color="#0037da"];
        "0x00109551" -> "0x00109594" [color="#0037da"];
        "0x00109571" -> "0x00109579" [color="#0037da"];
        "0x00109578" -> "0x00109579" [color="#0037da"];
        "0x00109579" -> "0x00109578" [color="#13a10e"];
        "0x00109579" -> "0x00109581" [color="#c50f1f"];
        "0x00109581" -> "0x00109594" [color="#13a10e"];
        "0x00109581" -> "0x0010958a" [color="#c50f1f"];
        "0x0010958a" -> "0x00109a09" [color="#0037da"];
        "0x00109594" -> "0x00109571" [color="#13a10e"];
        "0x00109594" -> "0x001095a4" [color="#c50f1f"];
        "0x001095a4" -> "0x00109717" [color="#13a10e"];
        "0x001095a4" -> "0x0010970d" [color="#c50f1f"];
        "0x0010970d" -> "0x00109a09" [color="#0037da"];
        "0x00109717" -> "0x00109787" [color="#13a10e"];
        "0x00109717" -> "0x0010977d" [color="#c50f1f"];
        "0x0010977d" -> "0x00109a09" [color="#0037da"];
        "0x00109787" -> "0x001097e8" [color="#0037da"];
        "0x001097b6" -> "0x001097e8" [color="#0037da"];
        "0x001097e8" -> "0x001097b6" [color="#13a10e"];
        "0x001097e8" -> "0x001097f5" [color="#c50f1f"];
        "0x001097f5" -> "0x0010981e" [color="#13a10e"];
        "0x001097f5" -> "0x00109814" [color="#c50f1f"];
        "0x00109814" -> "0x00109a09" [color="#0037da"];
        "0x0010981e" -> "0x0010984f" [color="#13a10e"];
        "0x0010981e" -> "0x00109845" [color="#c50f1f"];
        "0x00109845" -> "0x00109a09" [color="#0037da"];
        "0x0010984f" -> "0x001098bf" [color="#13a10e"];
        "0x0010984f" -> "0x001098b5" [color="#c50f1f"];
        "0x001098b5" -> "0x00109a09" [color="#0037da"];
        "0x001098bf" -> "0x00109946" [color="#0037da"];
        "0x001098ee" -> "0x00109946" [color="#0037da"];
        "0x00109946" -> "0x001098ee" [color="#13a10e"];
        "0x00109946" -> "0x00109953" [color="#c50f1f"];
        "0x00109953" -> "0x001099ad" [color="#13a10e"];
        "0x00109953" -> "0x001099a6" [color="#c50f1f"];
        "0x001099a6" -> "0x00109a09" [color="#0037da"];
        "0x001099ad" -> "0x00109a09" [color="#0037da"];
}
