digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010b638" [URL="sym.lfibput/0x0010b638", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.lfflush @ 0x10b3f5\l  ; CALL XREFS from sym.lfscreate @ 0x10bfa5, 0x10bfd7\l  ; CALL XREF from sym.lfsetup @ 0x10c1ae\l  ; CALL XREF from sym.lftruncate @ 0x10c81d\l224: sym.lfibput (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h);\l; var int32_t var_218h @ ebp-0x218\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; var int32_t var_228h @ esp+0x4\l; var int32_t var_224h @ esp+0x8\l0x0010b638      push ebp\l0x0010b639      mov ebp, esp\l0x0010b63b      sub esp, 0x228\l0x0010b641      mov ecx, dword [arg_ch]\l0x0010b644      mov edx, 0x92492493\l0x0010b649      mov eax, ecx\l0x0010b64b      imul edx\l0x0010b64d      lea eax, [edx + ecx]\l0x0010b650      sar eax, 2\l0x0010b653      mov edx, eax\l0x0010b655      mov eax, ecx\l0x0010b657      sar eax, 0x1f\l0x0010b65a      sub edx, eax\l0x0010b65c      mov eax, edx\l0x0010b65e      inc eax\l0x0010b65f      mov dword [var_18h], eax\l0x0010b662      mov ecx, dword [arg_ch]\l0x0010b665      mov edx, 0x92492493\l0x0010b66a      mov eax, ecx\l0x0010b66c      imul edx\l0x0010b66e      lea eax, [edx + ecx]\l0x0010b671      sar eax, 2\l0x0010b674      mov edx, eax\l0x0010b676      mov eax, ecx\l0x0010b678      sar eax, 0x1f\l0x0010b67b      sub edx, eax\l0x0010b67d      mov eax, edx\l0x0010b67f      shl eax, 3\l0x0010b682      sub eax, edx\l0x0010b684      sub ecx, eax\l0x0010b686      mov edx, ecx\l0x0010b688      mov eax, edx\l0x0010b68a      shl eax, 3\l0x0010b68d      add eax, edx\l0x0010b68f      shl eax, 3\l0x0010b692      lea edx, [var_218h]\l0x0010b698      add eax, edx\l0x0010b69a      mov dword [var_10h], eax\l0x0010b69d      mov eax, dword [arg_10h]\l0x0010b6a0      mov dword [var_ch], eax\l0x0010b6a3      mov eax, dword [var_18h]\l0x0010b6a6      mov dword [var_224h], eax\l0x0010b6aa      lea eax, [var_218h]\l0x0010b6b0      mov dword [var_228h], eax\l0x0010b6b4      mov eax, dword [arg_8h]\l0x0010b6b7      mov dword [esp], eax\l0x0010b6ba      call sym.read                                          ; ssize_t read(int fildes, void *buf, size_t nbyte)\l0x0010b6bf      cmp eax, 0xffffffff\l0x0010b6c2      jne 0x10b6cb\l"]
	"0x0010b6c4" [URL="sym.lfibput/0x0010b6c4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010b6c4      mov eax, 0xffffffff                                    ; -1\l0x0010b6c9      jmp 0x10b716\l"]
	"0x0010b6cb" [URL="sym.lfibput/0x0010b6cb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfibput @ 0x10b6c2\l0x0010b6cb      mov dword [var_14h], 0\l0x0010b6d2      jmp 0x10b6ed\l"]
	"0x0010b6d4" [URL="sym.lfibput/0x0010b6d4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfibput @ 0x10b6f3\l0x0010b6d4      mov eax, dword [var_10h]\l0x0010b6d7      lea edx, [eax + 1]\l0x0010b6da      mov dword [var_10h], edx\l0x0010b6dd      mov edx, dword [var_ch]\l0x0010b6e0      lea ecx, [edx + 1]\l0x0010b6e3      mov dword [var_ch], ecx\l0x0010b6e6      mov dl, byte [edx]\l0x0010b6e8      mov byte [eax], dl\l0x0010b6ea      inc dword [var_14h]\l"]
	"0x0010b6ed" [URL="sym.lfibput/0x0010b6ed", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfibput @ 0x10b6d2\l0x0010b6ed      mov eax, dword [var_14h]\l0x0010b6f0      cmp eax, 0x47                                          ; 71\l0x0010b6f3      jbe 0x10b6d4\l"]
	"0x0010b6f5" [URL="sym.lfibput/0x0010b6f5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010b6f5      mov eax, dword [var_18h]\l0x0010b6f8      mov dword [var_224h], eax\l0x0010b6fc      lea eax, [var_218h]\l0x0010b702      mov dword [var_228h], eax\l0x0010b706      mov eax, dword [arg_8h]\l0x0010b709      mov dword [esp], eax\l0x0010b70c      call sym.write                                         ; ssize_t write(int fd, const char *ptr, size_t nbytes)\l0x0010b711      mov eax, 1\l"]
	"0x0010b716" [URL="sym.lfibput/0x0010b716", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfibput @ 0x10b6c9\l0x0010b716      leave\l0x0010b717      ret\l"]
        "0x0010b638" -> "0x0010b6cb" [color="#13a10e"];
        "0x0010b638" -> "0x0010b6c4" [color="#c50f1f"];
        "0x0010b6c4" -> "0x0010b716" [color="#0037da"];
        "0x0010b6cb" -> "0x0010b6ed" [color="#0037da"];
        "0x0010b6d4" -> "0x0010b6ed" [color="#0037da"];
        "0x0010b6ed" -> "0x0010b6d4" [color="#13a10e"];
        "0x0010b6ed" -> "0x0010b6f5" [color="#c50f1f"];
        "0x0010b6f5" -> "0x0010b716" [color="#0037da"];
}
