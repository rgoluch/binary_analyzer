digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010c996" [URL="sym.rflread/0x0010c996", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.rflgetc @ 0x10c8ca\l837: sym.rflread (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h);\l; var int32_t var_540h @ ebp-0x540\l; var int32_t var_53eh @ ebp-0x53e\l; var int32_t var_4b4h @ ebp-0x4b4\l; var int32_t var_4b0h @ ebp-0x4b0\l; var int32_t var_b0h @ ebp-0xb0\l; var int32_t var_aeh @ ebp-0xae\l; var int32_t var_ach @ ebp-0xac\l; var int32_t var_28h @ ebp-0x28\l; var int32_t var_24h @ ebp-0x24\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; var int32_t var_558h @ esp+0x4\l; var int32_t var_554h @ esp+0x8\l; var int32_t var_550h @ esp+0xc\l0x0010c996      push ebp\l0x0010c997      mov ebp, esp\l0x0010c999      sub esp, 0x558\l0x0010c99f      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010c9a4      mov dword [esp], eax\l0x0010c9a7      call sym.wait                                          ; pid_t wait(int *wstatus)\l0x0010c9ac      cmp dword [arg_10h], 0\l0x0010c9b0      jle 0x10c9bb\l"]
	"0x0010c9b2" [URL="sym.rflread/0x0010c9b2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c9b2      cmp dword [arg_10h], 0x400\l0x0010c9b9      jle 0x10c9d2\l"]
	"0x0010c9bb" [URL="sym.rflread/0x0010c9bb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rflread @ 0x10c9b0\l0x0010c9bb      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010c9c0      mov dword [esp], eax\l0x0010c9c3      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010c9c8      mov eax, 0xffffffff                                    ; -1\l0x0010c9cd      jmp 0x10ccd9\l"]
	"0x0010c9d2" [URL="sym.rflread/0x0010c9d2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rflread @ 0x10c9b9\l0x0010c9d2      mov eax, dword [arg_8h]\l0x0010c9d5      mov edx, dword [eax + 4]\l0x0010c9d8      mov eax, edx\l0x0010c9da      shl eax, 3\l0x0010c9dd      add eax, edx\l0x0010c9df      shl eax, 4\l0x0010c9e2      add eax, obj.rfltab                                    ; 0x13f860\l0x0010c9e7      mov dword [var_1ch], eax\l0x0010c9ea      mov eax, dword [var_1ch]\l0x0010c9ed      mov eax, dword [eax]\l0x0010c9ef      test eax, eax\l0x0010c9f1      jne 0x10ca0a\l"]
	"0x0010c9f3" [URL="sym.rflread/0x0010c9f3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c9f3      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010c9f8      mov dword [esp], eax\l0x0010c9fb      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010ca00      mov eax, 0xffffffff                                    ; -1\l0x0010ca05      jmp 0x10ccd9\l"]
	"0x0010ca0a" [URL="sym.rflread/0x0010ca0a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rflread @ 0x10c9f1\l0x0010ca0a      mov eax, dword [var_1ch]\l0x0010ca0d      mov eax, dword [eax + 0x8c]\l0x0010ca13      and eax, 1\l0x0010ca16      test eax, eax\l0x0010ca18      jne 0x10ca31\l"]
	"0x0010ca1a" [URL="sym.rflread/0x0010ca1a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ca1a      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010ca1f      mov dword [esp], eax\l0x0010ca22      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010ca27      mov eax, 0xffffffff                                    ; -1\l0x0010ca2c      jmp 0x10ccd9\l"]
	"0x0010ca31" [URL="sym.rflread/0x0010ca31", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rflread @ 0x10ca18\l0x0010ca31      mov word [var_b0h], 0x100                              ; 256\l0x0010ca3a      mov word [var_aeh], 0\l0x0010ca43      mov dword [var_ach], 0\l0x0010ca4d      mov eax, dword [var_1ch]\l0x0010ca50      add eax, 8\l0x0010ca53      mov dword [var_10h], eax\l0x0010ca56      lea eax, [var_b0h]\l0x0010ca5c      add eax, 8\l0x0010ca5f      mov dword [var_14h], eax\l0x0010ca62      mov dword [var_554h], 0x80                             ; [0x80:4]=-1 ; 128\l0x0010ca6a      mov dword [var_558h], 0\l0x0010ca72      mov eax, dword [var_14h]\l0x0010ca75      mov dword [esp], eax\l0x0010ca78      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x0010ca7d      mov dword [var_18h], 0\l0x0010ca84      jmp 0x10caa6\l"]
	"0x0010ca86" [URL="sym.rflread/0x0010ca86", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rflread @ 0x10cac0\l0x0010ca86      inc dword [var_18h]\l0x0010ca89      cmp dword [var_18h], 0x7f\l0x0010ca8d      jle 0x10caa6\l"]
	"0x0010ca8f" [URL="sym.rflread/0x0010ca8f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ca8f      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010ca94      mov dword [esp], eax\l0x0010ca97      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010ca9c      mov eax, 0xffffffff                                    ; -1\l0x0010caa1      jmp 0x10ccd9\l"]
	"0x0010caa6" [URL="sym.rflread/0x0010caa6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.rflread @ 0x10ca84, 0x10ca8d\l0x0010caa6      mov eax, dword [var_14h]\l0x0010caa9      lea edx, [eax + 1]\l0x0010caac      mov dword [var_14h], edx\l0x0010caaf      mov edx, dword [var_10h]\l0x0010cab2      lea ecx, [edx + 1]\l0x0010cab5      mov dword [var_10h], ecx\l0x0010cab8      mov dl, byte [edx]\l0x0010caba      mov byte [eax], dl\l0x0010cabc      mov al, byte [eax]\l0x0010cabe      test al, al\l0x0010cac0      jne 0x10ca86\l"]
	"0x0010cac2" [URL="sym.rflread/0x0010cac2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010cac2      mov eax, dword [var_1ch]\l0x0010cac5      mov eax, dword [eax + 0x88]\l0x0010cacb      shr eax, 0x18\l0x0010cace      mov edx, eax\l0x0010cad0      mov eax, dword [var_1ch]\l0x0010cad3      mov eax, dword [eax + 0x88]\l0x0010cad9      shr eax, 8\l0x0010cadc      and eax, 0xff00\l0x0010cae1      or edx, eax\l0x0010cae3      mov eax, dword [var_1ch]\l0x0010cae6      mov eax, dword [eax + 0x88]\l0x0010caec      shl eax, 8\l0x0010caef      and eax, 0xff0000\l0x0010caf4      or edx, eax\l0x0010caf6      mov eax, dword [var_1ch]\l0x0010caf9      mov eax, dword [eax + 0x88]\l0x0010caff      shl eax, 0x18\l0x0010cb02      or eax, edx\l0x0010cb04      mov dword [var_28h], eax\l0x0010cb07      mov eax, dword [arg_10h]\l0x0010cb0a      shr eax, 0x18\l0x0010cb0d      mov edx, dword [arg_10h]\l0x0010cb10      sar edx, 8\l0x0010cb13      and edx, 0xff00\l0x0010cb19      or edx, eax\l0x0010cb1b      mov eax, dword [arg_10h]\l0x0010cb1e      shl eax, 8\l0x0010cb21      and eax, 0xff0000\l0x0010cb26      or eax, edx\l0x0010cb28      mov edx, eax\l0x0010cb2a      mov eax, dword [arg_10h]\l0x0010cb2d      shl eax, 0x18\l0x0010cb30      or eax, edx\l0x0010cb32      mov dword [var_24h], eax\l0x0010cb35      mov dword [var_550h], 0x490                            ; [0x490:4]=-1 ; 1168\l0x0010cb3d      lea eax, [var_540h]\l0x0010cb43      mov dword [var_554h], eax\l0x0010cb47      mov dword [var_558h], 0x90                             ; [0x90:4]=-1 ; 144\l0x0010cb4f      lea eax, [var_b0h]\l0x0010cb55      mov dword [esp], eax\l0x0010cb58      call sym.rfscomm\l0x0010cb5d      mov dword [var_20h], eax\l0x0010cb60      cmp dword [var_20h], 0xffffffff\l0x0010cb64      jne 0x10cb7d\l"]
	"0x0010cb66" [URL="sym.rflread/0x0010cb66", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010cb66      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010cb6b      mov dword [esp], eax\l0x0010cb6e      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010cb73      mov eax, 0xffffffff                                    ; -1\l0x0010cb78      jmp 0x10ccd9\l"]
	"0x0010cb7d" [URL="sym.rflread/0x0010cb7d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rflread @ 0x10cb64\l0x0010cb7d      cmp dword [var_20h], 0xfffffffd\l0x0010cb81      jne 0x10cba6\l"]
	"0x0010cb83" [URL="sym.rflread/0x0010cb83", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010cb83      mov dword [esp], 0x118cd0                              ; [0x118cd0:4]=0x656d6954 ; \"Timeout during remote file read\\n\"\l0x0010cb8a      call sym.kprintf\l0x0010cb8f      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010cb94      mov dword [esp], eax\l0x0010cb97      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010cb9c      mov eax, 0xffffffff                                    ; -1\l0x0010cba1      jmp 0x10ccd9\l"]
	"0x0010cba6" [URL="sym.rflread/0x0010cba6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rflread @ 0x10cb81\l0x0010cba6      mov ax, word [var_53eh]\l0x0010cbad      shr ax, 8\l0x0010cbb1      xor edx, edx\l0x0010cbb3      mov dx, ax\l0x0010cbb6      mov ax, word [var_53eh]\l0x0010cbbd      and eax, 0xffff\l0x0010cbc2      shl eax, 8\l0x0010cbc5      and eax, 0xffff\l0x0010cbca      or eax, edx\l0x0010cbcc      test eax, eax\l0x0010cbce      je 0x10cbe7\l"]
	"0x0010cbd0" [URL="sym.rflread/0x0010cbd0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010cbd0      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010cbd5      mov dword [esp], eax\l0x0010cbd8      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010cbdd      mov eax, 0xffffffff                                    ; -1\l0x0010cbe2      jmp 0x10ccd9\l"]
	"0x0010cbe7" [URL="sym.rflread/0x0010cbe7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rflread @ 0x10cbce\l0x0010cbe7      mov dword [var_ch], 0\l0x0010cbee      jmp 0x10cc0b\l"]
	"0x0010cbf0" [URL="sym.rflread/0x0010cbf0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rflread @ 0x10cc48\l0x0010cbf0      mov eax, dword [arg_ch]\l0x0010cbf3      lea edx, [eax + 1]\l0x0010cbf6      mov dword [arg_ch], edx\l0x0010cbf9      lea ecx, [var_4b0h]\l0x0010cbff      mov edx, dword [var_ch]\l0x0010cc02      add edx, ecx\l0x0010cc04      mov dl, byte [edx]\l0x0010cc06      mov byte [eax], dl\l0x0010cc08      inc dword [var_ch]\l"]
	"0x0010cc0b" [URL="sym.rflread/0x0010cc0b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rflread @ 0x10cbee\l0x0010cc0b      mov eax, dword [var_ch]\l0x0010cc0e      mov edx, dword [var_4b4h]\l0x0010cc14      mov ecx, edx\l0x0010cc16      shr ecx, 0x18\l0x0010cc19      mov edx, dword [var_4b4h]\l0x0010cc1f      shr edx, 8\l0x0010cc22      and edx, 0xff00\l0x0010cc28      or ecx, edx\l0x0010cc2a      mov edx, dword [var_4b4h]\l0x0010cc30      shl edx, 8\l0x0010cc33      and edx, 0xff0000\l0x0010cc39      or ecx, edx\l0x0010cc3b      mov edx, dword [var_4b4h]\l0x0010cc41      shl edx, 0x18\l0x0010cc44      or edx, ecx\l0x0010cc46      cmp eax, edx\l0x0010cc48      jb 0x10cbf0\l"]
	"0x0010cc4a" [URL="sym.rflread/0x0010cc4a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010cc4a      mov eax, dword [var_1ch]\l0x0010cc4d      mov eax, dword [eax + 0x88]\l0x0010cc53      mov edx, dword [var_4b4h]\l0x0010cc59      mov ecx, edx\l0x0010cc5b      shr ecx, 0x18\l0x0010cc5e      mov edx, dword [var_4b4h]\l0x0010cc64      shr edx, 8\l0x0010cc67      and edx, 0xff00\l0x0010cc6d      or ecx, edx\l0x0010cc6f      mov edx, dword [var_4b4h]\l0x0010cc75      shl edx, 8\l0x0010cc78      and edx, 0xff0000\l0x0010cc7e      or ecx, edx\l0x0010cc80      mov edx, dword [var_4b4h]\l0x0010cc86      shl edx, 0x18\l0x0010cc89      or edx, ecx\l0x0010cc8b      add edx, eax\l0x0010cc8d      mov eax, dword [var_1ch]\l0x0010cc90      mov dword [eax + 0x88], edx\l0x0010cc96      mov eax, dword [0x13fe10]                              ; [0x13fe10:4]=0\l0x0010cc9b      mov dword [esp], eax\l0x0010cc9e      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010cca3      mov eax, dword [var_4b4h]\l0x0010cca9      shr eax, 0x18\l0x0010ccac      mov edx, eax\l0x0010ccae      mov eax, dword [var_4b4h]\l0x0010ccb4      shr eax, 8\l0x0010ccb7      and eax, 0xff00\l0x0010ccbc      or edx, eax\l0x0010ccbe      mov eax, dword [var_4b4h]\l0x0010ccc4      shl eax, 8\l0x0010ccc7      and eax, 0xff0000\l0x0010cccc      or edx, eax\l0x0010ccce      mov eax, dword [var_4b4h]\l0x0010ccd4      shl eax, 0x18\l0x0010ccd7      or eax, edx\l"]
	"0x0010ccd9" [URL="sym.rflread/0x0010ccd9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x0010c9cd  CODE 0x0010ca05  CODE 0x0010ca2c  \l; XREFS: CODE 0x0010caa1  CODE 0x0010cb78  CODE 0x0010cba1  \l; XREFS: CODE 0x0010cbe2  \l0x0010ccd9      leave\l0x0010ccda      ret\l"]
        "0x0010c996" -> "0x0010c9bb" [color="#13a10e"];
        "0x0010c996" -> "0x0010c9b2" [color="#c50f1f"];
        "0x0010c9b2" -> "0x0010c9d2" [color="#13a10e"];
        "0x0010c9b2" -> "0x0010c9bb" [color="#c50f1f"];
        "0x0010c9bb" -> "0x0010ccd9" [color="#0037da"];
        "0x0010c9d2" -> "0x0010ca0a" [color="#13a10e"];
        "0x0010c9d2" -> "0x0010c9f3" [color="#c50f1f"];
        "0x0010c9f3" -> "0x0010ccd9" [color="#0037da"];
        "0x0010ca0a" -> "0x0010ca31" [color="#13a10e"];
        "0x0010ca0a" -> "0x0010ca1a" [color="#c50f1f"];
        "0x0010ca1a" -> "0x0010ccd9" [color="#0037da"];
        "0x0010ca31" -> "0x0010caa6" [color="#0037da"];
        "0x0010ca86" -> "0x0010caa6" [color="#13a10e"];
        "0x0010ca86" -> "0x0010ca8f" [color="#c50f1f"];
        "0x0010ca8f" -> "0x0010ccd9" [color="#0037da"];
        "0x0010caa6" -> "0x0010ca86" [color="#13a10e"];
        "0x0010caa6" -> "0x0010cac2" [color="#c50f1f"];
        "0x0010cac2" -> "0x0010cb7d" [color="#13a10e"];
        "0x0010cac2" -> "0x0010cb66" [color="#c50f1f"];
        "0x0010cb66" -> "0x0010ccd9" [color="#0037da"];
        "0x0010cb7d" -> "0x0010cba6" [color="#13a10e"];
        "0x0010cb7d" -> "0x0010cb83" [color="#c50f1f"];
        "0x0010cb83" -> "0x0010ccd9" [color="#0037da"];
        "0x0010cba6" -> "0x0010cbe7" [color="#13a10e"];
        "0x0010cba6" -> "0x0010cbd0" [color="#c50f1f"];
        "0x0010cbd0" -> "0x0010ccd9" [color="#0037da"];
        "0x0010cbe7" -> "0x0010cc0b" [color="#0037da"];
        "0x0010cbf0" -> "0x0010cc0b" [color="#0037da"];
        "0x0010cc0b" -> "0x0010cbf0" [color="#13a10e"];
        "0x0010cc0b" -> "0x0010cc4a" [color="#c50f1f"];
        "0x0010cc4a" -> "0x0010ccd9" [color="#0037da"];
}
