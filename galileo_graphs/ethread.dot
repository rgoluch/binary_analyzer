digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00109baa" [URL="sym.ethread/0x00109baa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="544: sym.ethread (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h);\l; var int32_t var_2eh @ ebp-0x2e\l; var int32_t var_2dh @ ebp-0x2d\l; var int32_t var_2ch @ ebp-0x2c\l; var int32_t var_28h @ ebp-0x28\l; var int32_t var_24h @ ebp-0x24\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_19h @ ebp-0x19\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; var int32_t var_48h @ esp+0x4\l; var int32_t var_44h @ esp+0x8\l0x00109baa      push ebp\l0x00109bab      mov ebp, esp\l0x00109bad      sub esp, 0x48\l0x00109bb0      mov dword [var_ch], 0\l0x00109bb7      mov dword [var_10h], 0\l0x00109bbe      mov dword [var_14h], 0\l0x00109bc5      mov eax, dword [arg_8h]\l0x00109bc8      mov edx, dword [eax + 4]\l0x00109bcb      mov eax, edx\l0x00109bcd      shl eax, 2\l0x00109bd0      add eax, edx\l0x00109bd2      shl eax, 3\l0x00109bd5      sub eax, edx\l0x00109bd7      shl eax, 3\l0x00109bda      add eax, obj.ethertab                                  ; 0x125560\l0x00109bdf      mov dword [var_24h], eax\l0x00109be2      mov eax, dword [arg_ch]\l0x00109be5      mov dword [var_28h], eax\l"]
	"0x00109be8" [URL="sym.ethread/0x00109be8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109dc1\l0x00109be8      mov eax, dword [var_24h]\l0x00109beb      mov eax, dword [eax + 0x64]\l0x00109bee      mov dword [esp], eax\l0x00109bf1      call sym.wait                                          ; pid_t wait(int *wstatus)\l0x00109bf6      mov eax, dword [var_24h]\l0x00109bf9      mov edx, dword [eax + 0x24]\l0x00109bfc      mov eax, dword [var_24h]\l0x00109bff      mov eax, dword [eax + 0x2c]\l0x00109c02      shl eax, 4\l0x00109c05      add eax, edx\l0x00109c07      mov dword [var_2ch], eax\l0x00109c0a      mov eax, dword [var_2ch]\l0x00109c0d      mov eax, dword [eax]\l0x00109c0f      and eax, 0x200                                         ; 512\l0x00109c14      test eax, eax\l0x00109c16      setne al\l0x00109c19      mov byte [var_2dh], al\l0x00109c1c      mov eax, dword [var_2ch]\l0x00109c1f      mov eax, dword [eax]\l0x00109c21      and eax, 0x100                                         ; 256\l0x00109c26      test eax, eax\l0x00109c28      setne al\l0x00109c2b      mov byte [var_2eh], al\l0x00109c2e      cmp byte [var_2dh], 0\l0x00109c32      je 0x109c4d\l"]
	"0x00109c34" [URL="sym.ethread/0x00109c34", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109c34      mov eax, dword [arg_ch]\l0x00109c37      mov dword [var_18h], eax\l0x00109c3a      mov dword [var_14h], 0\l0x00109c41      mov eax, dword [var_14h]\l0x00109c44      mov dword [var_10h], eax\l0x00109c47      mov eax, dword [var_10h]\l0x00109c4a      mov dword [var_ch], eax\l"]
	"0x00109c4d" [URL="sym.ethread/0x00109c4d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109c32\l0x00109c4d      mov eax, dword [var_2ch]\l0x00109c50      mov eax, dword [eax]\l0x00109c52      shr eax, 0x10\l0x00109c55      and eax, 0x3fff\l0x00109c5a      mov dword [var_ch], eax\l0x00109c5d      cmp byte [var_2eh], 0\l0x00109c61      je 0x109c69\l"]
	"0x00109c63" [URL="sym.ethread/0x00109c63", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109c63      mov eax, dword [var_10h]\l0x00109c66      sub dword [var_ch], eax\l"]
	"0x00109c69" [URL="sym.ethread/0x00109c69", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109c61\l0x00109c69      mov eax, dword [var_ch]\l0x00109c6c      add dword [var_10h], eax\l0x00109c6f      mov eax, dword [var_ch]\l0x00109c72      mov dword [var_14h], eax\l0x00109c75      mov eax, dword [var_10h]\l0x00109c78      cmp eax, dword [arg_10h]\l0x00109c7b      jle 0x109c8a\l"]
	"0x00109c7d" [URL="sym.ethread/0x00109c7d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109c7d      mov eax, dword [var_10h]\l0x00109c80      mov edx, dword [arg_10h]\l0x00109c83      sub edx, eax\l0x00109c85      mov eax, edx\l0x00109c87      add dword [var_14h], eax\l"]
	"0x00109c8a" [URL="sym.ethread/0x00109c8a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109c7b\l0x00109c8a      cmp dword [var_14h], 0\l0x00109c8e      jle 0x109cb2\l"]
	"0x00109c90" [URL="sym.ethread/0x00109c90", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109c90      mov eax, dword [var_2ch]\l0x00109c93      mov eax, dword [eax + 8]\l0x00109c96      mov edx, dword [var_14h]\l0x00109c99      mov dword [var_44h], edx\l0x00109c9d      mov dword [var_48h], eax\l0x00109ca1      mov eax, dword [var_18h]\l0x00109ca4      mov dword [esp], eax\l0x00109ca7      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x00109cac      mov eax, dword [var_14h]\l0x00109caf      add dword [var_18h], eax\l"]
	"0x00109cb2" [URL="sym.ethread/0x00109cb2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109c8e\l0x00109cb2      cmp byte [var_2eh], 0\l0x00109cb6      je 0x109d5c\l"]
	"0x00109cbc" [URL="sym.ethread/0x00109cbc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109cbc      mov eax, dword [var_24h]\l0x00109cbf      lea edx, [eax + 0x54]\l0x00109cc2      mov eax, dword [var_28h]\l0x00109cc5      mov dword [var_44h], 6\l0x00109ccd      mov dword [var_48h], edx\l0x00109cd1      mov dword [esp], eax\l0x00109cd4      call sym.memcmp                                        ; int memcmp(const void *s1, const void *s2, size_t n)\l0x00109cd9      test eax, eax\l0x00109cdb      jne 0x109ce3\l"]
	"0x00109cdd" [URL="sym.ethread/0x00109cdd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109cdd      mov byte [var_19h], 1\l0x00109ce1      jmp 0x109d5c\l"]
	"0x00109ce3" [URL="sym.ethread/0x00109ce3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109cdb\l0x00109ce3      mov eax, dword [var_28h]\l0x00109ce6      mov dword [var_44h], 6\l0x00109cee      mov dword [var_48h], 0x140227                          ; [0x140227:4]=0\l0x00109cf6      mov dword [esp], eax\l0x00109cf9      call sym.memcmp                                        ; int memcmp(const void *s1, const void *s2, size_t n)\l0x00109cfe      test eax, eax\l0x00109d00      jne 0x109d08\l"]
	"0x00109d02" [URL="sym.ethread/0x00109d02", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109d02      mov byte [var_19h], 1\l0x00109d06      jmp 0x109d5c\l"]
	"0x00109d08" [URL="sym.ethread/0x00109d08", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109d00\l0x00109d08      mov byte [var_19h], 0\l0x00109d0c      mov dword [var_20h], 0\l0x00109d13      jmp 0x109d4f\l"]
	"0x00109d15" [URL="sym.ethread/0x00109d15", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109d5a\l0x00109d15      mov edx, dword [var_20h]\l0x00109d18      mov eax, edx\l0x00109d1a      add eax, eax\l0x00109d1c      add eax, edx\l0x00109d1e      add eax, eax\l0x00109d20      lea edx, [eax + 0x70]\l0x00109d23      mov eax, dword [var_24h]\l0x00109d26      add eax, edx\l0x00109d28      lea edx, [eax + 8]\l0x00109d2b      mov eax, dword [var_28h]\l0x00109d2e      mov dword [var_44h], 6\l0x00109d36      mov dword [var_48h], edx\l0x00109d3a      mov dword [esp], eax\l0x00109d3d      call sym.memcmp                                        ; int memcmp(const void *s1, const void *s2, size_t n)\l0x00109d42      test eax, eax\l0x00109d44      jne 0x109d4c\l"]
	"0x00109d46" [URL="sym.ethread/0x00109d46", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109d46      mov byte [var_19h], 1\l0x00109d4a      jmp 0x109d5c\l"]
	"0x00109d4c" [URL="sym.ethread/0x00109d4c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109d44\l0x00109d4c      inc dword [var_20h]\l"]
	"0x00109d4f" [URL="sym.ethread/0x00109d4f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109d13\l0x00109d4f      mov eax, dword [var_24h]\l0x00109d52      mov ax, word [eax + 0x76]\l0x00109d56      cwde\l0x00109d57      cmp eax, dword [var_20h]\l0x00109d5a      jg 0x109d15\l"]
	"0x00109d5c" [URL="sym.ethread/0x00109d5c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.ethread @ 0x109cb6, 0x109ce1, 0x109d06, 0x109d4a\l0x00109d5c      mov eax, dword [var_24h]\l0x00109d5f      mov eax, dword [eax + 0x2c]\l0x00109d62      lea edx, [eax + 1]\l0x00109d65      mov eax, dword [var_24h]\l0x00109d68      mov dword [eax + 0x2c], edx\l0x00109d6b      mov eax, dword [var_24h]\l0x00109d6e      mov eax, dword [eax + 0x2c]\l0x00109d71      cmp eax, 0x1f                                          ; 31\l0x00109d74      jbe 0x109d80\l"]
	"0x00109d76" [URL="sym.ethread/0x00109d76", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109d76      mov eax, dword [var_24h]\l0x00109d79      mov dword [eax + 0x2c], 0\l"]
	"0x00109d80" [URL="sym.ethread/0x00109d80", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109d74\l0x00109d80      mov eax, dword [var_2ch]\l0x00109d83      mov word [eax + 4], 0x5f2                              ; [0x5f2:2]=0xffff ; 1522\l0x00109d89      mov eax, dword [var_24h]\l0x00109d8c      mov eax, dword [eax + 0x2c]\l0x00109d8f      test eax, eax\l0x00109d91      jne 0x109da5\l"]
	"0x00109d93" [URL="sym.ethread/0x00109d93", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109d93      mov eax, dword [var_2ch]\l0x00109d96      mov eax, dword [eax + 4]\l0x00109d99      or eax, 0xffff8000\l0x00109d9e      mov edx, dword [var_2ch]\l0x00109da1      mov word [edx + 4], ax\l"]
	"0x00109da5" [URL="sym.ethread/0x00109da5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109d91\l0x00109da5      mov eax, dword [var_2ch]\l0x00109da8      mov dword [eax], 0x80000000                            ; [0x80000000:4]=-1\l0x00109dae      cmp byte [var_19h], 1\l0x00109db2      jne 0x109dc1\l"]
	"0x00109db4" [URL="sym.ethread/0x00109db4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109db4      nop\l0x00109db5      mov edx, dword [arg_10h]\l0x00109db8      mov eax, dword [var_10h]\l0x00109dbb      cmp eax, edx\l0x00109dbd      jle 0x109dc8\l"]
	"0x00109dbf" [URL="sym.ethread/0x00109dbf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00109dbf      jmp 0x109dc6\l"]
	"0x00109dc1" [URL="sym.ethread/0x00109dc1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109db2\l0x00109dc1      jmp 0x109be8\l"]
	"0x00109dc6" [URL="sym.ethread/0x00109dc6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109dbf\l0x00109dc6      mov eax, edx\l"]
	"0x00109dc8" [URL="sym.ethread/0x00109dc8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.ethread @ 0x109dbd\l0x00109dc8      leave\l0x00109dc9      ret\l"]
        "0x00109baa" -> "0x00109be8" [color="#0037da"];
        "0x00109be8" -> "0x00109c4d" [color="#13a10e"];
        "0x00109be8" -> "0x00109c34" [color="#c50f1f"];
        "0x00109c34" -> "0x00109c4d" [color="#0037da"];
        "0x00109c4d" -> "0x00109c69" [color="#13a10e"];
        "0x00109c4d" -> "0x00109c63" [color="#c50f1f"];
        "0x00109c63" -> "0x00109c69" [color="#0037da"];
        "0x00109c69" -> "0x00109c8a" [color="#13a10e"];
        "0x00109c69" -> "0x00109c7d" [color="#c50f1f"];
        "0x00109c7d" -> "0x00109c8a" [color="#0037da"];
        "0x00109c8a" -> "0x00109cb2" [color="#13a10e"];
        "0x00109c8a" -> "0x00109c90" [color="#c50f1f"];
        "0x00109c90" -> "0x00109cb2" [color="#0037da"];
        "0x00109cb2" -> "0x00109d5c" [color="#13a10e"];
        "0x00109cb2" -> "0x00109cbc" [color="#c50f1f"];
        "0x00109cbc" -> "0x00109ce3" [color="#13a10e"];
        "0x00109cbc" -> "0x00109cdd" [color="#c50f1f"];
        "0x00109cdd" -> "0x00109d5c" [color="#0037da"];
        "0x00109ce3" -> "0x00109d08" [color="#13a10e"];
        "0x00109ce3" -> "0x00109d02" [color="#c50f1f"];
        "0x00109d02" -> "0x00109d5c" [color="#0037da"];
        "0x00109d08" -> "0x00109d4f" [color="#0037da"];
        "0x00109d15" -> "0x00109d4c" [color="#13a10e"];
        "0x00109d15" -> "0x00109d46" [color="#c50f1f"];
        "0x00109d46" -> "0x00109d5c" [color="#0037da"];
        "0x00109d4c" -> "0x00109d4f" [color="#0037da"];
        "0x00109d4f" -> "0x00109d15" [color="#13a10e"];
        "0x00109d4f" -> "0x00109d5c" [color="#c50f1f"];
        "0x00109d5c" -> "0x00109d80" [color="#13a10e"];
        "0x00109d5c" -> "0x00109d76" [color="#c50f1f"];
        "0x00109d76" -> "0x00109d80" [color="#0037da"];
        "0x00109d80" -> "0x00109da5" [color="#13a10e"];
        "0x00109d80" -> "0x00109d93" [color="#c50f1f"];
        "0x00109d93" -> "0x00109da5" [color="#0037da"];
        "0x00109da5" -> "0x00109dc1" [color="#13a10e"];
        "0x00109da5" -> "0x00109db4" [color="#c50f1f"];
        "0x00109db4" -> "0x00109dc8" [color="#13a10e"];
        "0x00109db4" -> "0x00109dbf" [color="#c50f1f"];
        "0x00109dbf" -> "0x00109dc6" [color="#0037da"];
        "0x00109dc1" -> "0x00109be8" [color="#0037da"];
        "0x00109dc6" -> "0x00109dc8" [color="#0037da"];
}
