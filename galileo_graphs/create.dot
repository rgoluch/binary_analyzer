digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x001009bc" [URL="sym.create/0x001009bc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; XREFS: CALL 0x001022a2  CALL 0x00102373  CALL 0x00102b80  \l  ; XREFS: CALL 0x00102bd7  CALL 0x0010a5a4  CALL 0x00110bf0  \l  ; XREFS: CALL 0x00110c23  CALL 0x00113ed2  \l617: sym.create (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h);\l; var int32_t var_2ch @ ebp-0x2c\l; var int32_t var_28h @ ebp-0x28\l; var int32_t var_24h @ ebp-0x24\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; arg int32_t arg_14h @ ebp+0x14\l; arg int32_t arg_18h @ ebp+0x18\l0x001009bc      push ebp\l0x001009bd      mov ebp, esp\l0x001009bf      push ebx\l0x001009c0      sub esp, 0x34\l0x001009c3      call sym.__x86.get_pc_thunk.bx\l0x001009c8      add ebx, 0x20638\l0x001009ce      mov eax, dword [arg_10h]\l0x001009d1      mov word [var_2ch], ax\l0x001009d5      call loc.disable\l0x001009da      mov dword [var_18h], eax\l0x001009dd      cmp dword [arg_ch], 0x18f\l0x001009e4      ja 0x1009ed\l"]
	"0x001009e6" [URL="sym.create/0x001009e6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001009e6      mov dword [arg_ch], 0x190                              ; 400\l"]
	"0x001009ed" [URL="sym.create/0x001009ed", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.create @ 0x1009e4\l0x001009ed      mov eax, dword [arg_ch]\l0x001009f0      add eax, 7\l0x001009f3      and eax, 0xfffffff8                                    ; 4294967288\l0x001009f6      mov dword [arg_ch], eax\l0x001009f9      cmp word [var_2ch], 0\l0x001009fe      jle 0x100a25\l"]
	"0x00100a00" [URL="sym.create/0x00100a00", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00100a00      call sym.newpid\l0x00100a05      mov dword [var_1ch], eax\l0x00100a08      cmp dword [var_1ch], 0xffffffff\l0x00100a0c      je 0x100a25\l"]
	"0x00100a0e" [URL="sym.create/0x00100a0e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00100a0e      sub esp, 0xc\l0x00100a11      push dword [arg_ch]\l0x00100a14      call sym.getstk\l0x00100a19      add esp, 0x10\l0x00100a1c      mov dword [var_14h], eax\l0x00100a1f      cmp dword [var_14h], 0xffffffff\l0x00100a23      jne 0x100a3d\l"]
	"0x00100a25" [URL="sym.create/0x00100a25", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.create @ 0x1009fe, 0x100a0c\l0x00100a25      sub esp, 0xc\l0x00100a28      push dword [var_18h]\l0x00100a2b      call loc.restore\l0x00100a30      add esp, 0x10\l0x00100a33      mov eax, 0xffffffff                                    ; -1\l0x00100a38      jmp 0x100c20\l"]
	"0x00100a3d" [URL="sym.create/0x00100a3d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.create @ 0x100a23\l0x00100a3d      mov eax, obj.prcount                                   ; 0x1228c0\l0x00100a43      mov eax, dword [eax]\l0x00100a45      lea edx, [eax + 1]\l0x00100a48      mov eax, obj.prcount                                   ; 0x1228c0\l0x00100a4e      mov dword [eax], edx\l0x00100a50      mov edx, dword [var_1ch]\l0x00100a53      mov eax, edx\l0x00100a55      shl eax, 3\l0x00100a58      sub eax, edx\l0x00100a5a      shl eax, 3\l0x00100a5d      mov edx, obj.proctab                                   ; 0x1212e0\l0x00100a63      add eax, edx\l0x00100a65      mov dword [var_20h], eax\l0x00100a68      mov eax, dword [var_20h]\l0x00100a6b      mov word [eax], 5\l0x00100a70      mov edx, dword [var_20h]\l0x00100a73      mov eax, dword [var_2ch]\l0x00100a76      mov word [edx + 2], ax\l0x00100a7a      mov eax, dword [var_20h]\l0x00100a7d      mov edx, dword [var_14h]\l0x00100a80      mov dword [eax + 8], edx\l0x00100a83      mov eax, dword [var_20h]\l0x00100a86      mov edx, dword [arg_ch]\l0x00100a89      mov dword [eax + 0xc], edx\l0x00100a8c      mov eax, dword [var_20h]\l0x00100a8f      mov byte [eax + 0x1f], 0\l0x00100a93      mov dword [var_ch], 0\l0x00100a9a      jmp 0x100a9f\l"]
	"0x00100a9c" [URL="sym.create/0x00100a9c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.create @ 0x100acb\l0x00100a9c      inc dword [var_ch]\l"]
	"0x00100a9f" [URL="sym.create/0x00100a9f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.create @ 0x100a9a\l0x00100a9f      cmp dword [var_ch], 0xe\l0x00100aa3      jg 0x100acd\l"]
	"0x00100aa5" [URL="sym.create/0x00100aa5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00100aa5      mov edx, dword [var_ch]\l0x00100aa8      mov eax, dword [arg_14h]\l0x00100aab      add eax, edx\l0x00100aad      mov al, byte [eax]\l0x00100aaf      mov ecx, dword [var_20h]\l0x00100ab2      mov edx, dword [var_ch]\l0x00100ab5      add edx, ecx\l0x00100ab7      add edx, 0x10                                          ; 16\l0x00100aba      mov byte [edx], al\l0x00100abc      mov edx, dword [var_20h]\l0x00100abf      mov eax, dword [var_ch]\l0x00100ac2      add eax, edx\l0x00100ac4      add eax, 0x10                                          ; 16\l0x00100ac7      mov al, byte [eax]\l0x00100ac9      test al, al\l0x00100acb      jne 0x100a9c\l"]
	"0x00100acd" [URL="sym.create/0x00100acd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.create @ 0x100aa3\l0x00100acd      mov eax, dword [var_20h]\l0x00100ad0      mov dword [eax + 0x20], 0xffffffff                     ; [0xffffffff:4]=-1 ; -1\l0x00100ad7      call sym.getpid                                        ; int getpid(void)\l0x00100adc      mov edx, eax\l0x00100ade      mov eax, dword [var_20h]\l0x00100ae1      mov dword [eax + 0x24], edx\l0x00100ae4      mov eax, dword [var_20h]\l0x00100ae7      mov byte [eax + 0x2c], 0\l0x00100aeb      mov eax, dword [var_20h]\l0x00100aee      mov word [eax + 0x2e], 0\l0x00100af4      mov eax, dword [var_20h]\l0x00100af7      mov word [eax + 0x30], 0\l0x00100afd      mov eax, dword [var_20h]\l0x00100b00      mov word [eax + 0x32], 0\l0x00100b06      mov eax, dword [var_14h]\l0x00100b09      mov dword [eax], 0xa0aaaa9                             ; [0xa0aaaa9:4]=-1\l0x00100b0f      mov eax, dword [var_14h]\l0x00100b12      mov dword [var_24h], eax\l0x00100b15      lea eax, [arg_18h]\l0x00100b18      add eax, 4\l0x00100b1b      mov dword [var_10h], eax\l0x00100b1e      mov eax, dword [arg_18h]\l0x00100b21      add eax, 0x3fffffff\l0x00100b26      shl eax, 2\l0x00100b29      add dword [var_10h], eax\l0x00100b2c      jmp 0x100b49\l"]
	"0x00100b2e" [URL="sym.create/0x00100b2e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.create @ 0x100b4e\l0x00100b2e      mov eax, dword [var_10h]\l0x00100b31      lea edx, [eax - 4]\l0x00100b34      mov dword [var_10h], edx\l0x00100b37      sub dword [var_14h], 4\l0x00100b3b      mov edx, dword [eax]\l0x00100b3d      mov eax, dword [var_14h]\l0x00100b40      mov dword [eax], edx\l0x00100b42      mov eax, dword [arg_18h]\l0x00100b45      dec eax\l0x00100b46      mov dword [arg_18h], eax\l"]
	"0x00100b49" [URL="sym.create/0x00100b49", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.create @ 0x100b2c\l0x00100b49      mov eax, dword [arg_18h]\l0x00100b4c      test eax, eax\l0x00100b4e      jne 0x100b2e\l"]
	"0x00100b50" [URL="sym.create/0x00100b50", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00100b50      sub dword [var_14h], 4\l0x00100b54      mov eax, sym.userret                                   ; 0x1056eb ; \"U\\x89\\xe5S\\x83\\xec\\x04\\u82ef\\xff\\xff\\x81\\xc3\\t\\xb9\\x01\"\l0x00100b5a      mov edx, eax\l0x00100b5c      mov eax, dword [var_14h]\l0x00100b5f      mov dword [eax], edx\l0x00100b61      sub dword [var_14h], 4\l0x00100b65      mov edx, dword [arg_8h]\l0x00100b68      mov eax, dword [var_14h]\l0x00100b6b      mov dword [eax], edx\l0x00100b6d      sub dword [var_14h], 4\l0x00100b71      mov eax, dword [var_14h]\l0x00100b74      mov edx, dword [var_24h]\l0x00100b77      mov dword [eax], edx\l0x00100b79      mov eax, dword [var_14h]\l0x00100b7c      mov dword [var_24h], eax\l0x00100b7f      sub dword [var_14h], 4\l0x00100b83      mov eax, dword [var_14h]\l0x00100b86      mov dword [eax], 0x200                                 ; [0x200:4]=-1 ; 512\l0x00100b8c      sub dword [var_14h], 4\l0x00100b90      mov eax, dword [var_14h]\l0x00100b93      mov dword [eax], 0\l0x00100b99      sub dword [var_14h], 4\l0x00100b9d      mov eax, dword [var_14h]\l0x00100ba0      mov dword [eax], 0\l0x00100ba6      sub dword [var_14h], 4\l0x00100baa      mov eax, dword [var_14h]\l0x00100bad      mov dword [eax], 0\l0x00100bb3      sub dword [var_14h], 4\l0x00100bb7      mov eax, dword [var_14h]\l0x00100bba      mov dword [eax], 0\l0x00100bc0      sub dword [var_14h], 4\l0x00100bc4      mov eax, dword [var_14h]\l0x00100bc7      mov dword [eax], 0\l0x00100bcd      mov eax, dword [var_14h]\l0x00100bd0      mov dword [var_28h], eax\l0x00100bd3      sub dword [var_14h], 4\l0x00100bd7      mov eax, dword [var_14h]\l0x00100bda      mov edx, dword [var_24h]\l0x00100bdd      mov dword [eax], edx\l0x00100bdf      sub dword [var_14h], 4\l0x00100be3      mov eax, dword [var_14h]\l0x00100be6      mov dword [eax], 0\l0x00100bec      sub dword [var_14h], 4\l0x00100bf0      mov eax, dword [var_14h]\l0x00100bf3      mov dword [eax], 0\l0x00100bf9      mov eax, dword [var_20h]\l0x00100bfc      mov edx, dword [var_14h]\l0x00100bff      mov dword [eax + 4], edx\l0x00100c02      mov eax, dword [var_20h]\l0x00100c05      mov eax, dword [eax + 4]\l0x00100c08      mov edx, eax\l0x00100c0a      mov eax, dword [var_28h]\l0x00100c0d      mov dword [eax], edx\l0x00100c0f      sub esp, 0xc\l0x00100c12      push dword [var_18h]\l0x00100c15      call loc.restore\l0x00100c1a      add esp, 0x10\l0x00100c1d      mov eax, dword [var_1ch]\l"]
	"0x00100c20" [URL="sym.create/0x00100c20", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.create @ 0x100a38\l0x00100c20      mov ebx, dword [var_4h]\l0x00100c23      leave\l0x00100c24      ret\l"]
        "0x001009bc" -> "0x001009ed" [color="#13a10e"];
        "0x001009bc" -> "0x001009e6" [color="#c50f1f"];
        "0x001009e6" -> "0x001009ed" [color="#0037da"];
        "0x001009ed" -> "0x00100a25" [color="#13a10e"];
        "0x001009ed" -> "0x00100a00" [color="#c50f1f"];
        "0x00100a00" -> "0x00100a25" [color="#13a10e"];
        "0x00100a00" -> "0x00100a0e" [color="#c50f1f"];
        "0x00100a0e" -> "0x00100a3d" [color="#13a10e"];
        "0x00100a0e" -> "0x00100a25" [color="#c50f1f"];
        "0x00100a25" -> "0x00100c20" [color="#0037da"];
        "0x00100a3d" -> "0x00100a9f" [color="#0037da"];
        "0x00100a9c" -> "0x00100a9f" [color="#0037da"];
        "0x00100a9f" -> "0x00100acd" [color="#13a10e"];
        "0x00100a9f" -> "0x00100aa5" [color="#c50f1f"];
        "0x00100aa5" -> "0x00100a9c" [color="#13a10e"];
        "0x00100aa5" -> "0x00100acd" [color="#c50f1f"];
        "0x00100acd" -> "0x00100b49" [color="#0037da"];
        "0x00100b2e" -> "0x00100b49" [color="#0037da"];
        "0x00100b49" -> "0x00100b2e" [color="#13a10e"];
        "0x00100b49" -> "0x00100b50" [color="#c50f1f"];
        "0x00100b50" -> "0x00100c20" [color="#0037da"];
}
