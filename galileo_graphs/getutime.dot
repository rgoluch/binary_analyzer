digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00101eb3" [URL="sym.getutime/0x00101eb3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.gettime @ 0x101e83\l540: sym.getutime (int32_t arg_8h);\l; var int32_t var_44h @ ebp-0x44\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l0x00101eb3      push ebp\l0x00101eb4      mov ebp, esp\l0x00101eb6      push ebx\l0x00101eb7      sub esp, 0x44\l0x00101eba      call sym.__x86.get_pc_thunk.bx\l0x00101ebf      add ebx, 0x1f141\l0x00101ec5      mov eax, obj.Date                                      ; 0x11f7e0\l0x00101ecb      mov al, byte [eax + 4]\l0x00101ece      test al, al\l0x00101ed0      je 0x101ef3\l"]
	"0x00101ed2" [URL="sym.getutime/0x00101ed2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00101ed2      mov eax, obj.Date                                      ; 0x11f7e0\l0x00101ed8      mov edx, dword [eax]\l0x00101eda      mov eax, obj.clktime                                   ; 0x121140\l0x00101ee0      mov eax, dword [eax]\l0x00101ee2      add edx, eax\l0x00101ee4      mov eax, dword [arg_8h]\l0x00101ee7      mov dword [eax], edx\l0x00101ee9      mov eax, 1\l0x00101eee      jmp 0x1020ca\l"]
	"0x00101ef3" [URL="sym.getutime/0x00101ef3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.getutime @ 0x101ed0\l0x00101ef3      call sym.getlocalip\l0x00101ef8      cmp eax, 0xffffffff\l0x00101efb      jne 0x101f07\l"]
	"0x00101efd" [URL="sym.getutime/0x00101efd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00101efd      mov eax, 0xffffffff                                    ; -1\l0x00101f02      jmp 0x1020ca\l"]
	"0x00101f07" [URL="sym.getutime/0x00101f07", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.getutime @ 0x101efb\l0x00101f07      mov eax, obj.NetData                                   ; 0x140200\l0x00101f0d      mov eax, dword [eax + 0x1c]\l0x00101f10      test eax, eax\l0x00101f12      jne 0x101f3f\l"]
	"0x00101f14" [URL="sym.getutime/0x00101f14", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00101f14      sub esp, 8\l0x00101f17      mov eax, obj.NetData                                   ; 0x140200\l0x00101f1d      lea eax, [eax + 0x1c]\l0x00101f20      push eax\l0x00101f21      lea eax, [ebx - 0x8eb8]\l0x00101f27      push eax\l0x00101f28      call sym.dot2ip\l0x00101f2d      add esp, 0x10\l0x00101f30      cmp eax, 0xffffffff\l0x00101f33      jne 0x101f3f\l"]
	"0x00101f35" [URL="sym.getutime/0x00101f35", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00101f35      mov eax, 0xffffffff                                    ; -1\l0x00101f3a      jmp 0x1020ca\l"]
	"0x00101f3f" [URL="sym.getutime/0x00101f3f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.getutime @ 0x101f12, 0x101f33\l0x00101f3f      mov eax, obj.NetData                                   ; 0x140200\l0x00101f45      mov eax, dword [eax + 0x1c]\l0x00101f48      sub esp, 4\l0x00101f4b      push 0xd1ae\l0x00101f50      push 0x7b                                              ; '{' ; 123\l0x00101f52      push eax\l0x00101f53      call sym.udp_register\l0x00101f58      add esp, 0x10\l0x00101f5b      mov dword [var_ch], eax\l0x00101f5e      cmp dword [var_ch], 0xffffffff\l0x00101f62      jne 0x101fa4\l"]
	"0x00101f64" [URL="sym.getutime/0x00101f64", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00101f64      mov eax, obj.currpid                                   ; 0x1212c0\l0x00101f6a      mov edx, dword [eax]\l0x00101f6c      mov ecx, obj.proctab                                   ; 0x1212e0\l0x00101f72      mov eax, edx\l0x00101f74      shl eax, 3\l0x00101f77      sub eax, edx\l0x00101f79      shl eax, 3\l0x00101f7c      add eax, ecx\l0x00101f7e      add eax, 0x32                                          ; 50\l0x00101f81      mov ax, word [eax]\l0x00101f84      cwde\l0x00101f85      sub esp, 4\l0x00101f88      push 0x7b                                              ; '{' ; 123\l0x00101f8a      lea edx, [ebx - 0x8ea8]\l0x00101f90      push edx\l0x00101f91      push eax\l0x00101f92      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00101f97      add esp, 0x10\l0x00101f9a      mov eax, 0xffffffff                                    ; -1\l0x00101f9f      jmp 0x1020ca\l"]
	"0x00101fa4" [URL="sym.getutime/0x00101fa4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.getutime @ 0x101f62\l0x00101fa4      sub esp, 4\l0x00101fa7      push 0x30                                              ; '0' ; 48\l0x00101fa9      push 0\l0x00101fab      lea eax, [var_44h]\l0x00101fae      push eax\l0x00101faf      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x00101fb4      add esp, 0x10\l0x00101fb7      mov byte [var_44h], 0x1b                               ; 27\l0x00101fbb      sub esp, 4\l0x00101fbe      push 0x30                                              ; '0' ; 48\l0x00101fc0      lea eax, [var_44h]\l0x00101fc3      push eax\l0x00101fc4      push dword [var_ch]\l0x00101fc7      call sym.udp_send\l0x00101fcc      add esp, 0x10\l0x00101fcf      mov dword [var_10h], eax\l0x00101fd2      cmp dword [var_10h], 0xffffffff\l0x00101fd6      jne 0x102024\l"]
	"0x00101fd8" [URL="sym.getutime/0x00101fd8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00101fd8      mov eax, obj.currpid                                   ; 0x1212c0\l0x00101fde      mov edx, dword [eax]\l0x00101fe0      mov ecx, obj.proctab                                   ; 0x1212e0\l0x00101fe6      mov eax, edx\l0x00101fe8      shl eax, 3\l0x00101feb      sub eax, edx\l0x00101fed      shl eax, 3\l0x00101ff0      add eax, ecx\l0x00101ff2      add eax, 0x32                                          ; 50\l0x00101ff5      mov ax, word [eax]\l0x00101ff8      cwde\l0x00101ff9      sub esp, 8\l0x00101ffc      lea edx, [ebx - 0x8e7c]\l0x00102002      push edx\l0x00102003      push eax\l0x00102004      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00102009      add esp, 0x10\l0x0010200c      sub esp, 0xc\l0x0010200f      push dword [var_ch]\l0x00102012      call sym.udp_release\l0x00102017      add esp, 0x10\l0x0010201a      mov eax, 0xffffffff                                    ; -1\l0x0010201f      jmp 0x1020ca\l"]
	"0x00102024" [URL="sym.getutime/0x00102024", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.getutime @ 0x101fd6\l0x00102024      push 0x7d0                                             ; 2000\l0x00102029      push 0x30                                              ; '0' ; 48\l0x0010202b      lea eax, [var_44h]\l0x0010202e      push eax\l0x0010202f      push dword [var_ch]\l0x00102032      call sym.udp_recv\l0x00102037      add esp, 0x10\l0x0010203a      mov dword [var_10h], eax\l0x0010203d      cmp dword [var_10h], 0xffffffff\l0x00102041      je 0x102049\l"]
	"0x00102043" [URL="sym.getutime/0x00102043", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00102043      cmp dword [var_10h], 0xfffffffd\l0x00102047      jne 0x10205e\l"]
	"0x00102049" [URL="sym.getutime/0x00102049", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.getutime @ 0x102041\l0x00102049      sub esp, 0xc\l0x0010204c      push dword [var_ch]\l0x0010204f      call sym.udp_release\l0x00102054      add esp, 0x10\l0x00102057      mov eax, 0xffffffff                                    ; -1\l0x0010205c      jmp 0x1020ca\l"]
	"0x0010205e" [URL="sym.getutime/0x0010205e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.getutime @ 0x102047\l0x0010205e      sub esp, 0xc\l0x00102061      push dword [var_ch]\l0x00102064      call sym.udp_release\l0x00102069      add esp, 0x10\l0x0010206c      mov eax, dword [var_1ch]\l0x0010206f      shr eax, 0x18\l0x00102072      mov edx, eax\l0x00102074      mov eax, dword [var_1ch]\l0x00102077      shr eax, 8\l0x0010207a      and eax, 0xff00\l0x0010207f      or edx, eax\l0x00102081      mov eax, dword [var_1ch]\l0x00102084      shl eax, 8\l0x00102087      and eax, 0xff0000\l0x0010208c      or edx, eax\l0x0010208e      mov eax, dword [var_1ch]\l0x00102091      shl eax, 0x18\l0x00102094      or eax, edx\l0x00102096      add eax, 0x7c558180\l0x0010209b      mov dword [var_14h], eax\l0x0010209e      mov eax, obj.clktime                                   ; 0x121140\l0x001020a4      mov eax, dword [eax]\l0x001020a6      mov edx, dword [var_14h]\l0x001020a9      sub edx, eax\l0x001020ab      mov eax, obj.Date                                      ; 0x11f7e0\l0x001020b1      mov dword [eax], edx\l0x001020b3      mov eax, obj.Date                                      ; 0x11f7e0\l0x001020b9      mov byte [eax + 4], 1\l0x001020bd      mov eax, dword [arg_8h]\l0x001020c0      mov edx, dword [var_14h]\l0x001020c3      mov dword [eax], edx\l0x001020c5      mov eax, 1\l"]
	"0x001020ca" [URL="sym.getutime/0x001020ca", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00101eee  CODE 0x00101f02  CODE 0x00101f3a  \l; XREFS: CODE 0x00101f9f  CODE 0x0010201f  CODE 0x0010205c  \l0x001020ca      mov ebx, dword [var_4h]\l0x001020cd      leave\l0x001020ce      ret\l"]
        "0x00101eb3" -> "0x00101ef3" [color="#13a10e"];
        "0x00101eb3" -> "0x00101ed2" [color="#c50f1f"];
        "0x00101ed2" -> "0x001020ca" [color="#0037da"];
        "0x00101ef3" -> "0x00101f07" [color="#13a10e"];
        "0x00101ef3" -> "0x00101efd" [color="#c50f1f"];
        "0x00101efd" -> "0x001020ca" [color="#0037da"];
        "0x00101f07" -> "0x00101f3f" [color="#13a10e"];
        "0x00101f07" -> "0x00101f14" [color="#c50f1f"];
        "0x00101f14" -> "0x00101f3f" [color="#13a10e"];
        "0x00101f14" -> "0x00101f35" [color="#c50f1f"];
        "0x00101f35" -> "0x001020ca" [color="#0037da"];
        "0x00101f3f" -> "0x00101fa4" [color="#13a10e"];
        "0x00101f3f" -> "0x00101f64" [color="#c50f1f"];
        "0x00101f64" -> "0x001020ca" [color="#0037da"];
        "0x00101fa4" -> "0x00102024" [color="#13a10e"];
        "0x00101fa4" -> "0x00101fd8" [color="#c50f1f"];
        "0x00101fd8" -> "0x001020ca" [color="#0037da"];
        "0x00102024" -> "0x00102049" [color="#13a10e"];
        "0x00102024" -> "0x00102043" [color="#c50f1f"];
        "0x00102043" -> "0x0010205e" [color="#13a10e"];
        "0x00102043" -> "0x00102049" [color="#c50f1f"];
        "0x00102049" -> "0x001020ca" [color="#0037da"];
        "0x0010205e" -> "0x001020ca" [color="#0037da"];
}
