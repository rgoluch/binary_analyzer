digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010b93f" [URL="sym.lflinit/0x0010b93f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="251: sym.lflinit (int32_t arg_8h);\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l; var int32_t var_28h @ esp+0x4\l; var int32_t var_24h @ esp+0x8\l0x0010b93f      push ebp\l0x0010b940      mov ebp, esp\l0x0010b942      sub esp, 0x28\l0x0010b945      mov eax, dword [arg_8h]\l0x0010b948      mov edx, dword [eax + 4]\l0x0010b94b      mov eax, edx\l0x0010b94d      shl eax, 2\l0x0010b950      add eax, edx\l0x0010b952      shl eax, 7\l0x0010b955      add eax, obj.lfltab                                    ; 0x13e740\l0x0010b95a      mov dword [var_10h], eax\l0x0010b95d      mov eax, dword [var_10h]\l0x0010b960      mov byte [eax], 0\l0x0010b963      mov eax, dword [arg_8h]\l0x0010b966      mov edx, dword [eax]\l0x0010b968      mov eax, dword [var_10h]\l0x0010b96b      mov dword [eax + 4], edx\l0x0010b96e      mov dword [esp], 1\l0x0010b975      call sym.semcreate\l0x0010b97a      mov edx, dword [var_10h]\l0x0010b97d      mov dword [edx + 8], eax\l0x0010b980      mov eax, dword [var_10h]\l0x0010b983      mov dword [eax + 0xc], 0\l0x0010b98a      mov eax, dword [var_10h]\l0x0010b98d      mov dword [eax + 0x14], 0\l0x0010b994      mov dword [var_ch], 0\l0x0010b99b      jmp 0x10b9af\l"]
	"0x0010b99d" [URL="sym.lflinit/0x0010b99d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lflinit @ 0x10b9b3\l0x0010b99d      mov edx, dword [var_10h]\l0x0010b9a0      mov eax, dword [var_ch]\l0x0010b9a3      add eax, edx\l0x0010b9a5      add eax, 0x10                                          ; 16\l0x0010b9a8      mov byte [eax + 8], 0\l0x0010b9ac      inc dword [var_ch]\l"]
	"0x0010b9af" [URL="sym.lflinit/0x0010b9af", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lflinit @ 0x10b99b\l0x0010b9af      cmp dword [var_ch], 0xf\l0x0010b9b3      jle 0x10b99d\l"]
	"0x0010b9b5" [URL="sym.lflinit/0x0010b9b5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010b9b5      mov eax, dword [var_10h]\l0x0010b9b8      mov dword [eax + 0x28], 0xffffffff                     ; [0xffffffff:4]=-1 ; -1\l0x0010b9bf      mov eax, dword [var_10h]\l0x0010b9c2      add eax, 0x2c                                          ; 44\l0x0010b9c5      mov dword [var_24h], 0x48                              ; 'H'\l                                                                       ; [0x48:4]=-1 ; 72\l0x0010b9cd      mov dword [var_28h], 0\l0x0010b9d5      mov dword [esp], eax\l0x0010b9d8      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x0010b9dd      mov eax, dword [var_10h]\l0x0010b9e0      mov dword [eax + 0x74], 0\l0x0010b9e7      mov eax, dword [var_10h]\l0x0010b9ea      add eax, 0x78                                          ; 120\l0x0010b9ed      mov dword [var_24h], 0x200                             ; [0x200:4]=-1 ; 512\l0x0010b9f5      mov dword [var_28h], 0\l0x0010b9fd      mov dword [esp], eax\l0x0010ba00      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x0010ba05      mov eax, dword [var_10h]\l0x0010ba08      lea edx, [eax + 0x278]\l0x0010ba0e      mov eax, dword [var_10h]\l0x0010ba11      mov dword [eax + 0x278], edx\l0x0010ba17      mov eax, dword [var_10h]\l0x0010ba1a      mov byte [eax + 0x27d], 0\l0x0010ba21      mov eax, dword [var_10h]\l0x0010ba24      mov dl, byte [eax + 0x27d]\l0x0010ba2a      mov eax, dword [var_10h]\l0x0010ba2d      mov byte [eax + 0x27c], dl\l0x0010ba33      mov eax, 1\l0x0010ba38      leave\l0x0010ba39      ret\l"]
        "0x0010b93f" -> "0x0010b9af" [color="#0037da"];
        "0x0010b99d" -> "0x0010b9af" [color="#0037da"];
        "0x0010b9af" -> "0x0010b99d" [color="#13a10e"];
        "0x0010b9af" -> "0x0010b9b5" [color="#c50f1f"];
}
