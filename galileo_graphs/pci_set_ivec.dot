digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x001037ba" [URL="sym.pci_set_ivec/0x001037ba", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.ttyinit @ 0x108849\l  ; CALL XREF from sym.ethinit @ 0x10960b\l354: sym.pci_set_ivec (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h);\l; var int32_t var_eh @ ebp-0xe\l; var int32_t var_dh @ ebp-0xd\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_ah @ ebp-0xa\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; arg int32_t arg_14h @ ebp+0x14\l0x001037ba      push ebp\l0x001037bb      mov ebp, esp\l0x001037bd      push ebx\l0x001037be      sub esp, 0x14\l0x001037c1      call sym.__x86.get_pc_thunk.bx\l0x001037c6      add ebx, 0x1d83a\l0x001037cc      lea eax, [var_eh]\l0x001037cf      push eax\l0x001037d0      push 0x34                                              ; '4' ; 52\l0x001037d2      push dword [arg_8h]\l0x001037d5      call sym.pci_read_config_byte\l0x001037da      add esp, 0xc\l0x001037dd      jmp 0x103819\l"]
	"0x001037df" [URL="sym.pci_set_ivec/0x001037df", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pci_set_ivec @ 0x10381e\l0x001037df      mov al, byte [var_eh]\l0x001037e2      and eax, 0xff                                          ; 255\l0x001037e7      lea edx, [var_dh]\l0x001037ea      push edx\l0x001037eb      push eax\l0x001037ec      push dword [arg_8h]\l0x001037ef      call sym.pci_read_config_byte\l0x001037f4      add esp, 0xc\l0x001037f7      mov al, byte [var_dh]\l0x001037fa      cmp al, 5                                              ; 5\l0x001037fc      je 0x103822\l"]
	"0x001037fe" [URL="sym.pci_set_ivec/0x001037fe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001037fe      mov al, byte [var_eh]\l0x00103801      and eax, 0xff                                          ; 255\l0x00103806      lea edx, [eax + 1]\l0x00103809      lea eax, [var_eh]\l0x0010380c      push eax\l0x0010380d      push edx\l0x0010380e      push dword [arg_8h]\l0x00103811      call sym.pci_read_config_byte\l0x00103816      add esp, 0xc\l"]
	"0x00103819" [URL="sym.pci_set_ivec/0x00103819", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pci_set_ivec @ 0x1037dd\l0x00103819      mov al, byte [var_eh]\l0x0010381c      test al, al\l0x0010381e      jne 0x1037df\l"]
	"0x00103820" [URL="sym.pci_set_ivec/0x00103820", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00103820      jmp 0x103823\l"]
	"0x00103822" [URL="sym.pci_set_ivec/0x00103822", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pci_set_ivec @ 0x1037fc\l0x00103822      nop\l"]
	"0x00103823" [URL="sym.pci_set_ivec/0x00103823", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pci_set_ivec @ 0x103820\l0x00103823      mov al, byte [var_eh]\l0x00103826      test al, al\l0x00103828      jne 0x10383c\l"]
	"0x0010382a" [URL="sym.pci_set_ivec/0x0010382a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010382a      sub esp, 0xc\l0x0010382d      lea eax, [ebx - 0x8c34]\l0x00103833      push eax\l0x00103834      call sym.panic\l0x00103839      add esp, 0x10\l"]
	"0x0010383c" [URL="sym.pci_set_ivec/0x0010383c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pci_set_ivec @ 0x103828\l0x0010383c      mov eax, dword [arg_ch]\l0x0010383f      sub esp, 4\l0x00103842      push dword [arg_14h]\l0x00103845      push dword [arg_10h]\l0x00103848      push eax\l0x00103849      call sym.set_ivec\l0x0010384e      add esp, 0x10\l0x00103851      sub esp, 4\l0x00103854      lea eax, [var_ah]\l0x00103857      push eax\l0x00103858      push 4                                                 ; 4\l0x0010385a      push dword [arg_8h]\l0x0010385d      call sym.pci_read_config_word\l0x00103862      add esp, 0x10\l0x00103865      mov ax, word [var_ah]\l0x00103869      and ah, 0xfb                                           ; 251\l0x0010386c      mov word [var_ah], ax\l0x00103870      mov ax, word [var_ah]\l0x00103874      and eax, 0xffff\l0x00103879      sub esp, 4\l0x0010387c      push eax\l0x0010387d      push 4                                                 ; 4\l0x0010387f      push dword [arg_8h]\l0x00103882      call sym.pci_write_config_word\l0x00103887      add esp, 0x10\l0x0010388a      mov al, byte [var_eh]\l0x0010388d      and eax, 0xff                                          ; 255\l0x00103892      add eax, 4\l0x00103895      sub esp, 4\l0x00103898      push 0xfee00000\l0x0010389d      push eax\l0x0010389e      push dword [arg_8h]\l0x001038a1      call sym.pci_write_config_dword\l0x001038a6      add esp, 0x10\l0x001038a9      mov edx, dword [arg_ch]\l0x001038ac      mov al, byte [var_eh]\l0x001038af      and eax, 0xff                                          ; 255\l0x001038b4      add eax, 8\l0x001038b7      sub esp, 4\l0x001038ba      push edx\l0x001038bb      push eax\l0x001038bc      push dword [arg_8h]\l0x001038bf      call sym.pci_write_config_dword\l0x001038c4      add esp, 0x10\l0x001038c7      mov al, byte [var_eh]\l0x001038ca      and eax, 0xff                                          ; 255\l0x001038cf      lea edx, [eax + 2]\l0x001038d2      sub esp, 4\l0x001038d5      lea eax, [var_ch]\l0x001038d8      push eax\l0x001038d9      push edx\l0x001038da      push dword [arg_8h]\l0x001038dd      call sym.pci_read_config_word\l0x001038e2      add esp, 0x10\l0x001038e5      mov eax, dword [var_ch]\l0x001038e8      or eax, 1\l0x001038eb      mov word [var_ch], ax\l0x001038ef      mov eax, dword [var_ch]\l0x001038f2      xor edx, edx\l0x001038f4      mov dx, ax\l0x001038f7      mov al, byte [var_eh]\l0x001038fa      and eax, 0xff                                          ; 255\l0x001038ff      add eax, 2\l0x00103902      sub esp, 4\l0x00103905      push edx\l0x00103906      push eax\l0x00103907      push dword [arg_8h]\l0x0010390a      call sym.pci_write_config_word\l0x0010390f      add esp, 0x10\l0x00103912      mov eax, 1\l0x00103917      mov ebx, dword [var_4h]\l0x0010391a      leave\l0x0010391b      ret\l"]
        "0x001037ba" -> "0x00103819" [color="#0037da"];
        "0x001037df" -> "0x00103822" [color="#13a10e"];
        "0x001037df" -> "0x001037fe" [color="#c50f1f"];
        "0x001037fe" -> "0x00103819" [color="#0037da"];
        "0x00103819" -> "0x001037df" [color="#13a10e"];
        "0x00103819" -> "0x00103820" [color="#c50f1f"];
        "0x00103820" -> "0x00103823" [color="#0037da"];
        "0x00103822" -> "0x00103823" [color="#0037da"];
        "0x00103823" -> "0x0010383c" [color="#13a10e"];
        "0x00103823" -> "0x0010382a" [color="#c50f1f"];
        "0x0010382a" -> "0x0010383c" [color="#0037da"];
}
