digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010ad45" [URL="sym.rdsread/0x0010ad45", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="597: sym.rdsread (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h);\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; var int32_t var_38h @ esp+0x4\l; var int32_t var_34h @ esp+0x8\l0x0010ad45      push ebp\l0x0010ad46      mov ebp, esp\l0x0010ad48      sub esp, 0x38\l0x0010ad4b      mov eax, dword [arg_8h]\l0x0010ad4e      mov edx, dword [eax + 4]\l0x0010ad51      mov eax, edx\l0x0010ad53      shl eax, 2\l0x0010ad56      add eax, edx\l0x0010ad58      lea edx, [eax*8]\l0x0010ad5f      sub edx, eax\l0x0010ad61      lea eax, [edx*4]\l0x0010ad68      mov edx, eax\l0x0010ad6a      lea eax, [edx + obj.rdstab]                            ; 0x1256a0\l0x0010ad70      mov dword [var_14h], eax\l0x0010ad73      mov eax, dword [var_14h]\l0x0010ad76      mov eax, dword [eax]\l0x0010ad78      cmp eax, 1                                             ; 1\l0x0010ad7b      je 0x10ad87\l"]
	"0x0010ad7d" [URL="sym.rdsread/0x0010ad7d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ad7d      mov eax, 0xffffffff                                    ; -1\l0x0010ad82      jmp 0x10af98\l"]
	"0x0010ad87" [URL="sym.rdsread/0x0010ad87", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10ad7b\l0x0010ad87      mov eax, dword [var_14h]\l0x0010ad8a      mov al, byte [eax + 0x70]\l0x0010ad8d      test al, al\l0x0010ad8f      jne 0x10ada6\l"]
	"0x0010ad91" [URL="sym.rdsread/0x0010ad91", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ad91      mov eax, dword [var_14h]\l0x0010ad94      mov byte [eax + 0x70], 1\l0x0010ad98      mov eax, dword [var_14h]\l0x0010ad9b      mov eax, dword [eax + 0x6c]\l0x0010ad9e      mov dword [esp], eax\l0x0010ada1      call sym.resume\l"]
	"0x0010ada6" [URL="sym.rdsread/0x0010ada6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10ad8f\l0x0010ada6      mov eax, dword [var_14h]\l0x0010ada9      mov eax, dword [eax + 0x58]\l0x0010adac      mov dword [var_ch], eax\l0x0010adaf      jmp 0x10adfa\l"]
	"0x0010adb1" [URL="sym.rdsread/0x0010adb1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10ae03\l0x0010adb1      mov eax, dword [var_ch]\l0x0010adb4      mov edx, dword [eax + 0x10]\l0x0010adb7      mov eax, dword [arg_10h]\l0x0010adba      cmp edx, eax\l0x0010adbc      jne 0x10adf2\l"]
	"0x0010adbe" [URL="sym.rdsread/0x0010adbe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010adbe      mov eax, dword [var_ch]\l0x0010adc1      mov eax, dword [eax + 0x14]\l0x0010adc4      cmp eax, 1                                             ; 1\l0x0010adc7      jne 0x10adcb\l"]
	"0x0010adc9" [URL="sym.rdsread/0x0010adc9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010adc9      jmp 0x10ae05\l"]
	"0x0010adcb" [URL="sym.rdsread/0x0010adcb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10adc7\l0x0010adcb      mov eax, dword [var_ch]\l0x0010adce      add eax, 0x1c                                          ; 28\l0x0010add1      mov dword [var_34h], 0x200                             ; [0x200:4]=-1 ; 512\l0x0010add9      mov dword [var_38h], eax\l0x0010addd      mov eax, dword [arg_ch]\l0x0010ade0      mov dword [esp], eax\l0x0010ade3      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010ade8      mov eax, 1\l0x0010aded      jmp 0x10af98\l"]
	"0x0010adf2" [URL="sym.rdsread/0x0010adf2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10adbc\l0x0010adf2      mov eax, dword [var_ch]\l0x0010adf5      mov eax, dword [eax]\l0x0010adf7      mov dword [var_ch], eax\l"]
	"0x0010adfa" [URL="sym.rdsread/0x0010adfa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10adaf\l0x0010adfa      mov eax, dword [var_14h]\l0x0010adfd      add eax, 0x60                                          ; 96\l0x0010ae00      cmp eax, dword [var_ch]\l0x0010ae03      jne 0x10adb1\l"]
	"0x0010ae05" [URL="sym.rdsread/0x0010ae05", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10adc9\l0x0010ae05      mov eax, dword [var_14h]\l0x0010ae08      mov eax, dword [eax + 0x54]\l0x0010ae0b      mov dword [var_ch], eax\l0x0010ae0e      jmp 0x10ae5a\l"]
	"0x0010ae10" [URL="sym.rdsread/0x0010ae10", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10ae63\l0x0010ae10      mov eax, dword [var_ch]\l0x0010ae13      mov edx, dword [eax + 0x10]\l0x0010ae16      mov eax, dword [arg_10h]\l0x0010ae19      cmp edx, eax\l0x0010ae1b      jne 0x10ae51\l"]
	"0x0010ae1d" [URL="sym.rdsread/0x0010ae1d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ae1d      mov eax, dword [var_ch]\l0x0010ae20      mov eax, dword [eax + 8]\l0x0010ae23      cmp eax, 2                                             ; 2\l0x0010ae26      jne 0x10ae4f\l"]
	"0x0010ae28" [URL="sym.rdsread/0x0010ae28", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ae28      mov eax, dword [var_ch]\l0x0010ae2b      add eax, 0x1c                                          ; 28\l0x0010ae2e      mov dword [var_34h], 0x200                             ; [0x200:4]=-1 ; 512\l0x0010ae36      mov dword [var_38h], eax\l0x0010ae3a      mov eax, dword [arg_ch]\l0x0010ae3d      mov dword [esp], eax\l0x0010ae40      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010ae45      mov eax, 1\l0x0010ae4a      jmp 0x10af98\l"]
	"0x0010ae4f" [URL="sym.rdsread/0x0010ae4f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10ae26\l0x0010ae4f      jmp 0x10ae65\l"]
	"0x0010ae51" [URL="sym.rdsread/0x0010ae51", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10ae1b\l0x0010ae51      mov eax, dword [var_ch]\l0x0010ae54      mov eax, dword [eax + 4]\l0x0010ae57      mov dword [var_ch], eax\l"]
	"0x0010ae5a" [URL="sym.rdsread/0x0010ae5a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10ae0e\l0x0010ae5a      mov eax, dword [var_14h]\l0x0010ae5d      add eax, 0x48                                          ; 72\l0x0010ae60      cmp eax, dword [var_ch]\l0x0010ae63      jne 0x10ae10\l"]
	"0x0010ae65" [URL="sym.rdsread/0x0010ae65", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10ae4f\l0x0010ae65      mov eax, dword [var_14h]\l0x0010ae68      mov dword [esp], eax\l0x0010ae6b      call sym.rdsbufalloc\l0x0010ae70      mov dword [var_ch], eax\l0x0010ae73      mov eax, dword [var_ch]\l0x0010ae76      mov dword [eax + 8], 1\l0x0010ae7d      mov eax, dword [var_ch]\l0x0010ae80      mov dword [eax + 0xc], 1\l0x0010ae87      mov edx, dword [arg_10h]\l0x0010ae8a      mov eax, dword [var_ch]\l0x0010ae8d      mov dword [eax + 0x10], edx\l0x0010ae90      mov eax, dword [var_ch]\l0x0010ae93      mov dword [eax + 0x14], 1\l0x0010ae9a      call sym.getpid                                        ; int getpid(void)\l0x0010ae9f      mov edx, dword [var_ch]\l0x0010aea2      mov dword [edx + 0x18], eax\l0x0010aea5      mov eax, dword [var_14h]\l0x0010aea8      mov eax, dword [eax + 0x54]\l0x0010aeab      mov dword [var_18h], eax\l0x0010aeae      mov eax, dword [var_14h]\l0x0010aeb1      mov edx, dword [var_ch]\l0x0010aeb4      mov dword [eax + 0x54], edx\l0x0010aeb7      mov eax, dword [var_18h]\l0x0010aeba      mov edx, dword [eax]\l0x0010aebc      mov eax, dword [var_ch]\l0x0010aebf      mov dword [eax], edx\l0x0010aec1      mov eax, dword [var_ch]\l0x0010aec4      mov edx, dword [var_18h]\l0x0010aec7      mov dword [eax + 4], edx\l0x0010aeca      mov eax, dword [var_18h]\l0x0010aecd      mov edx, dword [var_ch]\l0x0010aed0      mov dword [eax], edx\l0x0010aed2      call sym.recvclr\l0x0010aed7      mov eax, dword [var_14h]\l0x0010aeda      mov eax, dword [eax + 0x78]\l0x0010aedd      mov dword [esp], eax\l0x0010aee0      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010aee5      call sym.receive\l0x0010aeea      mov dword [var_ch], eax\l0x0010aeed      cmp dword [var_ch], 0xffffffff\l0x0010aef1      jne 0x10aefd\l"]
	"0x0010aef3" [URL="sym.rdsread/0x0010aef3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010aef3      mov eax, 0xffffffff                                    ; -1\l0x0010aef8      jmp 0x10af98\l"]
	"0x0010aefd" [URL="sym.rdsread/0x0010aefd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10aef1\l0x0010aefd      mov eax, dword [var_ch]\l0x0010af00      add eax, 0x1c                                          ; 28\l0x0010af03      mov dword [var_34h], 0x200                             ; [0x200:4]=-1 ; 512\l0x0010af0b      mov dword [var_38h], eax\l0x0010af0f      mov eax, dword [arg_ch]\l0x0010af12      mov dword [esp], eax\l0x0010af15      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010af1a      mov eax, dword [var_ch]\l0x0010af1d      mov eax, dword [eax + 0xc]\l0x0010af20      lea edx, [eax - 1]\l0x0010af23      mov eax, dword [var_ch]\l0x0010af26      mov dword [eax + 0xc], edx\l0x0010af29      mov eax, dword [var_ch]\l0x0010af2c      mov eax, dword [eax + 0xc]\l0x0010af2f      test eax, eax\l0x0010af31      jg 0x10af93\l"]
	"0x0010af33" [URL="sym.rdsread/0x0010af33", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010af33      mov eax, dword [var_14h]\l0x0010af36      mov eax, dword [eax + 0x58]\l0x0010af39      mov dword [var_10h], eax\l0x0010af3c      jmp 0x10af8b\l"]
	"0x0010af3e" [URL="sym.rdsread/0x0010af3e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10af91\l0x0010af3e      mov eax, dword [var_10h]\l0x0010af41      mov edx, dword [eax + 0x10]\l0x0010af44      mov eax, dword [arg_10h]\l0x0010af47      cmp edx, eax\l0x0010af49      jne 0x10af83\l"]
	"0x0010af4b" [URL="sym.rdsread/0x0010af4b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010af4b      mov eax, dword [var_ch]\l0x0010af4e      mov eax, dword [eax + 4]\l0x0010af51      mov dword [var_18h], eax\l0x0010af54      mov eax, dword [var_ch]\l0x0010af57      mov eax, dword [eax]\l0x0010af59      mov dword [var_1ch], eax\l0x0010af5c      mov eax, dword [var_18h]\l0x0010af5f      mov edx, dword [var_1ch]\l0x0010af62      mov dword [eax], edx\l0x0010af64      mov eax, dword [var_1ch]\l0x0010af67      mov edx, dword [var_18h]\l0x0010af6a      mov dword [eax + 4], edx\l0x0010af6d      mov eax, dword [var_14h]\l0x0010af70      mov edx, dword [eax + 0x68]\l0x0010af73      mov eax, dword [var_ch]\l0x0010af76      mov dword [eax], edx\l0x0010af78      mov eax, dword [var_14h]\l0x0010af7b      mov edx, dword [var_ch]\l0x0010af7e      mov dword [eax + 0x68], edx\l0x0010af81      jmp 0x10af93\l"]
	"0x0010af83" [URL="sym.rdsread/0x0010af83", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10af49\l0x0010af83      mov eax, dword [var_10h]\l0x0010af86      mov eax, dword [eax]\l0x0010af88      mov dword [var_10h], eax\l"]
	"0x0010af8b" [URL="sym.rdsread/0x0010af8b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdsread @ 0x10af3c\l0x0010af8b      mov eax, dword [var_10h]\l0x0010af8e      cmp eax, dword [var_ch]\l0x0010af91      jne 0x10af3e\l"]
	"0x0010af93" [URL="sym.rdsread/0x0010af93", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.rdsread @ 0x10af31, 0x10af81\l0x0010af93      mov eax, 1\l"]
	"0x0010af98" [URL="sym.rdsread/0x0010af98", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.rdsread @ 0x10ad82, 0x10aded, 0x10ae4a, 0x10aef8\l0x0010af98      leave\l0x0010af99      ret\l"]
        "0x0010ad45" -> "0x0010ad87" [color="#13a10e"];
        "0x0010ad45" -> "0x0010ad7d" [color="#c50f1f"];
        "0x0010ad7d" -> "0x0010af98" [color="#0037da"];
        "0x0010ad87" -> "0x0010ada6" [color="#13a10e"];
        "0x0010ad87" -> "0x0010ad91" [color="#c50f1f"];
        "0x0010ad91" -> "0x0010ada6" [color="#0037da"];
        "0x0010ada6" -> "0x0010adfa" [color="#0037da"];
        "0x0010adb1" -> "0x0010adf2" [color="#13a10e"];
        "0x0010adb1" -> "0x0010adbe" [color="#c50f1f"];
        "0x0010adbe" -> "0x0010adcb" [color="#13a10e"];
        "0x0010adbe" -> "0x0010adc9" [color="#c50f1f"];
        "0x0010adc9" -> "0x0010ae05" [color="#0037da"];
        "0x0010adcb" -> "0x0010af98" [color="#0037da"];
        "0x0010adf2" -> "0x0010adfa" [color="#0037da"];
        "0x0010adfa" -> "0x0010adb1" [color="#13a10e"];
        "0x0010adfa" -> "0x0010ae05" [color="#c50f1f"];
        "0x0010ae05" -> "0x0010ae5a" [color="#0037da"];
        "0x0010ae10" -> "0x0010ae51" [color="#13a10e"];
        "0x0010ae10" -> "0x0010ae1d" [color="#c50f1f"];
        "0x0010ae1d" -> "0x0010ae4f" [color="#13a10e"];
        "0x0010ae1d" -> "0x0010ae28" [color="#c50f1f"];
        "0x0010ae28" -> "0x0010af98" [color="#0037da"];
        "0x0010ae4f" -> "0x0010ae65" [color="#0037da"];
        "0x0010ae51" -> "0x0010ae5a" [color="#0037da"];
        "0x0010ae5a" -> "0x0010ae10" [color="#13a10e"];
        "0x0010ae5a" -> "0x0010ae65" [color="#c50f1f"];
        "0x0010ae65" -> "0x0010aefd" [color="#13a10e"];
        "0x0010ae65" -> "0x0010aef3" [color="#c50f1f"];
        "0x0010aef3" -> "0x0010af98" [color="#0037da"];
        "0x0010aefd" -> "0x0010af93" [color="#13a10e"];
        "0x0010aefd" -> "0x0010af33" [color="#c50f1f"];
        "0x0010af33" -> "0x0010af8b" [color="#0037da"];
        "0x0010af3e" -> "0x0010af83" [color="#13a10e"];
        "0x0010af3e" -> "0x0010af4b" [color="#c50f1f"];
        "0x0010af4b" -> "0x0010af93" [color="#0037da"];
        "0x0010af83" -> "0x0010af8b" [color="#0037da"];
        "0x0010af8b" -> "0x0010af3e" [color="#13a10e"];
        "0x0010af8b" -> "0x0010af93" [color="#c50f1f"];
        "0x0010af93" -> "0x0010af98" [color="#0037da"];
}
