digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00115b4c" [URL="sym.printMemUse/0x00115b4c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.xsh_memstat @ 0x115a9b\l301: sym.printMemUse ();\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l0x00115b4c      push ebp\l0x00115b4d      mov ebp, esp\l0x00115b4f      push ebx\l0x00115b50      sub esp, 0x24\l0x00115b53      call sym.__x86.get_pc_thunk.bx\l0x00115b58      add ebx, 0xb4a8\l0x00115b5e      mov dword [var_1ch], 0\l0x00115b65      mov dword [var_10h], 0\l0x00115b6c      mov dword [var_20h], 0\l0x00115b73      mov dword [var_14h], 0\l0x00115b7a      mov eax, loc.end                                       ; loc._end\l                                                                       ; 0x141000\l0x00115b80      mov edx, eax\l0x00115b82      mov eax, entry0                                        ; loc.start\l                                                                       ; 0x100024\l0x00115b88      sub edx, eax\l0x00115b8a      mov eax, edx\l0x00115b8c      mov dword [var_1ch], eax\l0x00115b8f      mov dword [var_ch], 1\l0x00115b96      jmp 0x115bd4\l"]
	"0x00115b98" [URL="sym.printMemUse/0x00115b98", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.printMemUse @ 0x115bd8\l0x00115b98      mov ecx, obj.proctab                                   ; 0x1212e0\l0x00115b9e      mov edx, dword [var_ch]\l0x00115ba1      mov eax, edx\l0x00115ba3      shl eax, 3\l0x00115ba6      sub eax, edx\l0x00115ba8      shl eax, 3\l0x00115bab      add eax, ecx\l0x00115bad      mov eax, dword [eax]\l0x00115baf      test ax, ax\l0x00115bb2      je 0x115bd1\l"]
	"0x00115bb4" [URL="sym.printMemUse/0x00115bb4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00115bb4      mov ecx, obj.proctab                                   ; 0x1212e0\l0x00115bba      mov edx, dword [var_ch]\l0x00115bbd      mov eax, edx\l0x00115bbf      shl eax, 3\l0x00115bc2      sub eax, edx\l0x00115bc4      shl eax, 3\l0x00115bc7      add eax, ecx\l0x00115bc9      add eax, 0xc                                           ; 12\l0x00115bcc      mov eax, dword [eax]\l0x00115bce      add dword [var_10h], eax\l"]
	"0x00115bd1" [URL="sym.printMemUse/0x00115bd1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.printMemUse @ 0x115bb2\l0x00115bd1      inc dword [var_ch]\l"]
	"0x00115bd4" [URL="sym.printMemUse/0x00115bd4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.printMemUse @ 0x115b96\l0x00115bd4      cmp dword [var_ch], 0x63\l0x00115bd8      jle 0x115b98\l"]
	"0x00115bda" [URL="sym.printMemUse/0x00115bda", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00115bda      mov eax, obj.memlist                                   ; 0x122d90\l0x00115be0      mov eax, dword [eax]\l0x00115be2      mov dword [var_18h], eax\l0x00115be5      jmp 0x115bf8\l"]
	"0x00115be7" [URL="sym.printMemUse/0x00115be7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.printMemUse @ 0x115bfc\l0x00115be7      mov eax, dword [var_18h]\l0x00115bea      mov eax, dword [eax + 4]\l0x00115bed      add dword [var_14h], eax\l0x00115bf0      mov eax, dword [var_18h]\l0x00115bf3      mov eax, dword [eax]\l0x00115bf5      mov dword [var_18h], eax\l"]
	"0x00115bf8" [URL="sym.printMemUse/0x00115bf8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.printMemUse @ 0x115be5\l0x00115bf8      cmp dword [var_18h], 0\l0x00115bfc      jne 0x115be7\l"]
	"0x00115bfe" [URL="sym.printMemUse/0x00115bfe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00115bfe      mov eax, dword [var_14h]\l0x00115c01      sub eax, dword [var_10h]\l0x00115c04      mov dword [var_20h], eax\l0x00115c07      sub esp, 0xc\l0x00115c0a      lea eax, [ebx - 0x6cc0]\l0x00115c10      push eax\l0x00115c11      call sym.printf                                        ; int printf(const char *format)\l0x00115c16      add esp, 0x10\l0x00115c19      sub esp, 0xc\l0x00115c1c      lea eax, [ebx - 0x6c9c]\l0x00115c22      push eax\l0x00115c23      call sym.printf                                        ; int printf(const char *format)\l0x00115c28      add esp, 0x10\l0x00115c2b      sub esp, 4\l0x00115c2e      push dword [var_1ch]\l0x00115c31      push dword [var_1ch]\l0x00115c34      lea eax, [ebx - 0x6c78]\l0x00115c3a      push eax\l0x00115c3b      call sym.printf                                        ; int printf(const char *format)\l0x00115c40      add esp, 0x10\l0x00115c43      sub esp, 4\l0x00115c46      push dword [var_10h]\l0x00115c49      push dword [var_10h]\l0x00115c4c      lea eax, [ebx - 0x6c54]\l0x00115c52      push eax\l0x00115c53      call sym.printf                                        ; int printf(const char *format)\l0x00115c58      add esp, 0x10\l0x00115c5b      sub esp, 4\l0x00115c5e      push dword [var_20h]\l0x00115c61      push dword [var_20h]\l0x00115c64      lea eax, [ebx - 0x6c24]\l0x00115c6a      push eax\l0x00115c6b      call sym.printf                                        ; int printf(const char *format)\l0x00115c70      add esp, 0x10\l0x00115c73      nop\l0x00115c74      mov ebx, dword [var_4h]\l0x00115c77      leave\l0x00115c78      ret\l"]
        "0x00115b4c" -> "0x00115bd4" [color="#0037da"];
        "0x00115b98" -> "0x00115bd1" [color="#13a10e"];
        "0x00115b98" -> "0x00115bb4" [color="#c50f1f"];
        "0x00115bb4" -> "0x00115bd1" [color="#0037da"];
        "0x00115bd1" -> "0x00115bd4" [color="#0037da"];
        "0x00115bd4" -> "0x00115b98" [color="#13a10e"];
        "0x00115bd4" -> "0x00115bda" [color="#c50f1f"];
        "0x00115bda" -> "0x00115bf8" [color="#0037da"];
        "0x00115be7" -> "0x00115bf8" [color="#0037da"];
        "0x00115bf8" -> "0x00115be7" [color="#13a10e"];
        "0x00115bf8" -> "0x00115bfe" [color="#c50f1f"];
}
