digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00100d3c" [URL="sym.intel_cln_early_sb_write_reg/0x00100d3c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; XREFS: CALL 0x00100e5f  CALL 0x00100e76  CALL 0x00100e8d  \l  ; XREFS: CALL 0x00100ea4  CALL 0x00100f88  CALL 0x00100f98  \l137: sym.intel_cln_early_sb_write_reg (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h);\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; arg int32_t arg_14h @ ebp+0x14\l0x00100d3c      push ebp\l0x00100d3d      mov ebp, esp\l0x00100d3f      push ebx\l0x00100d40      sub esp, 0x24\l0x00100d43      call sym.__x86.get_pc_thunk.bx\l0x00100d48      add ebx, 0x202b8\l0x00100d4e      mov edx, dword [arg_ch]\l0x00100d51      mov eax, dword [arg_10h]\l0x00100d54      mov byte [var_1ch], dl\l0x00100d57      mov byte [var_20h], al\l0x00100d5a      mov al, byte [var_1ch]\l0x00100d5d      and eax, 0xff                                          ; 255\l0x00100d62      shl eax, 0x18\l0x00100d65      mov edx, eax\l0x00100d67      mov eax, dword [arg_8h]\l0x00100d6a      shl eax, 0x10\l0x00100d6d      and eax, 0xff0000\l0x00100d72      or edx, eax\l0x00100d74      mov al, byte [var_20h]\l0x00100d77      and eax, 0xff                                          ; 255\l0x00100d7c      shl eax, 8\l0x00100d7f      and eax, 0xffff\l0x00100d84      or eax, edx\l0x00100d86      or al, 0xf0                                            ; 240\l0x00100d88      mov dword [var_ch], eax\l0x00100d8b      mov eax, dword [ebx + 0x20]\l0x00100d91      sub esp, 4\l0x00100d94      push dword [arg_14h]\l0x00100d97      push 0xd4                                              ; 212\l0x00100d9c      push eax\l0x00100d9d      call sym.pci_write_config_dword\l0x00100da2      add esp, 0x10\l0x00100da5      mov eax, dword [ebx + 0x20]\l0x00100dab      sub esp, 4\l0x00100dae      push dword [var_ch]\l0x00100db1      push 0xd0                                              ; 208\l0x00100db6      push eax\l0x00100db7      call sym.pci_write_config_dword\l0x00100dbc      add esp, 0x10\l0x00100dbf      nop\l0x00100dc0      mov ebx, dword [var_4h]\l0x00100dc3      leave\l0x00100dc4      ret\l"]
}
