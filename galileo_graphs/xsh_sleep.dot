digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x001169b1" [URL="sym.xsh_sleep/0x001169b1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="613: sym.xsh_sleep (int32_t arg_8h, int32_t arg_ch);\l; var int32_t var_11h @ ebp-0x11\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_8h @ ebp-0x8\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l0x001169b1      push ebp\l0x001169b2      mov ebp, esp\l0x001169b4      push esi\l0x001169b5      push ebx\l0x001169b6      sub esp, 0x10\l0x001169b9      call sym.__x86.get_pc_thunk.bx\l0x001169be      add ebx, 0xa642\l0x001169c4      cmp dword [arg_8h], 2\l0x001169c8      jne 0x116a59\l"]
	"0x001169ce" [URL="sym.xsh_sleep/0x001169ce", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001169ce      mov eax, dword [arg_ch]\l0x001169d1      add eax, 4\l0x001169d4      mov eax, dword [eax]\l0x001169d6      sub esp, 4\l0x001169d9      push 7                                                 ; 7\l0x001169db      lea edx, [ebx - 0x66f0]\l0x001169e1      push edx\l0x001169e2      push eax\l0x001169e3      call sym.strncmp                                       ; int strncmp(const char *s1, const char *s2, size_t n)\l0x001169e8      add esp, 0x10\l0x001169eb      test eax, eax\l0x001169ed      jne 0x116a59\l"]
	"0x001169ef" [URL="sym.xsh_sleep/0x001169ef", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001169ef      mov eax, dword [arg_ch]\l0x001169f2      mov eax, dword [eax]\l0x001169f4      sub esp, 8\l0x001169f7      push eax\l0x001169f8      lea eax, [ebx - 0x66e9]\l0x001169fe      push eax\l0x001169ff      call sym.printf                                        ; int printf(const char *format)\l0x00116a04      add esp, 0x10\l0x00116a07      sub esp, 0xc\l0x00116a0a      lea eax, [ebx - 0x66df]\l0x00116a10      push eax\l0x00116a11      call sym.printf                                        ; int printf(const char *format)\l0x00116a16      add esp, 0x10\l0x00116a19      sub esp, 0xc\l0x00116a1c      lea eax, [ebx - 0x66d0]\l0x00116a22      push eax\l0x00116a23      call sym.printf                                        ; int printf(const char *format)\l0x00116a28      add esp, 0x10\l0x00116a2b      sub esp, 0xc\l0x00116a2e      lea eax, [ebx - 0x66a6]\l0x00116a34      push eax\l0x00116a35      call sym.printf                                        ; int printf(const char *format)\l0x00116a3a      add esp, 0x10\l0x00116a3d      sub esp, 0xc\l0x00116a40      lea eax, [ebx - 0x669c]\l0x00116a46      push eax\l0x00116a47      call sym.printf                                        ; int printf(const char *format)\l0x00116a4c      add esp, 0x10\l0x00116a4f      mov eax, 0\l0x00116a54      jmp 0x116c0f\l"]
	"0x00116a59" [URL="sym.xsh_sleep/0x00116a59", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_sleep @ 0x1169c8, 0x1169ed\l0x00116a59      cmp dword [arg_8h], 2\l0x00116a5d      jle 0x116add\l"]
	"0x00116a5f" [URL="sym.xsh_sleep/0x00116a5f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00116a5f      mov eax, dword [arg_ch]\l0x00116a62      mov edx, dword [eax]\l0x00116a64      mov eax, obj.currpid                                   ; 0x1212c0\l0x00116a6a      mov ecx, dword [eax]\l0x00116a6c      mov esi, obj.proctab                                   ; 0x1212e0\l0x00116a72      mov eax, ecx\l0x00116a74      shl eax, 3\l0x00116a77      sub eax, ecx\l0x00116a79      shl eax, 3\l0x00116a7c      add eax, esi\l0x00116a7e      add eax, 0x32                                          ; 50\l0x00116a81      mov ax, word [eax]\l0x00116a84      cwde\l0x00116a85      sub esp, 4\l0x00116a88      push edx\l0x00116a89      lea edx, [ebx - 0x6677]\l0x00116a8f      push edx\l0x00116a90      push eax\l0x00116a91      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00116a96      add esp, 0x10\l0x00116a99      mov eax, dword [arg_ch]\l0x00116a9c      mov edx, dword [eax]\l0x00116a9e      mov eax, obj.currpid                                   ; 0x1212c0\l0x00116aa4      mov ecx, dword [eax]\l0x00116aa6      mov esi, obj.proctab                                   ; 0x1212e0\l0x00116aac      mov eax, ecx\l0x00116aae      shl eax, 3\l0x00116ab1      sub eax, ecx\l0x00116ab3      shl eax, 3\l0x00116ab6      add eax, esi\l0x00116ab8      add eax, 0x32                                          ; 50\l0x00116abb      mov ax, word [eax]\l0x00116abe      cwde\l0x00116abf      sub esp, 4\l0x00116ac2      push edx\l0x00116ac3      lea edx, [ebx - 0x665c]\l0x00116ac9      push edx\l0x00116aca      push eax\l0x00116acb      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00116ad0      add esp, 0x10\l0x00116ad3      mov eax, 1\l0x00116ad8      jmp 0x116c0f\l"]
	"0x00116add" [URL="sym.xsh_sleep/0x00116add", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_sleep @ 0x116a5d\l0x00116add      cmp dword [arg_8h], 2\l0x00116ae1      je 0x116b61\l"]
	"0x00116ae3" [URL="sym.xsh_sleep/0x00116ae3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00116ae3      mov eax, dword [arg_ch]\l0x00116ae6      mov edx, dword [eax]\l0x00116ae8      mov eax, obj.currpid                                   ; 0x1212c0\l0x00116aee      mov ecx, dword [eax]\l0x00116af0      mov esi, obj.proctab                                   ; 0x1212e0\l0x00116af6      mov eax, ecx\l0x00116af8      shl eax, 3\l0x00116afb      sub eax, ecx\l0x00116afd      shl eax, 3\l0x00116b00      add eax, esi\l0x00116b02      add eax, 0x32                                          ; 50\l0x00116b05      mov ax, word [eax]\l0x00116b08      cwde\l0x00116b09      sub esp, 4\l0x00116b0c      push edx\l0x00116b0d      lea edx, [ebx - 0x6636]\l0x00116b13      push edx\l0x00116b14      push eax\l0x00116b15      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00116b1a      add esp, 0x10\l0x00116b1d      mov eax, dword [arg_ch]\l0x00116b20      mov edx, dword [eax]\l0x00116b22      mov eax, obj.currpid                                   ; 0x1212c0\l0x00116b28      mov ecx, dword [eax]\l0x00116b2a      mov esi, obj.proctab                                   ; 0x1212e0\l0x00116b30      mov eax, ecx\l0x00116b32      shl eax, 3\l0x00116b35      sub eax, ecx\l0x00116b37      shl eax, 3\l0x00116b3a      add eax, esi\l0x00116b3c      add eax, 0x32                                          ; 50\l0x00116b3f      mov ax, word [eax]\l0x00116b42      cwde\l0x00116b43      sub esp, 4\l0x00116b46      push edx\l0x00116b47      lea edx, [ebx - 0x665c]\l0x00116b4d      push edx\l0x00116b4e      push eax\l0x00116b4f      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00116b54      add esp, 0x10\l0x00116b57      mov eax, 1\l0x00116b5c      jmp 0x116c0f\l"]
	"0x00116b61" [URL="sym.xsh_sleep/0x00116b61", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_sleep @ 0x116ae1\l0x00116b61      mov eax, dword [arg_ch]\l0x00116b64      mov eax, dword [eax + 4]\l0x00116b67      mov dword [var_10h], eax\l0x00116b6a      mov eax, dword [var_10h]\l0x00116b6d      lea edx, [eax + 1]\l0x00116b70      mov dword [var_10h], edx\l0x00116b73      mov al, byte [eax]\l0x00116b75      mov byte [var_11h], al\l0x00116b78      mov dword [var_ch], 0\l0x00116b7f      jmp 0x116bf6\l"]
	"0x00116b81" [URL="sym.xsh_sleep/0x00116b81", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_sleep @ 0x116bfa\l0x00116b81      cmp byte [var_11h], 0x2f\l0x00116b85      jle 0x116b8d\l"]
	"0x00116b87" [URL="sym.xsh_sleep/0x00116b87", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00116b87      cmp byte [var_11h], 0x39\l0x00116b8b      jle 0x116bce\l"]
	"0x00116b8d" [URL="sym.xsh_sleep/0x00116b8d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_sleep @ 0x116b85\l0x00116b8d      mov eax, dword [arg_ch]\l0x00116b90      mov edx, dword [eax]\l0x00116b92      mov eax, obj.currpid                                   ; 0x1212c0\l0x00116b98      mov ecx, dword [eax]\l0x00116b9a      mov esi, obj.proctab                                   ; 0x1212e0\l0x00116ba0      mov eax, ecx\l0x00116ba2      shl eax, 3\l0x00116ba5      sub eax, ecx\l0x00116ba7      shl eax, 3\l0x00116baa      add eax, esi\l0x00116bac      add eax, 0x32                                          ; 50\l0x00116baf      mov ax, word [eax]\l0x00116bb2      cwde\l0x00116bb3      sub esp, 4\l0x00116bb6      push edx\l0x00116bb7      lea edx, [ebx - 0x661f]\l0x00116bbd      push edx\l0x00116bbe      push eax\l0x00116bbf      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00116bc4      add esp, 0x10\l0x00116bc7      mov eax, 1\l0x00116bcc      jmp 0x116c0f\l"]
	"0x00116bce" [URL="sym.xsh_sleep/0x00116bce", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_sleep @ 0x116b8b\l0x00116bce      mov edx, dword [var_ch]\l0x00116bd1      mov eax, edx\l0x00116bd3      shl eax, 2\l0x00116bd6      add eax, edx\l0x00116bd8      add eax, eax\l0x00116bda      mov edx, eax\l0x00116bdc      movsx eax, byte [var_11h]\l0x00116be0      sub eax, 0x30                                          ; 48\l0x00116be3      add eax, edx\l0x00116be5      mov dword [var_ch], eax\l0x00116be8      mov eax, dword [var_10h]\l0x00116beb      lea edx, [eax + 1]\l0x00116bee      mov dword [var_10h], edx\l0x00116bf1      mov al, byte [eax]\l0x00116bf3      mov byte [var_11h], al\l"]
	"0x00116bf6" [URL="sym.xsh_sleep/0x00116bf6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_sleep @ 0x116b7f\l0x00116bf6      cmp byte [var_11h], 0\l0x00116bfa      jne 0x116b81\l"]
	"0x00116bfc" [URL="sym.xsh_sleep/0x00116bfc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00116bfc      sub esp, 0xc\l0x00116bff      push dword [var_ch]\l0x00116c02      call sym.sleep                                         ; int sleep(int s)\l0x00116c07      add esp, 0x10\l0x00116c0a      mov eax, 0\l"]
	"0x00116c0f" [URL="sym.xsh_sleep/0x00116c0f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_sleep @ 0x116a54, 0x116ad8, 0x116b5c, 0x116bcc\l0x00116c0f      lea esp, [var_8h]\l0x00116c12      pop ebx\l0x00116c13      pop esi\l0x00116c14      pop ebp\l0x00116c15      ret\l"]
        "0x001169b1" -> "0x00116a59" [color="#13a10e"];
        "0x001169b1" -> "0x001169ce" [color="#c50f1f"];
        "0x001169ce" -> "0x00116a59" [color="#13a10e"];
        "0x001169ce" -> "0x001169ef" [color="#c50f1f"];
        "0x001169ef" -> "0x00116c0f" [color="#0037da"];
        "0x00116a59" -> "0x00116add" [color="#13a10e"];
        "0x00116a59" -> "0x00116a5f" [color="#c50f1f"];
        "0x00116a5f" -> "0x00116c0f" [color="#0037da"];
        "0x00116add" -> "0x00116b61" [color="#13a10e"];
        "0x00116add" -> "0x00116ae3" [color="#c50f1f"];
        "0x00116ae3" -> "0x00116c0f" [color="#0037da"];
        "0x00116b61" -> "0x00116bf6" [color="#0037da"];
        "0x00116b81" -> "0x00116b8d" [color="#13a10e"];
        "0x00116b81" -> "0x00116b87" [color="#c50f1f"];
        "0x00116b87" -> "0x00116bce" [color="#13a10e"];
        "0x00116b87" -> "0x00116b8d" [color="#c50f1f"];
        "0x00116b8d" -> "0x00116c0f" [color="#0037da"];
        "0x00116bce" -> "0x00116bf6" [color="#0037da"];
        "0x00116bf6" -> "0x00116b81" [color="#13a10e"];
        "0x00116bf6" -> "0x00116bfc" [color="#c50f1f"];
        "0x00116bfc" -> "0x00116c0f" [color="#0037da"];
}
