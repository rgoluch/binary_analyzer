digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010be7f" [URL="sym.lfscreate/0x0010be7f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="499: sym.lfscreate (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h);\l; var int32_t var_46ch @ ebp-0x46c\l; var int32_t var_26ch @ ebp-0x26c\l; var int32_t var_224h @ ebp-0x224\l; var int32_t var_21ch @ ebp-0x21c\l; var int32_t var_218h @ ebp-0x218\l; var int32_t var_214h @ ebp-0x214\l; var int32_t var_20ch @ ebp-0x20c\l; var int32_t var_28h @ ebp-0x28\l; var int32_t var_24h @ ebp-0x24\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; var int32_t var_488h @ esp+0x4\l; var int32_t var_484h @ esp+0x8\l0x0010be7f      push ebp\l0x0010be80      mov ebp, esp\l0x0010be82      sub esp, 0x488\l0x0010be88      mov eax, dword [arg_10h]\l0x0010be8b      shr eax, 9\l0x0010be8e      mov dword [var_14h], eax\l0x0010be91      mov dword [var_18h], 7\l0x0010be98      mov edx, dword [arg_ch]\l0x0010be9b      mov eax, dword [var_18h]\l0x0010be9e      add eax, edx\l0x0010bea0      dec eax\l0x0010bea1      mov edx, 0\l0x0010bea6      div dword [var_18h]\l0x0010bea9      mov dword [var_1ch], eax\l0x0010beac      mov eax, dword [var_1ch]\l0x0010beaf      imul eax, dword [var_18h]\l0x0010beb3      mov dword [arg_ch], eax\l0x0010beb6      mov eax, dword [var_14h]\l0x0010beb9      shr eax, 1\l0x0010bebb      cmp eax, dword [var_1ch]\l0x0010bebe      jae 0x10beca\l"]
	"0x0010bec0" [URL="sym.lfscreate/0x0010bec0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010bec0      mov eax, 0xffffffff                                    ; -1\l0x0010bec5      jmp 0x10c070\l"]
	"0x0010beca" [URL="sym.lfscreate/0x0010beca", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfscreate @ 0x10bebe\l0x0010beca      mov dword [var_484h], 0x200                            ; [0x200:4]=-1 ; 512\l0x0010bed2      mov dword [var_488h], 0\l0x0010beda      lea eax, [var_224h]\l0x0010bee0      mov dword [esp], eax\l0x0010bee3      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x0010bee8      mov dword [var_224h], 0x58696e75                       ; 'uniX'\l0x0010bef2      mov dword [var_20ch], 0\l0x0010befc      mov dword [var_21ch], 0\l0x0010bf06      mov dword [var_218h], 0xffffffff                       ; -1\l0x0010bf10      mov dword [var_28h], 0x756e6958                        ; 'Xinu'\l0x0010bf17      mov eax, dword [var_1ch]\l0x0010bf1a      inc eax\l0x0010bf1b      mov dword [var_ch], eax\l0x0010bf1e      mov eax, dword [var_ch]\l0x0010bf21      mov dword [var_214h], eax\l0x0010bf27      mov eax, dword [var_1ch]\l0x0010bf2a      mov edx, dword [var_14h]\l0x0010bf2d      sub edx, eax\l0x0010bf2f      mov eax, edx\l0x0010bf31      dec eax\l0x0010bf32      mov dword [var_20h], eax\l0x0010bf35      mov dword [var_484h], 0\l0x0010bf3d      lea eax, [var_224h]\l0x0010bf43      mov dword [var_488h], eax\l0x0010bf47      mov eax, dword [arg_8h]\l0x0010bf4a      mov dword [esp], eax\l0x0010bf4d      call sym.write                                         ; ssize_t write(int fd, const char *ptr, size_t nbytes)\l0x0010bf52      mov dword [var_24h], eax\l0x0010bf55      cmp dword [var_24h], 0xffffffff\l0x0010bf59      jne 0x10bf65\l"]
	"0x0010bf5b" [URL="sym.lfscreate/0x0010bf5b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010bf5b      mov eax, 0xffffffff                                    ; -1\l0x0010bf60      jmp 0x10c070\l"]
	"0x0010bf65" [URL="sym.lfscreate/0x0010bf65", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfscreate @ 0x10bf59\l0x0010bf65      mov dword [var_488h], 0\l0x0010bf6d      lea eax, [var_26ch]\l0x0010bf73      mov dword [esp], eax\l0x0010bf76      call sym.lfibclear\l0x0010bf7b      mov dword [var_10h], 0\l0x0010bf82      jmp 0x10bfad\l"]
	"0x0010bf84" [URL="sym.lfscreate/0x0010bf84", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfscreate @ 0x10bfb4\l0x0010bf84      mov eax, dword [var_10h]\l0x0010bf87      inc eax\l0x0010bf88      mov dword [var_26ch], eax\l0x0010bf8e      lea eax, [var_26ch]\l0x0010bf94      mov dword [var_484h], eax\l0x0010bf98      mov eax, dword [var_10h]\l0x0010bf9b      mov dword [var_488h], eax\l0x0010bf9f      mov eax, dword [arg_8h]\l0x0010bfa2      mov dword [esp], eax\l0x0010bfa5      call sym.lfibput\l0x0010bfaa      inc dword [var_10h]\l"]
	"0x0010bfad" [URL="sym.lfscreate/0x0010bfad", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfscreate @ 0x10bf82\l0x0010bfad      mov eax, dword [arg_ch]\l0x0010bfb0      dec eax\l0x0010bfb1      cmp eax, dword [var_10h]\l0x0010bfb4      jg 0x10bf84\l"]
	"0x0010bfb6" [URL="sym.lfscreate/0x0010bfb6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010bfb6      mov dword [var_26ch], 0xffffffff                       ; -1\l0x0010bfc0      lea eax, [var_26ch]\l0x0010bfc6      mov dword [var_484h], eax\l0x0010bfca      mov eax, dword [var_10h]\l0x0010bfcd      mov dword [var_488h], eax\l0x0010bfd1      mov eax, dword [arg_8h]\l0x0010bfd4      mov dword [esp], eax\l0x0010bfd7      call sym.lfibput\l0x0010bfdc      mov dword [var_484h], 0x200                            ; [0x200:4]=-1 ; 512\l0x0010bfe4      mov dword [var_488h], 0\l0x0010bfec      lea eax, [var_46ch]\l0x0010bff2      mov dword [esp], eax\l0x0010bff5      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x0010bffa      mov dword [var_10h], 0\l0x0010c001      jmp 0x10c02f\l"]
	"0x0010c003" [URL="sym.lfscreate/0x0010c003", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfscreate @ 0x10c038\l0x0010c003      mov eax, dword [var_ch]\l0x0010c006      inc eax\l0x0010c007      mov dword [var_46ch], eax\l0x0010c00d      mov eax, dword [var_ch]\l0x0010c010      mov dword [var_484h], eax\l0x0010c014      lea eax, [var_46ch]\l0x0010c01a      mov dword [var_488h], eax\l0x0010c01e      mov eax, dword [arg_8h]\l0x0010c021      mov dword [esp], eax\l0x0010c024      call sym.write                                         ; ssize_t write(int fd, const char *ptr, size_t nbytes)\l0x0010c029      inc dword [var_ch]\l0x0010c02c      inc dword [var_10h]\l"]
	"0x0010c02f" [URL="sym.lfscreate/0x0010c02f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfscreate @ 0x10c001\l0x0010c02f      mov eax, dword [var_10h]\l0x0010c032      mov edx, dword [var_20h]\l0x0010c035      dec edx\l0x0010c036      cmp eax, edx\l0x0010c038      jb 0x10c003\l"]
	"0x0010c03a" [URL="sym.lfscreate/0x0010c03a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c03a      mov dword [var_46ch], 0xffffffff                       ; -1\l0x0010c044      mov eax, dword [var_ch]\l0x0010c047      mov dword [var_484h], eax\l0x0010c04b      lea eax, [var_46ch]\l0x0010c051      mov dword [var_488h], eax\l0x0010c055      mov eax, dword [arg_8h]\l0x0010c058      mov dword [esp], eax\l0x0010c05b      call sym.write                                         ; ssize_t write(int fd, const char *ptr, size_t nbytes)\l0x0010c060      mov eax, dword [arg_8h]\l0x0010c063      mov dword [esp], eax\l0x0010c066      call sym.close                                         ; int close(int fildes)\l0x0010c06b      mov eax, 1\l"]
	"0x0010c070" [URL="sym.lfscreate/0x0010c070", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.lfscreate @ 0x10bec5, 0x10bf60\l0x0010c070      leave\l0x0010c071      ret\l"]
        "0x0010be7f" -> "0x0010beca" [color="#13a10e"];
        "0x0010be7f" -> "0x0010bec0" [color="#c50f1f"];
        "0x0010bec0" -> "0x0010c070" [color="#0037da"];
        "0x0010beca" -> "0x0010bf65" [color="#13a10e"];
        "0x0010beca" -> "0x0010bf5b" [color="#c50f1f"];
        "0x0010bf5b" -> "0x0010c070" [color="#0037da"];
        "0x0010bf65" -> "0x0010bfad" [color="#0037da"];
        "0x0010bf84" -> "0x0010bfad" [color="#0037da"];
        "0x0010bfad" -> "0x0010bf84" [color="#13a10e"];
        "0x0010bfad" -> "0x0010bfb6" [color="#c50f1f"];
        "0x0010bfb6" -> "0x0010c02f" [color="#0037da"];
        "0x0010c003" -> "0x0010c02f" [color="#0037da"];
        "0x0010c02f" -> "0x0010c003" [color="#13a10e"];
        "0x0010c02f" -> "0x0010c03a" [color="#c50f1f"];
        "0x0010c03a" -> "0x0010c070" [color="#0037da"];
}
