digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x001022b9" [URL="sym.startup/0x001022b9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="218: sym.startup ();\l; var int32_t var_8ch @ ebp-0x8c\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_8h @ ebp-0x8\l0x001022b9      push ebp\l0x001022ba      mov ebp, esp\l0x001022bc      push esi\l0x001022bd      push ebx\l0x001022be      sub esp, 0x90\l0x001022c4      call sym.__x86.get_pc_thunk.bx\l0x001022c9      add ebx, 0x1ed37\l0x001022cf      call sym.getlocalip\l0x001022d4      mov dword [var_ch], eax\l0x001022d7      cmp dword [var_ch], 0xffffffff\l0x001022db      jne 0x1022f1\l"]
	"0x001022dd" [URL="sym.startup/0x001022dd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001022dd      sub esp, 0xc\l0x001022e0      lea eax, [ebx - 0x8dac]\l0x001022e6      push eax\l0x001022e7      call sym.kprintf\l0x001022ec      add esp, 0x10\l0x001022ef      jmp 0x102357\l"]
	"0x001022f1" [URL="sym.startup/0x001022f1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.startup @ 0x1022db\l0x001022f1      mov eax, obj.NetData                                   ; 0x140200\l0x001022f7      mov eax, dword [eax]\l0x001022f9      mov dword [var_ch], eax\l0x001022fc      mov eax, dword [var_ch]\l0x001022ff      xor ecx, ecx\l0x00102301      mov cl, al\l0x00102303      mov eax, dword [var_ch]\l0x00102306      shr eax, 8\l0x00102309      xor edx, edx\l0x0010230b      mov dl, al\l0x0010230d      mov eax, dword [var_ch]\l0x00102310      shr eax, 0x10\l0x00102313      and eax, 0xff                                          ; 255\l0x00102318      mov esi, dword [var_ch]\l0x0010231b      shr esi, 0x18\l0x0010231e      sub esp, 8\l0x00102321      push ecx\l0x00102322      push edx\l0x00102323      push eax\l0x00102324      push esi\l0x00102325      lea eax, [ebx - 0x8d8f]\l0x0010232b      push eax\l0x0010232c      lea eax, [var_8ch]\l0x00102332      push eax\l0x00102333      call sym.sprintf                                       ; int sprintf(char *s, const char *format, ...)\l0x00102338      add esp, 0x20\l0x0010233b      sub esp, 4\l0x0010233e      push dword [var_ch]\l0x00102341      lea eax, [var_8ch]\l0x00102347      push eax\l0x00102348      lea eax, [ebx - 0x8d80]\l0x0010234e      push eax\l0x0010234f      call sym.kprintf\l0x00102354      add esp, 0x10\l"]
	"0x00102357" [URL="sym.startup/0x00102357", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.startup @ 0x1022ef\l0x00102357      sub esp, 8\l0x0010235a      push 0\l0x0010235c      push 0\l0x0010235e      lea eax, [ebx - 0x8d5c]\l0x00102364      push eax\l0x00102365      push 0x14                                              ; 20\l0x00102367      push 0x10000\l0x0010236c      mov eax, main                                          ; 0x102b45\l0x00102372      push eax                                               ; 0x102b45\l                                                                       ; sym.main\l0x00102373      call sym.create\l0x00102378      add esp, 0x20\l0x0010237b      sub esp, 0xc\l0x0010237e      push eax\l0x0010237f      call sym.resume\l0x00102384      add esp, 0x10\l0x00102387      mov eax, 1\l0x0010238c      lea esp, [var_8h]\l0x0010238f      pop ebx\l0x00102390      pop esi\l0x00102391      pop ebp\l0x00102392      ret\l"]
        "0x001022b9" -> "0x001022f1" [color="#13a10e"];
        "0x001022b9" -> "0x001022dd" [color="#c50f1f"];
        "0x001022dd" -> "0x00102357" [color="#0037da"];
        "0x001022f1" -> "0x00102357" [color="#0037da"];
}
