digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00110adc" [URL="sym.net_init/0x00110adc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.nulluser @ 0x102281\l352: sym.net_init ();\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l0x00110adc      push ebp\l0x00110add      mov ebp, esp\l0x00110adf      push ebx\l0x00110ae0      sub esp, 0x14\l0x00110ae3      call sym.__x86.get_pc_thunk.bx\l0x00110ae8      add ebx, 0x10518\l0x00110aee      sub esp, 4\l0x00110af1      push 0xb0                                              ; 176\l0x00110af6      push 0\l0x00110af8      mov eax, obj.NetData                                   ; 0x140200\l0x00110afe      push eax                                               ; 0x140200\l                                                                       ; obj.NetData\l0x00110aff      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x00110b04      add esp, 0x10\l0x00110b07      mov eax, obj.NetData                                   ; 0x140200\l0x00110b0d      lea eax, [eax + 0x21]\l0x00110b10      push 0\l0x00110b12      push eax\l0x00110b13      push 1                                                 ; 1\l0x00110b15      push 2                                                 ; 2\l0x00110b17      call sym.control\l0x00110b1c      add esp, 0x10\l0x00110b1f      sub esp, 4\l0x00110b22      push 6                                                 ; 6\l0x00110b24      push 0xff                                              ; 255\l0x00110b29      mov eax, obj.NetData                                   ; 0x140200\l0x00110b2f      lea eax, [eax + 0x27]\l0x00110b32      push eax\l0x00110b33      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x00110b38      add esp, 0x10\l0x00110b3b      call sym.getticks\l0x00110b40      mov ecx, obj.netportseed                               ; 0x1401e8\l0x00110b46      mov dword [ecx], eax\l0x00110b48      mov dword [ecx + 4], edx\l0x00110b4b      mov dword [var_ch], 0x81                               ; 129\l0x00110b52      sub esp, 8\l0x00110b55      push dword [var_ch]\l0x00110b58      push 0x5ea                                             ; 1514\l0x00110b5d      call sym.mkbufpool\l0x00110b62      add esp, 0x10\l0x00110b65      mov edx, eax\l0x00110b67      mov eax, obj.netbufpool                                ; 0x1401e0\l0x00110b6d      mov dword [eax], edx\l0x00110b6f      call sym.arp_init\l0x00110b74      call sym.udp_init\l0x00110b79      call sym.icmp_init\l0x00110b7e      mov eax, obj.ipoqueue                                  ; 0x1401a0\l0x00110b84      mov dword [eax], 0\l0x00110b8a      mov eax, obj.ipoqueue                                  ; 0x1401a0\l0x00110b90      mov dword [eax + 4], 0\l0x00110b97      sub esp, 0xc\l0x00110b9a      push 0\l0x00110b9c      call sym.semcreate\l0x00110ba1      add esp, 0x10\l0x00110ba4      mov edx, eax\l0x00110ba6      mov eax, obj.ipoqueue                                  ; 0x1401a0\l0x00110bac      mov dword [eax + 8], edx\l0x00110baf      mov eax, obj.ipoqueue                                  ; 0x1401a0\l0x00110bb5      mov eax, dword [eax + 8]\l0x00110bb8      cmp eax, 0xffffffff\l0x00110bbb      jne 0x110bd1\l"]
	"0x00110bbd" [URL="sym.net_init/0x00110bbd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00110bbd      sub esp, 0xc\l0x00110bc0      lea eax, [ebx - 0x7ef0]\l0x00110bc6      push eax\l0x00110bc7      call sym.panic\l0x00110bcc      add esp, 0x10\l0x00110bcf      jmp 0x110c37\l"]
	"0x00110bd1" [URL="sym.net_init/0x00110bd1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.net_init @ 0x110bbb\l0x00110bd1      sub esp, 8\l0x00110bd4      push 0\l0x00110bd6      push 0\l0x00110bd8      lea eax, [ebx - 0x7ec8]\l0x00110bde      push eax\l0x00110bdf      push 0x1f4                                             ; 500\l0x00110be4      push 0x2000\l0x00110be9      mov eax, sym.ipout                                     ; 0x1108be ; \"U\\x89\\xe5S\\x83\\xec$\\xe8\\xb8\\xfd\\xfe\\xff\\x81\\xc36\\a\\x01\"\l0x00110bef      push eax                                               ; 0x1108be ; \"U\\x89\\xe5S\\x83\\xec$\\xe8\\xb8\\xfd\\xfe\\xff\\x81\\xc36\\a\\x01\"\l0x00110bf0      call sym.create\l0x00110bf5      add esp, 0x20\l0x00110bf8      sub esp, 0xc\l0x00110bfb      push eax\l0x00110bfc      call sym.resume\l0x00110c01      add esp, 0x10\l0x00110c04      sub esp, 8\l0x00110c07      push 0\l0x00110c09      push 0\l0x00110c0b      lea eax, [ebx - 0x7ec2]\l0x00110c11      push eax\l0x00110c12      push 0x1f4                                             ; 500\l0x00110c17      push 0x2000\l0x00110c1c      lea eax, [ebx - 0x103c4]\l0x00110c22      push eax\l0x00110c23      call sym.create\l0x00110c28      add esp, 0x20\l0x00110c2b      sub esp, 0xc\l0x00110c2e      push eax\l0x00110c2f      call sym.resume\l0x00110c34      add esp, 0x10\l"]
	"0x00110c37" [URL="sym.net_init/0x00110c37", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.net_init @ 0x110bcf\l0x00110c37      mov ebx, dword [var_4h]\l0x00110c3a      leave\l0x00110c3b      ret\l"]
        "0x00110adc" -> "0x00110bd1" [color="#13a10e"];
        "0x00110adc" -> "0x00110bbd" [color="#c50f1f"];
        "0x00110bbd" -> "0x00110c37" [color="#0037da"];
        "0x00110bd1" -> "0x00110c37" [color="#0037da"];
}
