digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010c349" [URL="sym.lfsopen/0x0010c349", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="928: sym.lfsopen (int32_t arg_ch, int32_t arg_10h);\l; var int32_t var_38h @ ebp-0x38\l; var int32_t var_34h @ ebp-0x34\l; var int32_t var_30h @ ebp-0x30\l; var int32_t var_2ch @ ebp-0x2c\l; var int32_t var_25h @ ebp-0x25\l; var int32_t var_24h @ ebp-0x24\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; var int32_t var_48h @ esp+0x4\l; var int32_t var_44h @ esp+0x8\l0x0010c349      push ebp\l0x0010c34a      mov ebp, esp\l0x0010c34c      sub esp, 0x48\l0x0010c34f      mov eax, dword [arg_ch]\l0x0010c352      mov dword [var_ch], eax\l0x0010c355      mov dword [var_1ch], 0\l0x0010c35c      jmp 0x10c372\l"]
	"0x0010c35e" [URL="sym.lfsopen/0x0010c35e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c376\l0x0010c35e      mov eax, dword [var_ch]\l0x0010c361      lea edx, [eax + 1]\l0x0010c364      mov dword [var_ch], edx\l0x0010c367      mov al, byte [eax]\l0x0010c369      test al, al\l0x0010c36b      jne 0x10c36f\l"]
	"0x0010c36d" [URL="sym.lfsopen/0x0010c36d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c36d      jmp 0x10c378\l"]
	"0x0010c36f" [URL="sym.lfsopen/0x0010c36f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c36b\l0x0010c36f      inc dword [var_1ch]\l"]
	"0x0010c372" [URL="sym.lfsopen/0x0010c372", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c35c\l0x0010c372      cmp dword [var_1ch], 0xf\l0x0010c376      jle 0x10c35e\l"]
	"0x0010c378" [URL="sym.lfsopen/0x0010c378", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c36d\l0x0010c378      cmp dword [var_1ch], 0xf\l0x0010c37c      jle 0x10c388\l"]
	"0x0010c37e" [URL="sym.lfsopen/0x0010c37e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c37e      mov eax, 0xffffffff                                    ; -1\l0x0010c383      jmp 0x10c6e7\l"]
	"0x0010c388" [URL="sym.lfsopen/0x0010c388", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c37c\l0x0010c388      mov eax, dword [arg_10h]\l0x0010c38b      mov dword [esp], eax\l0x0010c38e      call sym.lfgetmode\l0x0010c393      mov dword [var_2ch], eax\l0x0010c396      cmp dword [var_2ch], 0xffffffff\l0x0010c39a      jne 0x10c3a6\l"]
	"0x0010c39c" [URL="sym.lfsopen/0x0010c39c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c39c      mov eax, 0xffffffff                                    ; -1\l0x0010c3a1      jmp 0x10c6e7\l"]
	"0x0010c3a6" [URL="sym.lfsopen/0x0010c3a6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c39a\l0x0010c3a6      mov dword [var_20h], 0xffffffff                        ; -1\l0x0010c3ad      mov dword [var_1ch], 0\l0x0010c3b4      jmp 0x10c433\l"]
	"0x0010c3b6" [URL="sym.lfsopen/0x0010c3b6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c437\l0x0010c3b6      mov edx, dword [var_1ch]\l0x0010c3b9      mov eax, edx\l0x0010c3bb      shl eax, 2\l0x0010c3be      add eax, edx\l0x0010c3c0      shl eax, 7\l0x0010c3c3      add eax, obj.lfltab                                    ; 0x13e740\l0x0010c3c8      mov dword [var_30h], eax\l0x0010c3cb      mov eax, dword [var_30h]\l0x0010c3ce      mov al, byte [eax]\l0x0010c3d0      test al, al\l0x0010c3d2      jne 0x10c3e4\l"]
	"0x0010c3d4" [URL="sym.lfsopen/0x0010c3d4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c3d4      cmp dword [var_20h], 0xffffffff\l0x0010c3d8      jne 0x10c3e2\l"]
	"0x0010c3da" [URL="sym.lfsopen/0x0010c3da", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c3da      mov eax, dword [var_1ch]\l0x0010c3dd      mov dword [var_20h], eax\l0x0010c3e0      jmp 0x10c430\l"]
	"0x0010c3e2" [URL="sym.lfsopen/0x0010c3e2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c3d8\l0x0010c3e2      jmp 0x10c430\l"]
	"0x0010c3e4" [URL="sym.lfsopen/0x0010c3e4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c3d2\l0x0010c3e4      mov eax, dword [arg_ch]\l0x0010c3e7      mov dword [var_14h], eax\l0x0010c3ea      mov eax, dword [var_30h]\l0x0010c3ed      add eax, 0x18                                          ; 24\l0x0010c3f0      mov dword [var_18h], eax\l0x0010c3f3      jmp 0x10c40b\l"]
	"0x0010c3f5" [URL="sym.lfsopen/0x0010c3f5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c412\l0x0010c3f5      mov eax, dword [var_14h]\l0x0010c3f8      mov dl, byte [eax]\l0x0010c3fa      mov eax, dword [var_18h]\l0x0010c3fd      mov al, byte [eax]\l0x0010c3ff      cmp dl, al\l0x0010c401      je 0x10c405\l"]
	"0x0010c403" [URL="sym.lfsopen/0x0010c403", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c403      jmp 0x10c414\l"]
	"0x0010c405" [URL="sym.lfsopen/0x0010c405", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c401\l0x0010c405      inc dword [var_14h]\l0x0010c408      inc dword [var_18h]\l"]
	"0x0010c40b" [URL="sym.lfsopen/0x0010c40b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c3f3\l0x0010c40b      mov eax, dword [var_14h]\l0x0010c40e      mov al, byte [eax]\l0x0010c410      test al, al\l0x0010c412      jne 0x10c3f5\l"]
	"0x0010c414" [URL="sym.lfsopen/0x0010c414", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c403\l0x0010c414      mov eax, dword [var_14h]\l0x0010c417      mov al, byte [eax]\l0x0010c419      test al, al\l0x0010c41b      jne 0x10c430\l"]
	"0x0010c41d" [URL="sym.lfsopen/0x0010c41d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c41d      mov eax, dword [var_18h]\l0x0010c420      mov al, byte [eax]\l0x0010c422      test al, al\l0x0010c424      jne 0x10c430\l"]
	"0x0010c426" [URL="sym.lfsopen/0x0010c426", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c426      mov eax, 0xffffffff                                    ; -1\l0x0010c42b      jmp 0x10c6e7\l"]
	"0x0010c430" [URL="sym.lfsopen/0x0010c430", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.lfsopen @ 0x10c3e0, 0x10c3e2, 0x10c41b, 0x10c424\l0x0010c430      inc dword [var_1ch]\l"]
	"0x0010c433" [URL="sym.lfsopen/0x0010c433", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c3b4\l0x0010c433      cmp dword [var_1ch], 5\l0x0010c437      jle 0x10c3b6\l"]
	"0x0010c43d" [URL="sym.lfsopen/0x0010c43d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c43d      cmp dword [var_20h], 0xffffffff\l0x0010c441      jne 0x10c44d\l"]
	"0x0010c443" [URL="sym.lfsopen/0x0010c443", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c443      mov eax, 0xffffffff                                    ; -1\l0x0010c448      jmp 0x10c6e7\l"]
	"0x0010c44d" [URL="sym.lfsopen/0x0010c44d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c441\l0x0010c44d      mov dword [var_34h], 0x13f648\l0x0010c454      mov eax, dword [0x13f644]                              ; [0x13f644:4]=0\l0x0010c459      mov dword [esp], eax\l0x0010c45c      call sym.wait                                          ; pid_t wait(int *wstatus)\l0x0010c461      mov al, byte [0x13f848]                                ; [0x13f848:1]=0\l0x0010c466      test al, al\l0x0010c468      jne 0x10c4e0\l"]
	"0x0010c46a" [URL="sym.lfsopen/0x0010c46a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c46a      mov eax, dword [obj.Lf_data]                           ; [0x13f640:4]=0\l0x0010c46f      mov dword [var_44h], 0\l0x0010c477      mov edx, dword [var_34h]\l0x0010c47a      mov dword [var_48h], edx\l0x0010c47e      mov dword [esp], eax\l0x0010c481      call sym.read                                          ; ssize_t read(int fildes, void *buf, size_t nbyte)\l0x0010c486      mov dword [var_38h], eax\l0x0010c489      cmp dword [var_38h], 0xffffffff\l0x0010c48d      jne 0x10c4a6\l"]
	"0x0010c48f" [URL="sym.lfsopen/0x0010c48f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c48f      mov eax, dword [0x13f644]                              ; [0x13f644:4]=0\l0x0010c494      mov dword [esp], eax\l0x0010c497      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010c49c      mov eax, 0xffffffff                                    ; -1\l0x0010c4a1      jmp 0x10c6e7\l"]
	"0x0010c4a6" [URL="sym.lfsopen/0x0010c4a6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c48d\l0x0010c4a6      mov eax, dword [var_34h]\l0x0010c4a9      mov dword [esp], eax\l0x0010c4ac      call sym.lfscheck\l0x0010c4b1      cmp eax, 0xffffffff\l0x0010c4b4      jne 0x10c4d9\l"]
	"0x0010c4b6" [URL="sym.lfsopen/0x0010c4b6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c4b6      mov dword [esp], 0x118ca4                              ; [0x118ca4:4]=0x6b736944 ; \"Disk does not contain a Xinu file system\\n\"\l0x0010c4bd      call sym.kprintf\l0x0010c4c2      mov eax, dword [0x13f644]                              ; [0x13f644:4]=0\l0x0010c4c7      mov dword [esp], eax\l0x0010c4ca      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010c4cf      mov eax, 0xffffffff                                    ; -1\l0x0010c4d4      jmp 0x10c6e7\l"]
	"0x0010c4d9" [URL="sym.lfsopen/0x0010c4d9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c4b4\l0x0010c4d9      mov byte [0x13f848], 1                                 ; [0x13f848:1]=0\l"]
	"0x0010c4e0" [URL="sym.lfsopen/0x0010c4e0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c468\l0x0010c4e0      mov byte [var_25h], 0\l0x0010c4e4      mov dword [var_1ch], 0\l0x0010c4eb      jmp 0x10c552\l"]
	"0x0010c4ed" [URL="sym.lfsopen/0x0010c4ed", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c55b\l0x0010c4ed      mov edx, dword [var_1ch]\l0x0010c4f0      mov eax, edx\l0x0010c4f2      add eax, eax\l0x0010c4f4      add eax, edx\l0x0010c4f6      shl eax, 3\l0x0010c4f9      lea edx, [eax + 0x10]\l0x0010c4fc      mov eax, dword [var_34h]\l0x0010c4ff      add eax, edx\l0x0010c501      add eax, 0xc                                           ; 12\l0x0010c504      mov dword [var_24h], eax\l0x0010c507      mov eax, dword [arg_ch]\l0x0010c50a      mov dword [var_14h], eax\l0x0010c50d      mov eax, dword [var_24h]\l0x0010c510      add eax, 8\l0x0010c513      mov dword [var_18h], eax\l0x0010c516      jmp 0x10c52e\l"]
	"0x0010c518" [URL="sym.lfsopen/0x0010c518", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c535\l0x0010c518      mov eax, dword [var_14h]\l0x0010c51b      mov dl, byte [eax]\l0x0010c51d      mov eax, dword [var_18h]\l0x0010c520      mov al, byte [eax]\l0x0010c522      cmp dl, al\l0x0010c524      je 0x10c528\l"]
	"0x0010c526" [URL="sym.lfsopen/0x0010c526", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c526      jmp 0x10c537\l"]
	"0x0010c528" [URL="sym.lfsopen/0x0010c528", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c524\l0x0010c528      inc dword [var_14h]\l0x0010c52b      inc dword [var_18h]\l"]
	"0x0010c52e" [URL="sym.lfsopen/0x0010c52e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c516\l0x0010c52e      mov eax, dword [var_14h]\l0x0010c531      mov al, byte [eax]\l0x0010c533      test al, al\l0x0010c535      jne 0x10c518\l"]
	"0x0010c537" [URL="sym.lfsopen/0x0010c537", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c526\l0x0010c537      mov eax, dword [var_14h]\l0x0010c53a      mov al, byte [eax]\l0x0010c53c      test al, al\l0x0010c53e      jne 0x10c54f\l"]
	"0x0010c540" [URL="sym.lfsopen/0x0010c540", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c540      mov eax, dword [var_18h]\l0x0010c543      mov al, byte [eax]\l0x0010c545      test al, al\l0x0010c547      jne 0x10c54f\l"]
	"0x0010c549" [URL="sym.lfsopen/0x0010c549", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c549      mov byte [var_25h], 1\l0x0010c54d      jmp 0x10c55d\l"]
	"0x0010c54f" [URL="sym.lfsopen/0x0010c54f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.lfsopen @ 0x10c53e, 0x10c547\l0x0010c54f      inc dword [var_1ch]\l"]
	"0x0010c552" [URL="sym.lfsopen/0x0010c552", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c4eb\l0x0010c552      mov eax, dword [var_34h]\l0x0010c555      mov eax, dword [eax + 0x18]\l0x0010c558      cmp eax, dword [var_1ch]\l0x0010c55b      jg 0x10c4ed\l"]
	"0x0010c55d" [URL="sym.lfsopen/0x0010c55d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c54d\l0x0010c55d      cmp byte [var_25h], 0\l0x0010c561      jne 0x10c611\l"]
	"0x0010c567" [URL="sym.lfsopen/0x0010c567", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c567      mov eax, dword [var_2ch]\l0x0010c56a      and eax, 8\l0x0010c56d      test eax, eax\l0x0010c56f      je 0x10c588\l"]
	"0x0010c571" [URL="sym.lfsopen/0x0010c571", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c571      mov eax, dword [0x13f644]                              ; [0x13f644:4]=0\l0x0010c576      mov dword [esp], eax\l0x0010c579      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010c57e      mov eax, 0xffffffff                                    ; -1\l0x0010c583      jmp 0x10c6e7\l"]
	"0x0010c588" [URL="sym.lfsopen/0x0010c588", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c56f\l0x0010c588      mov eax, dword [var_34h]\l0x0010c58b      mov eax, dword [eax + 0x18]\l0x0010c58e      cmp eax, 0x13                                          ; 19\l0x0010c591      jle 0x10c5aa\l"]
	"0x0010c593" [URL="sym.lfsopen/0x0010c593", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c593      mov eax, dword [0x13f644]                              ; [0x13f644:4]=0\l0x0010c598      mov dword [esp], eax\l0x0010c59b      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010c5a0      mov eax, 0xffffffff                                    ; -1\l0x0010c5a5      jmp 0x10c6e7\l"]
	"0x0010c5aa" [URL="sym.lfsopen/0x0010c5aa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c591\l0x0010c5aa      mov eax, dword [var_34h]\l0x0010c5ad      mov edx, dword [eax + 0x18]\l0x0010c5b0      lea ecx, [edx + 1]\l0x0010c5b3      mov eax, dword [var_34h]\l0x0010c5b6      mov dword [eax + 0x18], ecx\l0x0010c5b9      mov eax, edx\l0x0010c5bb      add eax, eax\l0x0010c5bd      add eax, edx\l0x0010c5bf      shl eax, 3\l0x0010c5c2      lea edx, [eax + 0x10]\l0x0010c5c5      mov eax, dword [var_34h]\l0x0010c5c8      add eax, edx\l0x0010c5ca      add eax, 0xc                                           ; 12\l0x0010c5cd      mov dword [var_24h], eax\l0x0010c5d0      mov eax, dword [var_24h]\l0x0010c5d3      mov dword [eax], 0\l0x0010c5d9      mov eax, dword [arg_ch]\l0x0010c5dc      mov dword [var_ch], eax\l0x0010c5df      mov eax, dword [var_24h]\l0x0010c5e2      add eax, 8\l0x0010c5e5      mov dword [var_10h], eax\l0x0010c5e8      nop\l"]
	"0x0010c5e9" [URL="sym.lfsopen/0x0010c5e9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c603\l0x0010c5e9      mov eax, dword [var_10h]\l0x0010c5ec      lea edx, [eax + 1]\l0x0010c5ef      mov dword [var_10h], edx\l0x0010c5f2      mov edx, dword [var_ch]\l0x0010c5f5      lea ecx, [edx + 1]\l0x0010c5f8      mov dword [var_ch], ecx\l0x0010c5fb      mov dl, byte [edx]\l0x0010c5fd      mov byte [eax], dl\l0x0010c5ff      mov al, byte [eax]\l0x0010c601      test al, al\l0x0010c603      jne 0x10c5e9\l"]
	"0x0010c605" [URL="sym.lfsopen/0x0010c605", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c605      mov eax, dword [var_24h]\l0x0010c608      mov dword [eax + 4], 0xffffffff                        ; [0xffffffff:4]=-1 ; -1\l0x0010c60f      jmp 0x10c632\l"]
	"0x0010c611" [URL="sym.lfsopen/0x0010c611", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c561\l0x0010c611      mov eax, dword [var_2ch]\l0x0010c614      and eax, 4\l0x0010c617      test eax, eax\l0x0010c619      je 0x10c632\l"]
	"0x0010c61b" [URL="sym.lfsopen/0x0010c61b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c61b      mov eax, dword [0x13f644]                              ; [0x13f644:4]=0\l0x0010c620      mov dword [esp], eax\l0x0010c623      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010c628      mov eax, 0xffffffff                                    ; -1\l0x0010c62d      jmp 0x10c6e7\l"]
	"0x0010c632" [URL="sym.lfsopen/0x0010c632", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.lfsopen @ 0x10c60f, 0x10c619\l0x0010c632      mov edx, dword [var_20h]\l0x0010c635      mov eax, edx\l0x0010c637      shl eax, 2\l0x0010c63a      add eax, edx\l0x0010c63c      shl eax, 7\l0x0010c63f      add eax, obj.lfltab                                    ; 0x13e740\l0x0010c644      mov dword [var_30h], eax\l0x0010c647      mov eax, dword [var_30h]\l0x0010c64a      mov byte [eax], 1\l0x0010c64d      mov eax, dword [var_30h]\l0x0010c650      mov edx, dword [var_24h]\l0x0010c653      mov dword [eax + 0xc], edx\l0x0010c656      mov eax, dword [var_2ch]\l0x0010c659      and eax, 3\l0x0010c65c      mov edx, eax\l0x0010c65e      mov eax, dword [var_30h]\l0x0010c661      mov dword [eax + 0x10], edx\l0x0010c664      mov eax, dword [var_30h]\l0x0010c667      mov dword [eax + 0x14], 0\l0x0010c66e      mov eax, dword [var_30h]\l0x0010c671      add eax, 0x18                                          ; 24\l0x0010c674      mov dword [var_10h], eax\l0x0010c677      mov eax, dword [arg_ch]\l0x0010c67a      mov dword [var_ch], eax\l0x0010c67d      nop\l"]
	"0x0010c67e" [URL="sym.lfsopen/0x0010c67e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsopen @ 0x10c698\l0x0010c67e      mov eax, dword [var_10h]\l0x0010c681      lea edx, [eax + 1]\l0x0010c684      mov dword [var_10h], edx\l0x0010c687      mov edx, dword [var_ch]\l0x0010c68a      lea ecx, [edx + 1]\l0x0010c68d      mov dword [var_ch], ecx\l0x0010c690      mov dl, byte [edx]\l0x0010c692      mov byte [eax], dl\l0x0010c694      mov al, byte [eax]\l0x0010c696      test al, al\l0x0010c698      jne 0x10c67e\l"]
	"0x0010c69a" [URL="sym.lfsopen/0x0010c69a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c69a      mov eax, dword [var_30h]\l0x0010c69d      mov dword [eax + 0x28], 0xffffffff                     ; [0xffffffff:4]=-1 ; -1\l0x0010c6a4      mov eax, dword [var_30h]\l0x0010c6a7      mov dword [eax + 0x74], 0xffffffff                     ; [0xffffffff:4]=-1 ; -1\l0x0010c6ae      mov eax, dword [var_30h]\l0x0010c6b1      lea edx, [eax + 0x278]\l0x0010c6b7      mov eax, dword [var_30h]\l0x0010c6ba      mov dword [eax + 0x278], edx\l0x0010c6c0      mov eax, dword [var_30h]\l0x0010c6c3      mov byte [eax + 0x27c], 0\l0x0010c6ca      mov eax, dword [var_30h]\l0x0010c6cd      mov byte [eax + 0x27d], 0\l0x0010c6d4      mov eax, dword [0x13f644]                              ; [0x13f644:4]=0\l0x0010c6d9      mov dword [esp], eax\l0x0010c6dc      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010c6e1      mov eax, dword [var_30h]\l0x0010c6e4      mov eax, dword [eax + 4]\l"]
	"0x0010c6e7" [URL="sym.lfsopen/0x0010c6e7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x0010c383  CODE 0x0010c3a1  CODE 0x0010c42b  \l; XREFS: CODE 0x0010c448  CODE 0x0010c4a1  CODE 0x0010c4d4  \l; XREFS: CODE 0x0010c583  CODE 0x0010c5a5  CODE 0x0010c62d  \l0x0010c6e7      leave\l0x0010c6e8      ret\l"]
        "0x0010c349" -> "0x0010c372" [color="#0037da"];
        "0x0010c35e" -> "0x0010c36f" [color="#13a10e"];
        "0x0010c35e" -> "0x0010c36d" [color="#c50f1f"];
        "0x0010c36d" -> "0x0010c378" [color="#0037da"];
        "0x0010c36f" -> "0x0010c372" [color="#0037da"];
        "0x0010c372" -> "0x0010c35e" [color="#13a10e"];
        "0x0010c372" -> "0x0010c378" [color="#c50f1f"];
        "0x0010c378" -> "0x0010c388" [color="#13a10e"];
        "0x0010c378" -> "0x0010c37e" [color="#c50f1f"];
        "0x0010c37e" -> "0x0010c6e7" [color="#0037da"];
        "0x0010c388" -> "0x0010c3a6" [color="#13a10e"];
        "0x0010c388" -> "0x0010c39c" [color="#c50f1f"];
        "0x0010c39c" -> "0x0010c6e7" [color="#0037da"];
        "0x0010c3a6" -> "0x0010c433" [color="#0037da"];
        "0x0010c3b6" -> "0x0010c3e4" [color="#13a10e"];
        "0x0010c3b6" -> "0x0010c3d4" [color="#c50f1f"];
        "0x0010c3d4" -> "0x0010c3e2" [color="#13a10e"];
        "0x0010c3d4" -> "0x0010c3da" [color="#c50f1f"];
        "0x0010c3da" -> "0x0010c430" [color="#0037da"];
        "0x0010c3e2" -> "0x0010c430" [color="#0037da"];
        "0x0010c3e4" -> "0x0010c40b" [color="#0037da"];
        "0x0010c3f5" -> "0x0010c405" [color="#13a10e"];
        "0x0010c3f5" -> "0x0010c403" [color="#c50f1f"];
        "0x0010c403" -> "0x0010c414" [color="#0037da"];
        "0x0010c405" -> "0x0010c40b" [color="#0037da"];
        "0x0010c40b" -> "0x0010c3f5" [color="#13a10e"];
        "0x0010c40b" -> "0x0010c414" [color="#c50f1f"];
        "0x0010c414" -> "0x0010c430" [color="#13a10e"];
        "0x0010c414" -> "0x0010c41d" [color="#c50f1f"];
        "0x0010c41d" -> "0x0010c430" [color="#13a10e"];
        "0x0010c41d" -> "0x0010c426" [color="#c50f1f"];
        "0x0010c426" -> "0x0010c6e7" [color="#0037da"];
        "0x0010c430" -> "0x0010c433" [color="#0037da"];
        "0x0010c433" -> "0x0010c3b6" [color="#13a10e"];
        "0x0010c433" -> "0x0010c43d" [color="#c50f1f"];
        "0x0010c43d" -> "0x0010c44d" [color="#13a10e"];
        "0x0010c43d" -> "0x0010c443" [color="#c50f1f"];
        "0x0010c443" -> "0x0010c6e7" [color="#0037da"];
        "0x0010c44d" -> "0x0010c4e0" [color="#13a10e"];
        "0x0010c44d" -> "0x0010c46a" [color="#c50f1f"];
        "0x0010c46a" -> "0x0010c4a6" [color="#13a10e"];
        "0x0010c46a" -> "0x0010c48f" [color="#c50f1f"];
        "0x0010c48f" -> "0x0010c6e7" [color="#0037da"];
        "0x0010c4a6" -> "0x0010c4d9" [color="#13a10e"];
        "0x0010c4a6" -> "0x0010c4b6" [color="#c50f1f"];
        "0x0010c4b6" -> "0x0010c6e7" [color="#0037da"];
        "0x0010c4d9" -> "0x0010c4e0" [color="#0037da"];
        "0x0010c4e0" -> "0x0010c552" [color="#0037da"];
        "0x0010c4ed" -> "0x0010c52e" [color="#0037da"];
        "0x0010c518" -> "0x0010c528" [color="#13a10e"];
        "0x0010c518" -> "0x0010c526" [color="#c50f1f"];
        "0x0010c526" -> "0x0010c537" [color="#0037da"];
        "0x0010c528" -> "0x0010c52e" [color="#0037da"];
        "0x0010c52e" -> "0x0010c518" [color="#13a10e"];
        "0x0010c52e" -> "0x0010c537" [color="#c50f1f"];
        "0x0010c537" -> "0x0010c54f" [color="#13a10e"];
        "0x0010c537" -> "0x0010c540" [color="#c50f1f"];
        "0x0010c540" -> "0x0010c54f" [color="#13a10e"];
        "0x0010c540" -> "0x0010c549" [color="#c50f1f"];
        "0x0010c549" -> "0x0010c55d" [color="#0037da"];
        "0x0010c54f" -> "0x0010c552" [color="#0037da"];
        "0x0010c552" -> "0x0010c4ed" [color="#13a10e"];
        "0x0010c552" -> "0x0010c55d" [color="#c50f1f"];
        "0x0010c55d" -> "0x0010c611" [color="#13a10e"];
        "0x0010c55d" -> "0x0010c567" [color="#c50f1f"];
        "0x0010c567" -> "0x0010c588" [color="#13a10e"];
        "0x0010c567" -> "0x0010c571" [color="#c50f1f"];
        "0x0010c571" -> "0x0010c6e7" [color="#0037da"];
        "0x0010c588" -> "0x0010c5aa" [color="#13a10e"];
        "0x0010c588" -> "0x0010c593" [color="#c50f1f"];
        "0x0010c593" -> "0x0010c6e7" [color="#0037da"];
        "0x0010c5aa" -> "0x0010c5e9" [color="#0037da"];
        "0x0010c5e9" -> "0x0010c5e9" [color="#13a10e"];
        "0x0010c5e9" -> "0x0010c605" [color="#c50f1f"];
        "0x0010c605" -> "0x0010c632" [color="#0037da"];
        "0x0010c611" -> "0x0010c632" [color="#13a10e"];
        "0x0010c611" -> "0x0010c61b" [color="#c50f1f"];
        "0x0010c61b" -> "0x0010c6e7" [color="#0037da"];
        "0x0010c632" -> "0x0010c67e" [color="#0037da"];
        "0x0010c67e" -> "0x0010c67e" [color="#13a10e"];
        "0x0010c67e" -> "0x0010c69a" [color="#c50f1f"];
        "0x0010c69a" -> "0x0010c6e7" [color="#0037da"];
}
