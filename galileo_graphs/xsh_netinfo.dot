digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00115c79" [URL="sym.xsh_netinfo/0x00115c79", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="1493: sym.xsh_netinfo (int32_t arg_8h, int32_t arg_ch);\l; var int32_t var_6ch @ ebp-0x6c\l; var int32_t var_5ch @ ebp-0x5c\l; var int32_t var_34h @ ebp-0x34\l; var int32_t var_30h @ ebp-0x30\l; var int32_t var_2ch @ ebp-0x2c\l; var int32_t var_28h @ ebp-0x28\l; var int32_t var_24h @ ebp-0x24\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l0x00115c79      push ebp\l0x00115c7a      mov ebp, esp\l0x00115c7c      push edi\l0x00115c7d      push esi\l0x00115c7e      push ebx\l0x00115c7f      sub esp, 0x6c\l0x00115c82      call sym.__x86.get_pc_thunk.bx\l0x00115c87      add ebx, 0xb379\l0x00115c8d      cmp dword [arg_8h], 2\l0x00115c91      jne 0x115d34\l"]
	"0x00115c97" [URL="sym.xsh_netinfo/0x00115c97", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00115c97      mov eax, dword [arg_ch]\l0x00115c9a      add eax, 4\l0x00115c9d      mov eax, dword [eax]\l0x00115c9f      sub esp, 4\l0x00115ca2      push 7                                                 ; 7\l0x00115ca4      lea edx, [ebx - 0x6bec]\l0x00115caa      push edx\l0x00115cab      push eax\l0x00115cac      call sym.strncmp                                       ; int strncmp(const char *s1, const char *s2, size_t n)\l0x00115cb1      add esp, 0x10\l0x00115cb4      test eax, eax\l0x00115cb6      jne 0x115d34\l"]
	"0x00115cb8" [URL="sym.xsh_netinfo/0x00115cb8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00115cb8      mov eax, dword [arg_ch]\l0x00115cbb      mov eax, dword [eax]\l0x00115cbd      sub esp, 8\l0x00115cc0      push eax\l0x00115cc1      lea eax, [ebx - 0x6be5]\l0x00115cc7      push eax\l0x00115cc8      call sym.printf                                        ; int printf(const char *format)\l0x00115ccd      add esp, 0x10\l0x00115cd0      sub esp, 0xc\l0x00115cd3      lea eax, [ebx - 0x6bd9]\l0x00115cd9      push eax\l0x00115cda      call sym.printf                                        ; int printf(const char *format)\l0x00115cdf      add esp, 0x10\l0x00115ce2      sub esp, 0xc\l0x00115ce5      lea eax, [ebx - 0x6bc8]\l0x00115ceb      push eax\l0x00115cec      call sym.printf                                        ; int printf(const char *format)\l0x00115cf1      add esp, 0x10\l0x00115cf4      sub esp, 0xc\l0x00115cf7      lea eax, [ebx - 0x6ba6]\l0x00115cfd      push eax\l0x00115cfe      call sym.printf                                        ; int printf(const char *format)\l0x00115d03      add esp, 0x10\l0x00115d06      sub esp, 0xc\l0x00115d09      lea eax, [ebx - 0x6b9c]\l0x00115d0f      push eax\l0x00115d10      call sym.printf                                        ; int printf(const char *format)\l0x00115d15      add esp, 0x10\l0x00115d18      sub esp, 0xc\l0x00115d1b      lea eax, [ebx - 0x6b7c]\l0x00115d21      push eax\l0x00115d22      call sym.printf                                        ; int printf(const char *format)\l0x00115d27      add esp, 0x10\l0x00115d2a      mov eax, 1\l0x00115d2f      jmp 0x116246\l"]
	"0x00115d34" [URL="sym.xsh_netinfo/0x00115d34", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_netinfo @ 0x115c91, 0x115cb6\l0x00115d34      cmp dword [arg_8h], 2\l0x00115d38      jle 0x115db8\l"]
	"0x00115d3a" [URL="sym.xsh_netinfo/0x00115d3a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00115d3a      mov eax, dword [arg_ch]\l0x00115d3d      mov edx, dword [eax]\l0x00115d3f      mov eax, obj.currpid                                   ; 0x1212c0\l0x00115d45      mov ecx, dword [eax]\l0x00115d47      mov esi, obj.proctab                                   ; 0x1212e0\l0x00115d4d      mov eax, ecx\l0x00115d4f      shl eax, 3\l0x00115d52      sub eax, ecx\l0x00115d54      shl eax, 3\l0x00115d57      add eax, esi\l0x00115d59      add eax, 0x32                                          ; 50\l0x00115d5c      mov ax, word [eax]\l0x00115d5f      cwde\l0x00115d60      sub esp, 4\l0x00115d63      push edx\l0x00115d64      lea edx, [ebx - 0x6b58]\l0x00115d6a      push edx\l0x00115d6b      push eax\l0x00115d6c      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00115d71      add esp, 0x10\l0x00115d74      mov eax, dword [arg_ch]\l0x00115d77      mov edx, dword [eax]\l0x00115d79      mov eax, obj.currpid                                   ; 0x1212c0\l0x00115d7f      mov ecx, dword [eax]\l0x00115d81      mov esi, obj.proctab                                   ; 0x1212e0\l0x00115d87      mov eax, ecx\l0x00115d89      shl eax, 3\l0x00115d8c      sub eax, ecx\l0x00115d8e      shl eax, 3\l0x00115d91      add eax, esi\l0x00115d93      add eax, 0x32                                          ; 50\l0x00115d96      mov ax, word [eax]\l0x00115d99      cwde\l0x00115d9a      sub esp, 4\l0x00115d9d      push edx\l0x00115d9e      lea edx, [ebx - 0x6b40]\l0x00115da4      push edx\l0x00115da5      push eax\l0x00115da6      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00115dab      add esp, 0x10\l0x00115dae      mov eax, 0xffffffff                                    ; -1\l0x00115db3      jmp 0x116246\l"]
	"0x00115db8" [URL="sym.xsh_netinfo/0x00115db8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_netinfo @ 0x115d38\l0x00115db8      cmp dword [arg_8h], 2\l0x00115dbc      jne 0x115e70\l"]
	"0x00115dc2" [URL="sym.xsh_netinfo/0x00115dc2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00115dc2      mov eax, dword [arg_ch]\l0x00115dc5      add eax, 4\l0x00115dc8      mov eax, dword [eax]\l0x00115dca      sub esp, 4\l0x00115dcd      push 3                                                 ; 3\l0x00115dcf      lea edx, [ebx - 0x6b1a]\l0x00115dd5      push edx\l0x00115dd6      push eax\l0x00115dd7      call sym.strncmp                                       ; int strncmp(const char *s1, const char *s2, size_t n)\l0x00115ddc      add esp, 0x10\l0x00115ddf      test eax, eax\l0x00115de1      je 0x115e61\l"]
	"0x00115de3" [URL="sym.xsh_netinfo/0x00115de3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00115de3      mov eax, dword [arg_ch]\l0x00115de6      mov edx, dword [eax]\l0x00115de8      mov eax, obj.currpid                                   ; 0x1212c0\l0x00115dee      mov ecx, dword [eax]\l0x00115df0      mov esi, obj.proctab                                   ; 0x1212e0\l0x00115df6      mov eax, ecx\l0x00115df8      shl eax, 3\l0x00115dfb      sub eax, ecx\l0x00115dfd      shl eax, 3\l0x00115e00      add eax, esi\l0x00115e02      add eax, 0x32                                          ; 50\l0x00115e05      mov ax, word [eax]\l0x00115e08      cwde\l0x00115e09      sub esp, 4\l0x00115e0c      push edx\l0x00115e0d      lea edx, [ebx - 0x6b17]\l0x00115e13      push edx\l0x00115e14      push eax\l0x00115e15      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00115e1a      add esp, 0x10\l0x00115e1d      mov eax, dword [arg_ch]\l0x00115e20      mov edx, dword [eax]\l0x00115e22      mov eax, obj.currpid                                   ; 0x1212c0\l0x00115e28      mov ecx, dword [eax]\l0x00115e2a      mov esi, obj.proctab                                   ; 0x1212e0\l0x00115e30      mov eax, ecx\l0x00115e32      shl eax, 3\l0x00115e35      sub eax, ecx\l0x00115e37      shl eax, 3\l0x00115e3a      add eax, esi\l0x00115e3c      add eax, 0x32                                          ; 50\l0x00115e3f      mov ax, word [eax]\l0x00115e42      cwde\l0x00115e43      sub esp, 4\l0x00115e46      push edx\l0x00115e47      lea edx, [ebx - 0x6b40]\l0x00115e4d      push edx\l0x00115e4e      push eax\l0x00115e4f      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00115e54      add esp, 0x10\l0x00115e57      mov eax, 1\l0x00115e5c      jmp 0x116246\l"]
	"0x00115e61" [URL="sym.xsh_netinfo/0x00115e61", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_netinfo @ 0x115de1\l0x00115e61      mov eax, obj.NetData                                   ; 0x140200\l0x00115e67      mov byte [eax + 0x20], 0\l0x00115e6b      call sym.getlocalip\l"]
	"0x00115e70" [URL="sym.xsh_netinfo/0x00115e70", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_netinfo @ 0x115dbc\l0x00115e70      mov eax, obj.NetData                                   ; 0x140200\l0x00115e76      mov eax, dword [eax]\l0x00115e78      mov dword [var_1ch], eax\l0x00115e7b      mov eax, dword [var_1ch]\l0x00115e7e      xor ecx, ecx\l0x00115e80      mov cl, al\l0x00115e82      mov eax, dword [var_1ch]\l0x00115e85      shr eax, 8\l0x00115e88      xor edx, edx\l0x00115e8a      mov dl, al\l0x00115e8c      mov eax, dword [var_1ch]\l0x00115e8f      shr eax, 0x10\l0x00115e92      and eax, 0xff                                          ; 255\l0x00115e97      mov esi, dword [var_1ch]\l0x00115e9a      shr esi, 0x18\l0x00115e9d      sub esp, 8\l0x00115ea0      push ecx\l0x00115ea1      push edx\l0x00115ea2      push eax\l0x00115ea3      push esi\l0x00115ea4      lea eax, [ebx - 0x6b01]\l0x00115eaa      push eax\l0x00115eab      lea eax, [var_5ch]\l0x00115eae      push eax\l0x00115eaf      call sym.sprintf                                       ; int sprintf(char *s, const char *format, ...)\l0x00115eb4      add esp, 0x20\l0x00115eb7      push dword [var_1ch]\l0x00115eba      lea eax, [var_5ch]\l0x00115ebd      push eax\l0x00115ebe      lea eax, [ebx - 0x6af5]\l0x00115ec4      push eax\l0x00115ec5      lea eax, [ebx - 0x6ae9]\l0x00115ecb      push eax\l0x00115ecc      call sym.printf                                        ; int printf(const char *format)\l0x00115ed1      add esp, 0x10\l0x00115ed4      mov eax, obj.NetData                                   ; 0x140200\l0x00115eda      mov eax, dword [eax + 4]\l0x00115edd      mov dword [var_20h], eax\l0x00115ee0      mov eax, dword [var_20h]\l0x00115ee3      xor ecx, ecx\l0x00115ee5      mov cl, al\l0x00115ee7      mov eax, dword [var_20h]\l0x00115eea      shr eax, 8\l0x00115eed      xor edx, edx\l0x00115eef      mov dl, al\l0x00115ef1      mov eax, dword [var_20h]\l0x00115ef4      shr eax, 0x10\l0x00115ef7      and eax, 0xff                                          ; 255\l0x00115efc      mov esi, dword [var_20h]\l0x00115eff      shr esi, 0x18\l0x00115f02      sub esp, 8\l0x00115f05      push ecx\l0x00115f06      push edx\l0x00115f07      push eax\l0x00115f08      push esi\l0x00115f09      lea eax, [ebx - 0x6b01]\l0x00115f0f      push eax\l0x00115f10      lea eax, [var_5ch]\l0x00115f13      push eax\l0x00115f14      call sym.sprintf                                       ; int sprintf(char *s, const char *format, ...)\l0x00115f19      add esp, 0x20\l0x00115f1c      push dword [var_20h]\l0x00115f1f      lea eax, [var_5ch]\l0x00115f22      push eax\l0x00115f23      lea eax, [ebx - 0x6ad0]\l0x00115f29      push eax\l0x00115f2a      lea eax, [ebx - 0x6ae9]\l0x00115f30      push eax\l0x00115f31      call sym.printf                                        ; int printf(const char *format)\l0x00115f36      add esp, 0x10\l0x00115f39      mov eax, obj.NetData                                   ; 0x140200\l0x00115f3f      mov eax, dword [eax + 0xc]\l0x00115f42      mov dword [var_24h], eax\l0x00115f45      mov eax, dword [var_24h]\l0x00115f48      xor ecx, ecx\l0x00115f4a      mov cl, al\l0x00115f4c      mov eax, dword [var_24h]\l0x00115f4f      shr eax, 8\l0x00115f52      xor edx, edx\l0x00115f54      mov dl, al\l0x00115f56      mov eax, dword [var_24h]\l0x00115f59      shr eax, 0x10\l0x00115f5c      and eax, 0xff                                          ; 255\l0x00115f61      mov esi, dword [var_24h]\l0x00115f64      shr esi, 0x18\l0x00115f67      sub esp, 8\l0x00115f6a      push ecx\l0x00115f6b      push edx\l0x00115f6c      push eax\l0x00115f6d      push esi\l0x00115f6e      lea eax, [ebx - 0x6b01]\l0x00115f74      push eax\l0x00115f75      lea eax, [var_5ch]\l0x00115f78      push eax\l0x00115f79      call sym.sprintf                                       ; int sprintf(char *s, const char *format, ...)\l0x00115f7e      add esp, 0x20\l0x00115f81      push dword [var_24h]\l0x00115f84      lea eax, [var_5ch]\l0x00115f87      push eax\l0x00115f88      lea eax, [ebx - 0x6ac2]\l0x00115f8e      push eax\l0x00115f8f      lea eax, [ebx - 0x6ae9]\l0x00115f95      push eax\l0x00115f96      call sym.printf                                        ; int printf(const char *format)\l0x00115f9b      add esp, 0x10\l0x00115f9e      mov eax, obj.NetData                                   ; 0x140200\l0x00115fa4      mov eax, dword [eax + 8]\l0x00115fa7      mov dword [var_28h], eax\l0x00115faa      mov eax, obj.NetData                                   ; 0x140200\l0x00115fb0      mov eax, dword [eax]\l0x00115fb2      mov dword [var_1ch], eax\l0x00115fb5      mov eax, dword [var_28h]\l0x00115fb8      xor ecx, ecx\l0x00115fba      mov cl, al\l0x00115fbc      mov eax, dword [var_28h]\l0x00115fbf      shr eax, 8\l0x00115fc2      xor edx, edx\l0x00115fc4      mov dl, al\l0x00115fc6      mov eax, dword [var_28h]\l0x00115fc9      shr eax, 0x10\l0x00115fcc      and eax, 0xff                                          ; 255\l0x00115fd1      mov esi, dword [var_28h]\l0x00115fd4      shr esi, 0x18\l0x00115fd7      sub esp, 8\l0x00115fda      push ecx\l0x00115fdb      push edx\l0x00115fdc      push eax\l0x00115fdd      push esi\l0x00115fde      lea eax, [ebx - 0x6b01]\l0x00115fe4      push eax\l0x00115fe5      lea eax, [var_5ch]\l0x00115fe8      push eax\l0x00115fe9      call sym.sprintf                                       ; int sprintf(char *s, const char *format, ...)\l0x00115fee      add esp, 0x20\l0x00115ff1      push dword [var_28h]\l0x00115ff4      lea eax, [var_5ch]\l0x00115ff7      push eax\l0x00115ff8      lea eax, [ebx - 0x6ab7]\l0x00115ffe      push eax\l0x00115fff      lea eax, [ebx - 0x6ae9]\l0x00116005      push eax\l0x00116006      call sym.printf                                        ; int printf(const char *format)\l0x0011600b      add esp, 0x10\l0x0011600e      mov eax, obj.NetData                                   ; 0x140200\l0x00116014      mov eax, dword [eax + 0x10]\l0x00116017      mov dword [var_2ch], eax\l0x0011601a      mov eax, dword [var_2ch]\l0x0011601d      xor ecx, ecx\l0x0011601f      mov cl, al\l0x00116021      mov eax, dword [var_2ch]\l0x00116024      shr eax, 8\l0x00116027      xor edx, edx\l0x00116029      mov dl, al\l0x0011602b      mov eax, dword [var_2ch]\l0x0011602e      shr eax, 0x10\l0x00116031      and eax, 0xff                                          ; 255\l0x00116036      mov esi, dword [var_2ch]\l0x00116039      shr esi, 0x18\l0x0011603c      sub esp, 8\l0x0011603f      push ecx\l0x00116040      push edx\l0x00116041      push eax\l0x00116042      push esi\l0x00116043      lea eax, [ebx - 0x6b01]\l0x00116049      push eax\l0x0011604a      lea eax, [var_5ch]\l0x0011604d      push eax\l0x0011604e      call sym.sprintf                                       ; int sprintf(char *s, const char *format, ...)\l0x00116053      add esp, 0x20\l0x00116056      push dword [var_2ch]\l0x00116059      lea eax, [var_5ch]\l0x0011605c      push eax\l0x0011605d      lea eax, [ebx - 0x6aa9]\l0x00116063      push eax\l0x00116064      lea eax, [ebx - 0x6ae9]\l0x0011606a      push eax\l0x0011606b      call sym.printf                                        ; int printf(const char *format)\l0x00116070      add esp, 0x10\l0x00116073      mov eax, obj.NetData                                   ; 0x140200\l0x00116079      mov eax, dword [eax + 0x1c]\l0x0011607c      mov dword [var_30h], eax\l0x0011607f      cmp dword [var_30h], 0\l0x00116083      je 0x1160de\l"]
	"0x00116085" [URL="sym.xsh_netinfo/0x00116085", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00116085      mov eax, dword [var_30h]\l0x00116088      xor ecx, ecx\l0x0011608a      mov cl, al\l0x0011608c      mov eax, dword [var_30h]\l0x0011608f      shr eax, 8\l0x00116092      xor edx, edx\l0x00116094      mov dl, al\l0x00116096      mov eax, dword [var_30h]\l0x00116099      shr eax, 0x10\l0x0011609c      and eax, 0xff                                          ; 255\l0x001160a1      mov esi, dword [var_30h]\l0x001160a4      shr esi, 0x18\l0x001160a7      sub esp, 8\l0x001160aa      push ecx\l0x001160ab      push edx\l0x001160ac      push eax\l0x001160ad      push esi\l0x001160ae      lea eax, [ebx - 0x6b01]\l0x001160b4      push eax\l0x001160b5      lea eax, [var_5ch]\l0x001160b8      push eax\l0x001160b9      call sym.sprintf                                       ; int sprintf(char *s, const char *format, ...)\l0x001160be      add esp, 0x20\l0x001160c1      push dword [var_30h]\l0x001160c4      lea eax, [var_5ch]\l0x001160c7      push eax\l0x001160c8      lea eax, [ebx - 0x6a9e]\l0x001160ce      push eax\l0x001160cf      lea eax, [ebx - 0x6ae9]\l0x001160d5      push eax\l0x001160d6      call sym.printf                                        ; int printf(const char *format)\l0x001160db      add esp, 0x10\l"]
	"0x001160de" [URL="sym.xsh_netinfo/0x001160de", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_netinfo @ 0x116083\l0x001160de      mov eax, obj.NetData                                   ; 0x140200\l0x001160e4      mov eax, dword [eax + 0x18]\l0x001160e7      mov dword [var_34h], eax\l0x001160ea      cmp dword [var_34h], 0\l0x001160ee      je 0x116149\l"]
	"0x001160f0" [URL="sym.xsh_netinfo/0x001160f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001160f0      mov eax, dword [var_34h]\l0x001160f3      xor ecx, ecx\l0x001160f5      mov cl, al\l0x001160f7      mov eax, dword [var_34h]\l0x001160fa      shr eax, 8\l0x001160fd      xor edx, edx\l0x001160ff      mov dl, al\l0x00116101      mov eax, dword [var_34h]\l0x00116104      shr eax, 0x10\l0x00116107      and eax, 0xff                                          ; 255\l0x0011610c      mov esi, dword [var_34h]\l0x0011610f      shr esi, 0x18\l0x00116112      sub esp, 8\l0x00116115      push ecx\l0x00116116      push edx\l0x00116117      push eax\l0x00116118      push esi\l0x00116119      lea eax, [ebx - 0x6b01]\l0x0011611f      push eax\l0x00116120      lea eax, [var_5ch]\l0x00116123      push eax\l0x00116124      call sym.sprintf                                       ; int sprintf(char *s, const char *format, ...)\l0x00116129      add esp, 0x20\l0x0011612c      push dword [var_34h]\l0x0011612f      lea eax, [var_5ch]\l0x00116132      push eax\l0x00116133      lea eax, [ebx - 0x6a8d]\l0x00116139      push eax\l0x0011613a      lea eax, [ebx - 0x6ae9]\l0x00116140      push eax\l0x00116141      call sym.printf                                        ; int printf(const char *format)\l0x00116146      add esp, 0x10\l"]
	"0x00116149" [URL="sym.xsh_netinfo/0x00116149", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_netinfo @ 0x1160ee\l0x00116149      mov eax, obj.NetData                                   ; 0x140200\l0x0011614f      mov al, byte [eax + 0x26]\l0x00116152      mov edi, eax\l0x00116154      and edi, 0xff                                          ; 255\l0x0011615a      mov dword [var_6ch], edi\l0x0011615d      mov eax, obj.NetData                                   ; 0x140200\l0x00116163      mov al, byte [eax + 0x25]\l0x00116166      mov edi, eax\l0x00116168      and edi, 0xff                                          ; 255\l0x0011616e      mov eax, obj.NetData                                   ; 0x140200\l0x00116174      mov al, byte [eax + 0x24]\l0x00116177      mov esi, eax\l0x00116179      and esi, 0xff                                          ; 255\l0x0011617f      mov eax, obj.NetData                                   ; 0x140200\l0x00116185      mov al, byte [eax + 0x23]\l0x00116188      xor ecx, ecx\l0x0011618a      mov cl, al\l0x0011618c      mov eax, obj.NetData                                   ; 0x140200\l0x00116192      mov al, byte [eax + 0x22]\l0x00116195      xor edx, edx\l0x00116197      mov dl, al\l0x00116199      mov eax, obj.NetData                                   ; 0x140200\l0x0011619f      mov al, byte [eax + 0x21]\l0x001161a2      and eax, 0xff                                          ; 255\l0x001161a7      push dword [var_6ch]\l0x001161aa      push edi\l0x001161ab      push esi\l0x001161ac      push ecx\l0x001161ad      push edx\l0x001161ae      push eax\l0x001161af      lea eax, [ebx - 0x6a81]\l0x001161b5      push eax\l0x001161b6      lea eax, [ebx - 0x6a74]\l0x001161bc      push eax\l0x001161bd      call sym.printf                                        ; int printf(const char *format)\l0x001161c2      add esp, 0x20\l0x001161c5      mov eax, obj.NetData                                   ; 0x140200\l0x001161cb      mov al, byte [eax + 0x2c]\l0x001161ce      mov edi, eax\l0x001161d0      and edi, 0xff                                          ; 255\l0x001161d6      mov dword [var_6ch], edi\l0x001161d9      mov eax, obj.NetData                                   ; 0x140200\l0x001161df      mov al, byte [eax + 0x2b]\l0x001161e2      mov edi, eax\l0x001161e4      and edi, 0xff                                          ; 255\l0x001161ea      mov eax, obj.NetData                                   ; 0x140200\l0x001161f0      mov al, byte [eax + 0x2a]\l0x001161f3      mov esi, eax\l0x001161f5      and esi, 0xff                                          ; 255\l0x001161fb      mov eax, obj.NetData                                   ; 0x140200\l0x00116201      mov al, byte [eax + 0x29]\l0x00116204      xor ecx, ecx\l0x00116206      mov cl, al\l0x00116208      mov eax, obj.NetData                                   ; 0x140200\l0x0011620e      mov al, byte [eax + 0x28]\l0x00116211      xor edx, edx\l0x00116213      mov dl, al\l0x00116215      mov eax, obj.NetData                                   ; 0x140200\l0x0011621b      mov al, byte [eax + 0x27]\l0x0011621e      and eax, 0xff                                          ; 255\l0x00116223      push dword [var_6ch]\l0x00116226      push edi\l0x00116227      push esi\l0x00116228      push ecx\l0x00116229      push edx\l0x0011622a      push eax\l0x0011622b      lea eax, [ebx - 0x6a4b]\l0x00116231      push eax\l0x00116232      lea eax, [ebx - 0x6a74]\l0x00116238      push eax\l0x00116239      call sym.printf                                        ; int printf(const char *format)\l0x0011623e      add esp, 0x20\l0x00116241      mov eax, 1\l"]
	"0x00116246" [URL="sym.xsh_netinfo/0x00116246", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_netinfo @ 0x115d2f, 0x115db3, 0x115e5c\l0x00116246      lea esp, [var_ch]\l0x00116249      pop ebx\l0x0011624a      pop esi\l0x0011624b      pop edi\l0x0011624c      pop ebp\l0x0011624d      ret\l"]
        "0x00115c79" -> "0x00115d34" [color="#13a10e"];
        "0x00115c79" -> "0x00115c97" [color="#c50f1f"];
        "0x00115c97" -> "0x00115d34" [color="#13a10e"];
        "0x00115c97" -> "0x00115cb8" [color="#c50f1f"];
        "0x00115cb8" -> "0x00116246" [color="#0037da"];
        "0x00115d34" -> "0x00115db8" [color="#13a10e"];
        "0x00115d34" -> "0x00115d3a" [color="#c50f1f"];
        "0x00115d3a" -> "0x00116246" [color="#0037da"];
        "0x00115db8" -> "0x00115e70" [color="#13a10e"];
        "0x00115db8" -> "0x00115dc2" [color="#c50f1f"];
        "0x00115dc2" -> "0x00115e61" [color="#13a10e"];
        "0x00115dc2" -> "0x00115de3" [color="#c50f1f"];
        "0x00115de3" -> "0x00116246" [color="#0037da"];
        "0x00115e61" -> "0x00115e70" [color="#0037da"];
        "0x00115e70" -> "0x001160de" [color="#13a10e"];
        "0x00115e70" -> "0x00116085" [color="#c50f1f"];
        "0x00116085" -> "0x001160de" [color="#0037da"];
        "0x001160de" -> "0x00116149" [color="#13a10e"];
        "0x001160de" -> "0x001160f0" [color="#c50f1f"];
        "0x001160f0" -> "0x00116149" [color="#0037da"];
        "0x00116149" -> "0x00116246" [color="#0037da"];
}
