digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010edc6" [URL="sym.dns_bldq/0x0010edc6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.dnslookup @ 0x10ed00\l261: sym.dns_bldq (int32_t arg_8h, int32_t arg_ch);\l; var int32_t var_1ah @ ebp-0x1a\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l0x0010edc6      push ebp\l0x0010edc7      mov ebp, esp\l0x0010edc9      push ebx\l0x0010edca      sub esp, 0x24\l0x0010edcd      call sym.__x86.get_pc_thunk.bx\l0x0010edd2      add ebx, 0x1222e\l0x0010edd8      sub esp, 0xc\l0x0010eddb      push dword [arg_8h]\l0x0010edde      call sym.strlen                                        ; size_t strlen(const char *s)\l0x0010ede3      add esp, 0x10\l0x0010ede6      mov dword [var_18h], eax\l0x0010ede9      mov eax, dword [arg_ch]\l0x0010edec      lea edx, [eax + 1]\l0x0010edef      mov dword [arg_ch], edx\l0x0010edf2      mov dword [var_10h], eax\l0x0010edf5      mov eax, dword [var_10h]\l0x0010edf8      mov byte [eax], 0\l0x0010edfb      mov dword [var_ch], 1\l0x0010ee02      mov dword [var_14h], 0\l0x0010ee09      jmp 0x10ee69\l"]
	"0x0010ee0b" [URL="sym.dns_bldq/0x0010ee0b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_bldq @ 0x10ee6f\l0x0010ee0b      cmp dword [var_ch], 0x1f3\l0x0010ee12      jbe 0x10ee1e\l"]
	"0x0010ee14" [URL="sym.dns_bldq/0x0010ee14", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ee14      mov eax, 0xffffffff                                    ; -1\l0x0010ee19      jmp 0x10eec6\l"]
	"0x0010ee1e" [URL="sym.dns_bldq/0x0010ee1e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_bldq @ 0x10ee12\l0x0010ee1e      mov edx, dword [var_14h]\l0x0010ee21      mov eax, dword [arg_8h]\l0x0010ee24      add eax, edx\l0x0010ee26      mov al, byte [eax]\l0x0010ee28      cmp al, 0x2e                                           ; 46\l0x0010ee2a      je 0x10ee51\l"]
	"0x0010ee2c" [URL="sym.dns_bldq/0x0010ee2c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ee2c      mov edx, dword [var_14h]\l0x0010ee2f      mov eax, dword [arg_8h]\l0x0010ee32      lea ecx, [edx + eax]\l0x0010ee35      mov eax, dword [arg_ch]\l0x0010ee38      lea edx, [eax + 1]\l0x0010ee3b      mov dword [arg_ch], edx\l0x0010ee3e      mov dl, byte [ecx]\l0x0010ee40      mov byte [eax], dl\l0x0010ee42      mov eax, dword [var_10h]\l0x0010ee45      mov al, byte [eax]\l0x0010ee47      lea edx, [eax + 1]\l0x0010ee4a      mov eax, dword [var_10h]\l0x0010ee4d      mov byte [eax], dl\l0x0010ee4f      jmp 0x10ee63\l"]
	"0x0010ee51" [URL="sym.dns_bldq/0x0010ee51", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_bldq @ 0x10ee2a\l0x0010ee51      mov eax, dword [arg_ch]\l0x0010ee54      lea edx, [eax + 1]\l0x0010ee57      mov dword [arg_ch], edx\l0x0010ee5a      mov dword [var_10h], eax\l0x0010ee5d      mov eax, dword [var_10h]\l0x0010ee60      mov byte [eax], 0\l"]
	"0x0010ee63" [URL="sym.dns_bldq/0x0010ee63", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_bldq @ 0x10ee4f\l0x0010ee63      inc dword [var_ch]\l0x0010ee66      inc dword [var_14h]\l"]
	"0x0010ee69" [URL="sym.dns_bldq/0x0010ee69", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_bldq @ 0x10ee09\l0x0010ee69      mov eax, dword [var_14h]\l0x0010ee6c      cmp dword [var_18h], eax\l0x0010ee6f      ja 0x10ee0b\l"]
	"0x0010ee71" [URL="sym.dns_bldq/0x0010ee71", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ee71      mov eax, dword [arg_ch]\l0x0010ee74      lea edx, [eax + 1]\l0x0010ee77      mov dword [arg_ch], edx\l0x0010ee7a      mov byte [eax], 0\l0x0010ee7d      inc dword [var_ch]\l0x0010ee80      mov word [var_1ah], 0x100                              ; 256\l0x0010ee86      sub esp, 4\l0x0010ee89      push 2                                                 ; 2\l0x0010ee8b      lea eax, [var_1ah]\l0x0010ee8e      push eax\l0x0010ee8f      push dword [arg_ch]\l0x0010ee92      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010ee97      add esp, 0x10\l0x0010ee9a      add dword [arg_ch], 2\l0x0010ee9e      add dword [var_ch], 2\l0x0010eea2      mov word [var_1ah], 0x100                              ; 256\l0x0010eea8      sub esp, 4\l0x0010eeab      push 2                                                 ; 2\l0x0010eead      lea eax, [var_1ah]\l0x0010eeb0      push eax\l0x0010eeb1      push dword [arg_ch]\l0x0010eeb4      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010eeb9      add esp, 0x10\l0x0010eebc      add dword [var_ch], 2\l0x0010eec0      mov eax, dword [var_ch]\l0x0010eec3      add eax, 0xc                                           ; 12\l"]
	"0x0010eec6" [URL="sym.dns_bldq/0x0010eec6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_bldq @ 0x10ee19\l0x0010eec6      mov ebx, dword [var_4h]\l0x0010eec9      leave\l0x0010eeca      ret\l"]
        "0x0010edc6" -> "0x0010ee69" [color="#0037da"];
        "0x0010ee0b" -> "0x0010ee1e" [color="#13a10e"];
        "0x0010ee0b" -> "0x0010ee14" [color="#c50f1f"];
        "0x0010ee14" -> "0x0010eec6" [color="#0037da"];
        "0x0010ee1e" -> "0x0010ee51" [color="#13a10e"];
        "0x0010ee1e" -> "0x0010ee2c" [color="#c50f1f"];
        "0x0010ee2c" -> "0x0010ee63" [color="#0037da"];
        "0x0010ee51" -> "0x0010ee63" [color="#0037da"];
        "0x0010ee63" -> "0x0010ee69" [color="#0037da"];
        "0x0010ee69" -> "0x0010ee0b" [color="#13a10e"];
        "0x0010ee69" -> "0x0010ee71" [color="#c50f1f"];
        "0x0010ee71" -> "0x0010eec6" [color="#0037da"];
}
