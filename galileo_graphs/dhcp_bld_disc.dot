digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010e42f" [URL="sym.dhcp_bld_disc/0x0010e42f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.getlocalip @ 0x10e6fa\l243: sym.dhcp_bld_disc (int32_t arg_8h);\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l0x0010e42f      push ebp\l0x0010e430      mov ebp, esp\l0x0010e432      sub esp, 0x18\l0x0010e435      call sym.__x86.get_pc_thunk.ax\l0x0010e43a      add eax, 0x12bc6\l0x0010e43f      mov dword [var_ch], 0\l0x0010e446      sub esp, 0xc\l0x0010e449      push dword [arg_8h]\l0x0010e44c      call sym.dhcp_bld_bootp_msg\l0x0010e451      add esp, 0x10\l0x0010e454      mov eax, dword [var_ch]\l0x0010e457      lea edx, [eax + 1]\l0x0010e45a      mov dword [var_ch], edx\l0x0010e45d      mov edx, dword [arg_8h]\l0x0010e460      mov byte [edx + eax + 0xf0], 0x35                      ; '5'\l                                                                       ; [0x35:1]=255 ; 53\l0x0010e468      mov eax, dword [var_ch]\l0x0010e46b      lea edx, [eax + 1]\l0x0010e46e      mov dword [var_ch], edx\l0x0010e471      mov edx, dword [arg_8h]\l0x0010e474      mov byte [edx + eax + 0xf0], 1\l0x0010e47c      mov eax, dword [var_ch]\l0x0010e47f      lea edx, [eax + 1]\l0x0010e482      mov dword [var_ch], edx\l0x0010e485      mov edx, dword [arg_8h]\l0x0010e488      mov byte [edx + eax + 0xf0], 1\l0x0010e490      mov eax, dword [var_ch]\l0x0010e493      lea edx, [eax + 1]\l0x0010e496      mov dword [var_ch], edx\l0x0010e499      mov edx, dword [arg_8h]\l0x0010e49c      mov byte [edx + eax + 0xf0], 0\l0x0010e4a4      mov eax, dword [var_ch]\l0x0010e4a7      lea edx, [eax + 1]\l0x0010e4aa      mov dword [var_ch], edx\l0x0010e4ad      mov edx, dword [arg_8h]\l0x0010e4b0      mov byte [edx + eax + 0xf0], 0x37                      ; '7'\l                                                                       ; [0x37:1]=255 ; 55\l0x0010e4b8      mov eax, dword [var_ch]\l0x0010e4bb      lea edx, [eax + 1]\l0x0010e4be      mov dword [var_ch], edx\l0x0010e4c1      mov edx, dword [arg_8h]\l0x0010e4c4      mov byte [edx + eax + 0xf0], 2\l0x0010e4cc      mov eax, dword [var_ch]\l0x0010e4cf      lea edx, [eax + 1]\l0x0010e4d2      mov dword [var_ch], edx\l0x0010e4d5      mov edx, dword [arg_8h]\l0x0010e4d8      mov byte [edx + eax + 0xf0], 1\l0x0010e4e0      mov eax, dword [var_ch]\l0x0010e4e3      lea edx, [eax + 1]\l0x0010e4e6      mov dword [var_ch], edx\l0x0010e4e9      mov edx, dword [arg_8h]\l0x0010e4ec      mov byte [edx + eax + 0xf0], 3\l0x0010e4f4      mov eax, dword [var_ch]\l0x0010e4f7      lea edx, [eax + 1]\l0x0010e4fa      mov dword [var_ch], edx\l0x0010e4fd      mov edx, dword [arg_8h]\l0x0010e500      mov byte [edx + eax + 0xf0], 0xff                      ; [0xff:1]=255 ; 255\l0x0010e508      mov eax, dword [var_ch]\l0x0010e50b      lea edx, [eax + 0xf0]\l0x0010e511      mov eax, dword [arg_8h]\l0x0010e514      add eax, edx\l0x0010e516      mov edx, eax\l0x0010e518      mov eax, dword [arg_8h]\l0x0010e51b      sub edx, eax\l0x0010e51d      mov eax, edx\l0x0010e51f      inc eax\l0x0010e520      leave\l0x0010e521      ret\l"]
}
