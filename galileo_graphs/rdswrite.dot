digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010af9a" [URL="sym.rdswrite/0x0010af9a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="494: sym.rdswrite (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h);\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_dh @ ebp-0xd\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; var int32_t var_38h @ esp+0x4\l; var int32_t var_34h @ esp+0x8\l0x0010af9a      push ebp\l0x0010af9b      mov ebp, esp\l0x0010af9d      sub esp, 0x38\l0x0010afa0      mov eax, dword [arg_8h]\l0x0010afa3      mov edx, dword [eax + 4]\l0x0010afa6      mov eax, edx\l0x0010afa8      shl eax, 2\l0x0010afab      add eax, edx\l0x0010afad      lea edx, [eax*8]\l0x0010afb4      sub edx, eax\l0x0010afb6      lea eax, [edx*4]\l0x0010afbd      mov edx, eax\l0x0010afbf      lea eax, [edx + obj.rdstab]                            ; 0x1256a0\l0x0010afc5      mov dword [var_14h], eax\l0x0010afc8      mov eax, dword [var_14h]\l0x0010afcb      mov eax, dword [eax]\l0x0010afcd      cmp eax, 1                                             ; 1\l0x0010afd0      je 0x10afdc\l"]
	"0x0010afd2" [URL="sym.rdswrite/0x0010afd2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010afd2      mov eax, 0xffffffff                                    ; -1\l0x0010afd7      jmp 0x10b186\l"]
	"0x0010afdc" [URL="sym.rdswrite/0x0010afdc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdswrite @ 0x10afd0\l0x0010afdc      mov eax, dword [var_14h]\l0x0010afdf      mov al, byte [eax + 0x70]\l0x0010afe2      test al, al\l0x0010afe4      jne 0x10affb\l"]
	"0x0010afe6" [URL="sym.rdswrite/0x0010afe6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010afe6      mov eax, dword [var_14h]\l0x0010afe9      mov byte [eax + 0x70], 1\l0x0010afed      mov eax, dword [var_14h]\l0x0010aff0      mov eax, dword [eax + 0x6c]\l0x0010aff3      mov dword [esp], eax\l0x0010aff6      call sym.resume\l"]
	"0x0010affb" [URL="sym.rdswrite/0x0010affb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdswrite @ 0x10afe4\l0x0010affb      mov eax, dword [var_14h]\l0x0010affe      mov eax, dword [eax + 0x48]\l0x0010b001      mov dword [var_ch], eax\l0x0010b004      jmp 0x10b04d\l"]
	"0x0010b006" [URL="sym.rdswrite/0x0010b006", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdswrite @ 0x10b056\l0x0010b006      mov eax, dword [var_ch]\l0x0010b009      mov edx, dword [eax + 0x10]\l0x0010b00c      mov eax, dword [arg_10h]\l0x0010b00f      cmp edx, eax\l0x0010b011      jne 0x10b045\l"]
	"0x0010b013" [URL="sym.rdswrite/0x0010b013", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010b013      mov eax, dword [var_ch]\l0x0010b016      mov eax, dword [eax + 8]\l0x0010b019      cmp eax, 2                                             ; 2\l0x0010b01c      jne 0x10b045\l"]
	"0x0010b01e" [URL="sym.rdswrite/0x0010b01e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010b01e      mov eax, dword [var_ch]\l0x0010b021      lea edx, [eax + 0x1c]\l0x0010b024      mov dword [var_34h], 0x200                             ; [0x200:4]=-1 ; 512\l0x0010b02c      mov eax, dword [arg_ch]\l0x0010b02f      mov dword [var_38h], eax\l0x0010b033      mov dword [esp], edx\l0x0010b036      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010b03b      mov eax, 1\l0x0010b040      jmp 0x10b186\l"]
	"0x0010b045" [URL="sym.rdswrite/0x0010b045", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.rdswrite @ 0x10b011, 0x10b01c\l0x0010b045      mov eax, dword [var_ch]\l0x0010b048      mov eax, dword [eax]\l0x0010b04a      mov dword [var_ch], eax\l"]
	"0x0010b04d" [URL="sym.rdswrite/0x0010b04d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdswrite @ 0x10b004\l0x0010b04d      mov eax, dword [var_14h]\l0x0010b050      add eax, 0x50                                          ; 80\l0x0010b053      cmp eax, dword [var_ch]\l0x0010b056      jne 0x10b006\l"]
	"0x0010b058" [URL="sym.rdswrite/0x0010b058", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010b058      mov eax, dword [var_14h]\l0x0010b05b      mov eax, dword [eax + 0x58]\l0x0010b05e      mov dword [var_ch], eax\l0x0010b061      mov byte [var_dh], 0\l0x0010b065      jmp 0x10b0d8\l"]
	"0x0010b067" [URL="sym.rdswrite/0x0010b067", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdswrite @ 0x10b0e1\l0x0010b067      mov eax, dword [var_ch]\l0x0010b06a      mov edx, dword [eax + 0x10]\l0x0010b06d      mov eax, dword [arg_10h]\l0x0010b070      cmp edx, eax\l0x0010b072      jne 0x10b0d0\l"]
	"0x0010b074" [URL="sym.rdswrite/0x0010b074", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010b074      mov eax, dword [var_ch]\l0x0010b077      mov eax, dword [eax + 0xc]\l0x0010b07a      test eax, eax\l0x0010b07c      jg 0x10b0ce\l"]
	"0x0010b07e" [URL="sym.rdswrite/0x0010b07e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010b07e      mov eax, dword [var_ch]\l0x0010b081      mov eax, dword [eax + 4]\l0x0010b084      mov dword [var_18h], eax\l0x0010b087      mov eax, dword [var_ch]\l0x0010b08a      mov eax, dword [eax]\l0x0010b08c      mov dword [var_1ch], eax\l0x0010b08f      mov eax, dword [var_ch]\l0x0010b092      mov edx, dword [eax]\l0x0010b094      mov eax, dword [var_18h]\l0x0010b097      mov dword [eax], edx\l0x0010b099      mov eax, dword [var_ch]\l0x0010b09c      mov edx, dword [eax + 4]\l0x0010b09f      mov eax, dword [var_1ch]\l0x0010b0a2      mov dword [eax + 4], edx\l0x0010b0a5      mov eax, dword [var_14h]\l0x0010b0a8      mov eax, dword [eax + 0x74]\l0x0010b0ab      mov dword [esp], eax\l0x0010b0ae      call sym.semcount\l0x0010b0b3      lea edx, [eax - 1]\l0x0010b0b6      mov eax, dword [var_14h]\l0x0010b0b9      mov eax, dword [eax + 0x74]\l0x0010b0bc      mov dword [var_38h], edx\l0x0010b0c0      mov dword [esp], eax\l0x0010b0c3      call sym.semreset\l0x0010b0c8      mov byte [var_dh], 1\l0x0010b0cc      jmp 0x10b0e3\l"]
	"0x0010b0ce" [URL="sym.rdswrite/0x0010b0ce", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdswrite @ 0x10b07c\l0x0010b0ce      jmp 0x10b0e3\l"]
	"0x0010b0d0" [URL="sym.rdswrite/0x0010b0d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdswrite @ 0x10b072\l0x0010b0d0      mov eax, dword [var_ch]\l0x0010b0d3      mov eax, dword [eax]\l0x0010b0d5      mov dword [var_ch], eax\l"]
	"0x0010b0d8" [URL="sym.rdswrite/0x0010b0d8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdswrite @ 0x10b065\l0x0010b0d8      mov eax, dword [var_14h]\l0x0010b0db      add eax, 0x60                                          ; 96\l0x0010b0de      cmp eax, dword [var_ch]\l0x0010b0e1      jne 0x10b067\l"]
	"0x0010b0e3" [URL="sym.rdswrite/0x0010b0e3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.rdswrite @ 0x10b0cc, 0x10b0ce\l0x0010b0e3      cmp byte [var_dh], 0\l0x0010b0e7      jne 0x10b0f7\l"]
	"0x0010b0e9" [URL="sym.rdswrite/0x0010b0e9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010b0e9      mov eax, dword [var_14h]\l0x0010b0ec      mov dword [esp], eax\l0x0010b0ef      call sym.rdsbufalloc\l0x0010b0f4      mov dword [var_ch], eax\l"]
	"0x0010b0f7" [URL="sym.rdswrite/0x0010b0f7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.rdswrite @ 0x10b0e7\l0x0010b0f7      mov eax, dword [var_ch]\l0x0010b0fa      lea edx, [eax + 0x1c]\l0x0010b0fd      mov dword [var_34h], 0x200                             ; [0x200:4]=-1 ; 512\l0x0010b105      mov eax, dword [arg_ch]\l0x0010b108      mov dword [var_38h], eax\l0x0010b10c      mov dword [esp], edx\l0x0010b10f      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010b114      mov eax, dword [var_ch]\l0x0010b117      mov dword [eax + 8], 2\l0x0010b11e      mov eax, dword [var_ch]\l0x0010b121      mov dword [eax + 0xc], 0\l0x0010b128      mov edx, dword [arg_10h]\l0x0010b12b      mov eax, dword [var_ch]\l0x0010b12e      mov dword [eax + 0x10], edx\l0x0010b131      mov eax, dword [var_ch]\l0x0010b134      mov dword [eax + 0x14], 0\l0x0010b13b      call sym.getpid                                        ; int getpid(void)\l0x0010b140      mov edx, dword [var_ch]\l0x0010b143      mov dword [edx + 0x18], eax\l0x0010b146      mov eax, dword [var_14h]\l0x0010b149      mov eax, dword [eax + 0x54]\l0x0010b14c      mov dword [var_18h], eax\l0x0010b14f      mov eax, dword [var_14h]\l0x0010b152      mov edx, dword [var_ch]\l0x0010b155      mov dword [eax + 0x54], edx\l0x0010b158      mov eax, dword [var_18h]\l0x0010b15b      mov edx, dword [eax]\l0x0010b15d      mov eax, dword [var_ch]\l0x0010b160      mov dword [eax], edx\l0x0010b162      mov eax, dword [var_ch]\l0x0010b165      mov edx, dword [var_18h]\l0x0010b168      mov dword [eax + 4], edx\l0x0010b16b      mov eax, dword [var_18h]\l0x0010b16e      mov edx, dword [var_ch]\l0x0010b171      mov dword [eax], edx\l0x0010b173      mov eax, dword [var_14h]\l0x0010b176      mov eax, dword [eax + 0x78]\l0x0010b179      mov dword [esp], eax\l0x0010b17c      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010b181      mov eax, 1\l"]
	"0x0010b186" [URL="sym.rdswrite/0x0010b186", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.rdswrite @ 0x10afd7, 0x10b040\l0x0010b186      leave\l0x0010b187      ret\l"]
        "0x0010af9a" -> "0x0010afdc" [color="#13a10e"];
        "0x0010af9a" -> "0x0010afd2" [color="#c50f1f"];
        "0x0010afd2" -> "0x0010b186" [color="#0037da"];
        "0x0010afdc" -> "0x0010affb" [color="#13a10e"];
        "0x0010afdc" -> "0x0010afe6" [color="#c50f1f"];
        "0x0010afe6" -> "0x0010affb" [color="#0037da"];
        "0x0010affb" -> "0x0010b04d" [color="#0037da"];
        "0x0010b006" -> "0x0010b045" [color="#13a10e"];
        "0x0010b006" -> "0x0010b013" [color="#c50f1f"];
        "0x0010b013" -> "0x0010b045" [color="#13a10e"];
        "0x0010b013" -> "0x0010b01e" [color="#c50f1f"];
        "0x0010b01e" -> "0x0010b186" [color="#0037da"];
        "0x0010b045" -> "0x0010b04d" [color="#0037da"];
        "0x0010b04d" -> "0x0010b006" [color="#13a10e"];
        "0x0010b04d" -> "0x0010b058" [color="#c50f1f"];
        "0x0010b058" -> "0x0010b0d8" [color="#0037da"];
        "0x0010b067" -> "0x0010b0d0" [color="#13a10e"];
        "0x0010b067" -> "0x0010b074" [color="#c50f1f"];
        "0x0010b074" -> "0x0010b0ce" [color="#13a10e"];
        "0x0010b074" -> "0x0010b07e" [color="#c50f1f"];
        "0x0010b07e" -> "0x0010b0e3" [color="#0037da"];
        "0x0010b0ce" -> "0x0010b0e3" [color="#0037da"];
        "0x0010b0d0" -> "0x0010b0d8" [color="#0037da"];
        "0x0010b0d8" -> "0x0010b067" [color="#13a10e"];
        "0x0010b0d8" -> "0x0010b0e3" [color="#c50f1f"];
        "0x0010b0e3" -> "0x0010b0f7" [color="#13a10e"];
        "0x0010b0e3" -> "0x0010b0e9" [color="#c50f1f"];
        "0x0010b0e9" -> "0x0010b0f7" [color="#0037da"];
        "0x0010b0f7" -> "0x0010b186" [color="#0037da"];
}
