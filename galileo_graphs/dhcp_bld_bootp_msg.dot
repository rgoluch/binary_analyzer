digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010e308" [URL="sym.dhcp_bld_bootp_msg/0x0010e308", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.dhcp_bld_disc @ 0x10e44c\l  ; CALL XREF from sym.dhcp_bld_req @ 0x10e541\l295: sym.dhcp_bld_bootp_msg (int32_t arg_8h);\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l0x0010e308      push ebp\l0x0010e309      mov ebp, esp\l0x0010e30b      push ebx\l0x0010e30c      sub esp, 0x14\l0x0010e30f      call sym.__x86.get_pc_thunk.bx\l0x0010e314      add ebx, 0x12cec\l0x0010e31a      sub esp, 4\l0x0010e31d      push 4                                                 ; 4\l0x0010e31f      mov eax, obj.NetData                                   ; 0x140200\l0x0010e325      lea eax, [eax + 0x21]\l0x0010e328      push eax\l0x0010e329      lea eax, [var_ch]\l0x0010e32c      push eax\l0x0010e32d      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010e332      add esp, 0x10\l0x0010e335      sub esp, 4\l0x0010e338      push 0x4f0                                             ; 1264\l0x0010e33d      push 0\l0x0010e33f      push dword [arg_8h]\l0x0010e342      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x0010e347      add esp, 0x10\l0x0010e34a      mov eax, dword [arg_8h]\l0x0010e34d      mov byte [eax], 1\l0x0010e350      mov eax, dword [arg_8h]\l0x0010e353      mov byte [eax + 1], 1\l0x0010e357      mov eax, dword [arg_8h]\l0x0010e35a      mov byte [eax + 2], 6\l0x0010e35e      mov eax, dword [arg_8h]\l0x0010e361      mov byte [eax + 3], 0\l0x0010e365      mov eax, dword [var_ch]\l0x0010e368      shr eax, 0x18\l0x0010e36b      mov edx, eax\l0x0010e36d      mov eax, dword [var_ch]\l0x0010e370      shr eax, 8\l0x0010e373      and eax, 0xff00\l0x0010e378      or edx, eax\l0x0010e37a      mov eax, dword [var_ch]\l0x0010e37d      shl eax, 8\l0x0010e380      and eax, 0xff0000\l0x0010e385      or edx, eax\l0x0010e387      mov eax, dword [var_ch]\l0x0010e38a      shl eax, 0x18\l0x0010e38d      or edx, eax\l0x0010e38f      mov eax, dword [arg_8h]\l0x0010e392      mov dword [eax + 4], edx\l0x0010e395      mov eax, dword [arg_8h]\l0x0010e398      mov word [eax + 8], 0\l0x0010e39e      mov eax, dword [arg_8h]\l0x0010e3a1      mov word [eax + 0xa], 0\l0x0010e3a7      mov eax, dword [arg_8h]\l0x0010e3aa      mov dword [eax + 0xc], 0\l0x0010e3b1      mov eax, dword [arg_8h]\l0x0010e3b4      mov dword [eax + 0x10], 0\l0x0010e3bb      mov eax, dword [arg_8h]\l0x0010e3be      mov dword [eax + 0x14], 0\l0x0010e3c5      mov eax, dword [arg_8h]\l0x0010e3c8      mov dword [eax + 0x18], 0\l0x0010e3cf      mov eax, dword [arg_8h]\l0x0010e3d2      add eax, 0x1c                                          ; 28\l0x0010e3d5      sub esp, 4\l0x0010e3d8      push 0x10                                              ; 16\l0x0010e3da      push 0\l0x0010e3dc      push eax\l0x0010e3dd      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x0010e3e2      add esp, 0x10\l0x0010e3e5      mov eax, dword [arg_8h]\l0x0010e3e8      lea edx, [eax + 0x1c]\l0x0010e3eb      sub esp, 4\l0x0010e3ee      push 6                                                 ; 6\l0x0010e3f0      mov eax, obj.NetData                                   ; 0x140200\l0x0010e3f6      lea eax, [eax + 0x21]\l0x0010e3f9      push eax\l0x0010e3fa      push edx\l0x0010e3fb      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010e400      add esp, 0x10\l0x0010e403      mov eax, dword [arg_8h]\l0x0010e406      add eax, 0x2c                                          ; 44\l0x0010e409      sub esp, 4\l0x0010e40c      push 0xc0                                              ; 192\l0x0010e411      push 0\l0x0010e413      push eax\l0x0010e414      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x0010e419      add esp, 0x10\l0x0010e41c      mov eax, dword [arg_8h]\l0x0010e41f      mov dword [eax + 0xec], 0x63538263                     ; [0x63538263:4]=-1\l0x0010e429      nop\l0x0010e42a      mov ebx, dword [var_4h]\l0x0010e42d      leave\l0x0010e42e      ret\l"]
}
