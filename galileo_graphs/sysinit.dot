digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00102393" [URL="sym.sysinit/0x00102393", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.nulluser @ 0x102167\l416: sym.sysinit ();\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l0x00102393      push ebp\l0x00102394      mov ebp, esp\l0x00102396      push ebx\l0x00102397      sub esp, 0x14\l0x0010239a      call sym.__x86.get_pc_thunk.bx\l0x0010239f      add ebx, 0x1ec61\l0x001023a5      call sym.platinit\l0x001023aa      sub esp, 0xc\l0x001023ad      lea eax, [ebx - 0x8d4f]\l0x001023b3      push eax\l0x001023b4      call sym.kprintf\l0x001023b9      add esp, 0x10\l0x001023bc      sub esp, 8\l0x001023bf      lea eax, [ebx - 0x8d40]\l0x001023c5      push eax\l0x001023c6      lea eax, [ebx - 0x8cf9]\l0x001023cc      push eax\l0x001023cd      call sym.kprintf\l0x001023d2      add esp, 0x10\l0x001023d5      call sym.initevec\l0x001023da      call sym.meminit\l0x001023df      mov eax, obj.prcount                                   ; 0x1228c0\l0x001023e5      mov dword [eax], 1\l0x001023eb      mov eax, obj.Defer                                     ; 0x123a64\l0x001023f1      mov dword [eax], 0\l0x001023f7      mov dword [var_ch], 0\l0x001023fe      jmp 0x10243d\l"]
	"0x00102400" [URL="sym.sysinit/0x00102400", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.sysinit @ 0x102441\l0x00102400      mov edx, dword [var_ch]\l0x00102403      mov eax, edx\l0x00102405      shl eax, 3\l0x00102408      sub eax, edx\l0x0010240a      shl eax, 3\l0x0010240d      mov edx, obj.proctab                                   ; 0x1212e0\l0x00102413      add eax, edx\l0x00102415      mov dword [var_10h], eax\l0x00102418      mov eax, dword [var_10h]\l0x0010241b      mov word [eax], 0\l0x00102420      mov eax, dword [var_10h]\l0x00102423      mov byte [eax + 0x10], 0\l0x00102427      mov eax, dword [var_10h]\l0x0010242a      mov dword [eax + 8], 0\l0x00102431      mov eax, dword [var_10h]\l0x00102434      mov word [eax + 2], 0\l0x0010243a      inc dword [var_ch]\l"]
	"0x0010243d" [URL="sym.sysinit/0x0010243d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.sysinit @ 0x1023fe\l0x0010243d      cmp dword [var_ch], 0x63\l0x00102441      jle 0x102400\l"]
	"0x00102443" [URL="sym.sysinit/0x00102443", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00102443      mov eax, obj.proctab                                   ; 0x1212e0\l0x00102449      mov dword [var_10h], eax\l0x0010244c      mov eax, dword [var_10h]\l0x0010244f      mov word [eax], 1\l0x00102454      mov eax, dword [var_10h]\l0x00102457      mov word [eax + 2], 0\l0x0010245d      mov eax, dword [var_10h]\l0x00102460      lea edx, [eax + 0x10]\l0x00102463      sub esp, 4\l0x00102466      push 7                                                 ; 7\l0x00102468      lea eax, [ebx - 0x8cf3]\l0x0010246e      push eax\l0x0010246f      push edx\l0x00102470      call sym.strncpy                                       ; char *strncpy(char *dest, const char *src, size_t  n)\l0x00102475      add esp, 0x10\l0x00102478      sub esp, 0xc\l0x0010247b      push 0x2000\l0x00102480      call sym.getstk\l0x00102485      add esp, 0x10\l0x00102488      mov edx, eax\l0x0010248a      mov eax, dword [var_10h]\l0x0010248d      mov dword [eax + 8], edx\l0x00102490      mov eax, dword [var_10h]\l0x00102493      mov dword [eax + 0xc], 0x2000                          ; [0x2000:4]=-1\l0x0010249a      mov eax, dword [var_10h]\l0x0010249d      mov dword [eax + 4], 0\l0x001024a4      mov eax, obj.currpid                                   ; 0x1212c0\l0x001024aa      mov dword [eax], 0\l0x001024b0      mov dword [var_ch], 0\l0x001024b7      jmp 0x1024ef\l"]
	"0x001024b9" [URL="sym.sysinit/0x001024b9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.sysinit @ 0x1024f3\l0x001024b9      mov edx, dword [var_ch]\l0x001024bc      mov eax, edx\l0x001024be      add eax, eax\l0x001024c0      add eax, edx\l0x001024c2      shl eax, 2\l0x001024c5      mov edx, obj.semtab                                    ; 0x1228e0\l0x001024cb      add eax, edx\l0x001024cd      mov dword [var_14h], eax\l0x001024d0      mov eax, dword [var_14h]\l0x001024d3      mov byte [eax], 0\l0x001024d6      mov eax, dword [var_14h]\l0x001024d9      mov dword [eax + 4], 0\l0x001024e0      call sym.newqueue\l0x001024e5      mov edx, dword [var_14h]\l0x001024e8      mov word [edx + 8], ax\l0x001024ec      inc dword [var_ch]\l"]
	"0x001024ef" [URL="sym.sysinit/0x001024ef", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.sysinit @ 0x1024b7\l0x001024ef      cmp dword [var_ch], 0x63\l0x001024f3      jle 0x1024b9\l"]
	"0x001024f5" [URL="sym.sysinit/0x001024f5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001024f5      call sym.bufinit\l0x001024fa      call sym.newqueue\l0x001024ff      mov edx, obj.readylist                                 ; 0x123a60\l0x00102505      mov word [edx], ax\l0x00102508      call sym.clkinit\l0x0010250d      mov dword [var_ch], 0\l0x00102514      jmp 0x102527\l"]
	"0x00102516" [URL="sym.sysinit/0x00102516", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.sysinit @ 0x10252b\l0x00102516      sub esp, 0xc\l0x00102519      push dword [var_ch]\l0x0010251c      call sym.init\l0x00102521      add esp, 0x10\l0x00102524      inc dword [var_ch]\l"]
	"0x00102527" [URL="sym.sysinit/0x00102527", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.sysinit @ 0x102514\l0x00102527      cmp dword [var_ch], 0x17\l0x0010252b      jle 0x102516\l"]
	"0x0010252d" [URL="sym.sysinit/0x0010252d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010252d      nop\l0x0010252e      mov ebx, dword [var_4h]\l0x00102531      leave\l0x00102532      ret\l"]
        "0x00102393" -> "0x0010243d" [color="#0037da"];
        "0x00102400" -> "0x0010243d" [color="#0037da"];
        "0x0010243d" -> "0x00102400" [color="#13a10e"];
        "0x0010243d" -> "0x00102443" [color="#c50f1f"];
        "0x00102443" -> "0x001024ef" [color="#0037da"];
        "0x001024b9" -> "0x001024ef" [color="#0037da"];
        "0x001024ef" -> "0x001024b9" [color="#13a10e"];
        "0x001024ef" -> "0x001024f5" [color="#c50f1f"];
        "0x001024f5" -> "0x00102527" [color="#0037da"];
        "0x00102516" -> "0x00102527" [color="#0037da"];
        "0x00102527" -> "0x00102516" [color="#13a10e"];
        "0x00102527" -> "0x0010252d" [color="#c50f1f"];
}
