digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00111c6b" [URL="sym.pdumph/0x00111c6b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="1892: sym.pdumph (int32_t arg_8h);\l; var int32_t var_3ch @ ebp-0x3c\l; var int32_t var_38h @ ebp-0x38\l; var int32_t var_34h @ ebp-0x34\l; var int32_t var_30h @ ebp-0x30\l; var int32_t var_2ch @ ebp-0x2c\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l0x00111c6b      push ebp\l0x00111c6c      mov ebp, esp\l0x00111c6e      push edi\l0x00111c6f      push esi\l0x00111c70      push ebx\l0x00111c71      sub esp, 0x3c\l0x00111c74      call sym.__x86.get_pc_thunk.si\l0x00111c79      add esi, 0xf387\l0x00111c7f      mov eax, dword [arg_8h]\l0x00111c82      mov al, byte [eax + 0xb]\l0x00111c85      mov edi, eax\l0x00111c87      and edi, 0xff                                          ; 255\l0x00111c8d      mov dword [var_2ch], edi\l0x00111c90      mov eax, dword [arg_8h]\l0x00111c93      mov al, byte [eax + 0xa]\l0x00111c96      mov edi, eax\l0x00111c98      and edi, 0xff                                          ; 255\l0x00111c9e      mov eax, dword [arg_8h]\l0x00111ca1      mov al, byte [eax + 9]\l0x00111ca4      xor ebx, ebx\l0x00111ca6      mov bl, al\l0x00111ca8      mov eax, dword [arg_8h]\l0x00111cab      mov al, byte [eax + 8]\l0x00111cae      xor ecx, ecx\l0x00111cb0      mov cl, al\l0x00111cb2      mov eax, dword [arg_8h]\l0x00111cb5      mov al, byte [eax + 7]\l0x00111cb8      xor edx, edx\l0x00111cba      mov dl, al\l0x00111cbc      mov eax, dword [arg_8h]\l0x00111cbf      mov al, byte [eax + 6]\l0x00111cc2      and eax, 0xff                                          ; 255\l0x00111cc7      sub esp, 4\l0x00111cca      push dword [var_2ch]\l0x00111ccd      push edi\l0x00111cce      push ebx\l0x00111ccf      push ecx\l0x00111cd0      push edx\l0x00111cd1      push eax\l0x00111cd2      lea eax, [esi - 0x7ea0]\l0x00111cd8      push eax\l0x00111cd9      mov ebx, esi\l0x00111cdb      call sym.kprintf\l0x00111ce0      add esp, 0x20\l0x00111ce3      mov eax, dword [arg_8h]\l0x00111ce6      mov al, byte [eax + 5]\l0x00111ce9      mov edi, eax\l0x00111ceb      and edi, 0xff                                          ; 255\l0x00111cf1      mov dword [var_2ch], edi\l0x00111cf4      mov eax, dword [arg_8h]\l0x00111cf7      mov al, byte [eax + 4]\l0x00111cfa      mov cl, al\l0x00111cfc      and ecx, 0xff                                          ; 255\l0x00111d02      mov edi, ecx\l0x00111d04      mov eax, dword [arg_8h]\l0x00111d07      mov al, byte [eax + 3]\l0x00111d0a      xor ebx, ebx\l0x00111d0c      mov bl, al\l0x00111d0e      mov eax, dword [arg_8h]\l0x00111d11      mov al, byte [eax + 2]\l0x00111d14      xor ecx, ecx\l0x00111d16      mov cl, al\l0x00111d18      mov eax, dword [arg_8h]\l0x00111d1b      mov al, byte [eax + 1]\l0x00111d1e      xor edx, edx\l0x00111d20      mov dl, al\l0x00111d22      mov eax, dword [arg_8h]\l0x00111d25      mov al, byte [eax]\l0x00111d27      and eax, 0xff                                          ; 255\l0x00111d2c      sub esp, 4\l0x00111d2f      push dword [var_2ch]\l0x00111d32      push edi\l0x00111d33      push ebx\l0x00111d34      push ecx\l0x00111d35      push edx\l0x00111d36      push eax\l0x00111d37      lea eax, [esi - 0x7e80]\l0x00111d3d      push eax\l0x00111d3e      mov ebx, esi\l0x00111d40      call sym.kprintf\l0x00111d45      add esp, 0x20\l0x00111d48      sub esp, 0xc\l0x00111d4b      lea eax, [esi - 0x7e5f]\l0x00111d51      push eax\l0x00111d52      mov ebx, esi\l0x00111d54      call sym.kprintf\l0x00111d59      add esp, 0x10\l0x00111d5c      mov eax, dword [arg_8h]\l0x00111d5f      mov ax, word [eax + 0xc]\l0x00111d63      and eax, 0xffff\l0x00111d68      cmp eax, 0x800                                         ; 2048\l0x00111d6d      je 0x111f7f\l"]
	"0x00111d73" [URL="sym.pdumph/0x00111d73", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00111d73      cmp eax, 0x806                                         ; 2054\l0x00111d78      jne 0x1123a8\l"]
	"0x00111d7e" [URL="sym.pdumph/0x00111d7e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00111d7e      mov eax, dword [arg_8h]\l0x00111d81      mov ax, word [eax + 0xc]\l0x00111d85      and eax, 0xffff\l0x00111d8a      sub esp, 4\l0x00111d8d      push 0x2a                                              ; '*' ; 42\l0x00111d8f      push eax\l0x00111d90      lea eax, [esi - 0x7e54]\l0x00111d96      push eax\l0x00111d97      mov ebx, esi\l0x00111d99      call sym.kprintf\l0x00111d9e      add esp, 0x10\l0x00111da1      mov eax, dword [arg_8h]\l0x00111da4      mov dword [var_1ch], eax\l0x00111da7      mov eax, dword [var_1ch]\l0x00111daa      mov ax, word [eax + 0xe]\l0x00111dae      cmp ax, 1                                              ; 1\l0x00111db2      jne 0x1123c6\l"]
	"0x00111db8" [URL="sym.pdumph/0x00111db8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00111db8      mov eax, dword [var_1ch]\l0x00111dbb      mov ax, word [eax + 0x10]\l0x00111dbf      cmp ax, 0x800                                          ; 2048\l0x00111dc3      jne 0x1123c6\l"]
	"0x00111dc9" [URL="sym.pdumph/0x00111dc9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00111dc9      mov eax, dword [var_1ch]\l0x00111dcc      mov al, byte [eax + 0x13]\l0x00111dcf      xor edx, edx\l0x00111dd1      mov dl, al\l0x00111dd3      mov eax, dword [var_1ch]\l0x00111dd6      mov al, byte [eax + 0x12]\l0x00111dd9      and eax, 0xff                                          ; 255\l0x00111dde      sub esp, 4\l0x00111de1      push edx\l0x00111de2      push eax\l0x00111de3      lea eax, [esi - 0x7e38]\l0x00111de9      push eax\l0x00111dea      mov ebx, esi\l0x00111dec      call sym.kprintf\l0x00111df1      add esp, 0x10\l0x00111df4      mov eax, dword [var_1ch]\l0x00111df7      mov ax, word [eax + 0x14]\l0x00111dfb      cmp ax, 1                                              ; 1\l0x00111dff      jne 0x111e9b\l"]
	"0x00111e05" [URL="sym.pdumph/0x00111e05", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00111e05      mov eax, dword [var_1ch]\l0x00111e08      mov eax, dword [eax + 0x1c]\l0x00111e0b      xor ebx, ebx\l0x00111e0d      mov bl, al\l0x00111e0f      mov eax, dword [var_1ch]\l0x00111e12      mov eax, dword [eax + 0x1c]\l0x00111e15      shr eax, 8\l0x00111e18      mov edi, eax\l0x00111e1a      and edi, 0xff                                          ; 255\l0x00111e20      mov eax, dword [var_1ch]\l0x00111e23      mov eax, dword [eax + 0x1c]\l0x00111e26      shr eax, 0x10\l0x00111e29      mov cl, al\l0x00111e2b      and ecx, 0xff                                          ; 255\l0x00111e31      mov dword [var_2ch], ecx\l0x00111e34      mov eax, dword [var_1ch]\l0x00111e37      mov eax, dword [eax + 0x1c]\l0x00111e3a      shr eax, 0x18\l0x00111e3d      mov dword [var_30h], eax\l0x00111e40      mov eax, dword [var_1ch]\l0x00111e43      mov eax, dword [eax + 0x26]\l0x00111e46      mov dl, al\l0x00111e48      and edx, 0xff                                          ; 255\l0x00111e4e      mov dword [var_34h], edx\l0x00111e51      mov eax, dword [var_1ch]\l0x00111e54      mov eax, dword [eax + 0x26]\l0x00111e57      shr eax, 8\l0x00111e5a      xor ecx, ecx\l0x00111e5c      mov cl, al\l0x00111e5e      mov eax, dword [var_1ch]\l0x00111e61      mov eax, dword [eax + 0x26]\l0x00111e64      shr eax, 0x10\l0x00111e67      xor edx, edx\l0x00111e69      mov dl, al\l0x00111e6b      mov eax, dword [var_1ch]\l0x00111e6e      mov eax, dword [eax + 0x26]\l0x00111e71      shr eax, 0x18\l0x00111e74      sub esp, 0xc\l0x00111e77      push ebx\l0x00111e78      push edi\l0x00111e79      push dword [var_2ch]\l0x00111e7c      push dword [var_30h]\l0x00111e7f      push dword [var_34h]\l0x00111e82      push ecx\l0x00111e83      push edx\l0x00111e84      push eax\l0x00111e85      lea eax, [esi - 0x7e10]\l0x00111e8b      push eax\l0x00111e8c      mov ebx, esi\l0x00111e8e      call sym.kprintf\l0x00111e93      add esp, 0x30\l0x00111e96      jmp 0x111f64\l"]
	"0x00111e9b" [URL="sym.pdumph/0x00111e9b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x111dff\l0x00111e9b      mov eax, dword [var_1ch]\l0x00111e9e      mov ax, word [eax + 0x14]\l0x00111ea2      cmp ax, 2                                              ; 2\l0x00111ea6      jne 0x1123be\l"]
	"0x00111eac" [URL="sym.pdumph/0x00111eac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00111eac      mov eax, dword [var_1ch]\l0x00111eaf      mov al, byte [eax + 0x1b]\l0x00111eb2      mov edi, eax\l0x00111eb4      and edi, 0xff                                          ; 255\l0x00111eba      mov eax, dword [var_1ch]\l0x00111ebd      mov al, byte [eax + 0x1a]\l0x00111ec0      mov cl, al\l0x00111ec2      and ecx, 0xff                                          ; 255\l0x00111ec8      mov dword [var_2ch], ecx\l0x00111ecb      mov eax, dword [var_1ch]\l0x00111ece      mov al, byte [eax + 0x19]\l0x00111ed1      mov dl, al\l0x00111ed3      and edx, 0xff                                          ; 255\l0x00111ed9      mov dword [var_30h], edx\l0x00111edc      mov eax, dword [var_1ch]\l0x00111edf      mov al, byte [eax + 0x18]\l0x00111ee2      mov bl, al\l0x00111ee4      and ebx, 0xff                                          ; 255\l0x00111eea      mov dword [var_34h], ebx\l0x00111eed      mov eax, dword [var_1ch]\l0x00111ef0      mov al, byte [eax + 0x17]\l0x00111ef3      mov cl, al\l0x00111ef5      and ecx, 0xff                                          ; 255\l0x00111efb      mov dword [var_38h], ecx\l0x00111efe      mov eax, dword [var_1ch]\l0x00111f01      mov al, byte [eax + 0x16]\l0x00111f04      mov dl, al\l0x00111f06      and edx, 0xff                                          ; 255\l0x00111f0c      mov dword [var_3ch], edx\l0x00111f0f      mov eax, dword [var_1ch]\l0x00111f12      mov eax, dword [eax + 0x1c]\l0x00111f15      xor ebx, ebx\l0x00111f17      mov bl, al\l0x00111f19      mov eax, dword [var_1ch]\l0x00111f1c      mov eax, dword [eax + 0x1c]\l0x00111f1f      shr eax, 8\l0x00111f22      xor ecx, ecx\l0x00111f24      mov cl, al\l0x00111f26      mov eax, dword [var_1ch]\l0x00111f29      mov eax, dword [eax + 0x1c]\l0x00111f2c      shr eax, 0x10\l0x00111f2f      xor edx, edx\l0x00111f31      mov dl, al\l0x00111f33      mov eax, dword [var_1ch]\l0x00111f36      mov eax, dword [eax + 0x1c]\l0x00111f39      shr eax, 0x18\l0x00111f3c      sub esp, 4\l0x00111f3f      push edi\l0x00111f40      push dword [var_2ch]\l0x00111f43      push dword [var_30h]\l0x00111f46      push dword [var_34h]\l0x00111f49      push dword [var_38h]\l0x00111f4c      push dword [var_3ch]\l0x00111f4f      push ebx\l0x00111f50      push ecx\l0x00111f51      push edx\l0x00111f52      push eax\l0x00111f53      lea eax, [esi - 0x7de0]\l0x00111f59      push eax\l0x00111f5a      mov ebx, esi\l0x00111f5c      call sym.kprintf\l0x00111f61      add esp, 0x30\l"]
	"0x00111f64" [URL="sym.pdumph/0x00111f64", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x111e96\l0x00111f64      sub esp, 8\l0x00111f67      push 0x1c                                              ; 28\l0x00111f69      lea eax, [esi - 0x7da8]\l0x00111f6f      push eax\l0x00111f70      mov ebx, esi\l0x00111f72      call sym.kprintf\l0x00111f77      add esp, 0x10\l0x00111f7a      jmp 0x1123c5\l"]
	"0x00111f7f" [URL="sym.pdumph/0x00111f7f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x111d6d\l0x00111f7f      mov eax, dword [arg_8h]\l0x00111f82      mov ax, word [eax + 0x10]\l0x00111f86      and eax, 0xffff\l0x00111f8b      lea edx, [eax + 0xe]\l0x00111f8e      mov eax, dword [arg_8h]\l0x00111f91      mov ax, word [eax + 0xc]\l0x00111f95      and eax, 0xffff\l0x00111f9a      sub esp, 4\l0x00111f9d      push edx\l0x00111f9e      push eax\l0x00111f9f      lea eax, [esi - 0x7d9d]\l0x00111fa5      push eax\l0x00111fa6      mov ebx, esi\l0x00111fa8      call sym.kprintf\l0x00111fad      add esp, 0x10\l0x00111fb0      sub esp, 0xc\l0x00111fb3      lea eax, [esi - 0x7d82]\l0x00111fb9      push eax\l0x00111fba      mov ebx, esi\l0x00111fbc      call sym.kprintf\l0x00111fc1      add esp, 0x10\l0x00111fc4      mov eax, dword [arg_8h]\l0x00111fc7      mov ax, word [eax + 0x14]\l0x00111fcb      and eax, 0xffff\l0x00111fd0      and eax, 0x1fff\l0x00111fd5      mov ebx, eax\l0x00111fd7      mov eax, dword [arg_8h]\l0x00111fda      mov ax, word [eax + 0x12]\l0x00111fde      xor ecx, ecx\l0x00111fe0      mov cx, ax\l0x00111fe3      mov eax, dword [arg_8h]\l0x00111fe6      mov al, byte [eax + 0x16]\l0x00111fe9      xor edx, edx\l0x00111feb      mov dl, al\l0x00111fed      mov eax, dword [arg_8h]\l0x00111ff0      mov al, byte [eax + 0xf]\l0x00111ff3      and eax, 0xff                                          ; 255\l0x00111ff8      sub esp, 0xc\l0x00111ffb      push ebx\l0x00111ffc      push ecx\l0x00111ffd      push edx\l0x00111ffe      push eax\l0x00111fff      lea eax, [esi - 0x7d80]\l0x00112005      push eax\l0x00112006      mov ebx, esi\l0x00112008      call sym.kprintf\l0x0011200d      add esp, 0x20\l0x00112010      sub esp, 0xc\l0x00112013      lea eax, [esi - 0x7d5a]\l0x00112019      push eax\l0x0011201a      mov ebx, esi\l0x0011201c      call sym.kprintf\l0x00112021      add esp, 0x10\l0x00112024      mov eax, dword [arg_8h]\l0x00112027      mov ax, word [eax + 0x14]\l0x0011202b      and eax, 0xffff\l0x00112030      and eax, 0x4000\l0x00112035      test eax, eax\l0x00112037      je 0x11204f\l"]
	"0x00112039" [URL="sym.pdumph/0x00112039", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00112039      sub esp, 0xc\l0x0011203c      lea eax, [esi - 0x7d53]\l0x00112042      push eax\l0x00112043      mov ebx, esi\l0x00112045      call sym.kprintf\l0x0011204a      add esp, 0x10\l0x0011204d      jmp 0x11208e\l"]
	"0x0011204f" [URL="sym.pdumph/0x0011204f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x112037\l0x0011204f      mov eax, dword [arg_8h]\l0x00112052      mov ax, word [eax + 0x14]\l0x00112056      and eax, 0xffff\l0x0011205b      and eax, 0x2000\l0x00112060      test eax, eax\l0x00112062      je 0x11207a\l"]
	"0x00112064" [URL="sym.pdumph/0x00112064", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00112064      sub esp, 0xc\l0x00112067      lea eax, [esi - 0x7d4c]\l0x0011206d      push eax\l0x0011206e      mov ebx, esi\l0x00112070      call sym.kprintf\l0x00112075      add esp, 0x10\l0x00112078      jmp 0x11208e\l"]
	"0x0011207a" [URL="sym.pdumph/0x0011207a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x112062\l0x0011207a      sub esp, 0xc\l0x0011207d      lea eax, [esi - 0x7d45]\l0x00112083      push eax\l0x00112084      mov ebx, esi\l0x00112086      call sym.kprintf\l0x0011208b      add esp, 0x10\l"]
	"0x0011208e" [URL="sym.pdumph/0x0011208e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.pdumph @ 0x11204d, 0x112078\l0x0011208e      sub esp, 0xc\l0x00112091      push dword [arg_8h]\l0x00112094      mov ebx, esi\l0x00112096      call sym.ipcksum\l0x0011209b      add esp, 0x10\l0x0011209e      test ax, ax\l0x001120a1      jne 0x1120ab\l"]
	"0x001120a3" [URL="sym.pdumph/0x001120a3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001120a3      lea eax, [esi - 0x7d3c]\l0x001120a9      jmp 0x1120b1\l"]
	"0x001120ab" [URL="sym.pdumph/0x001120ab", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x1120a1\l0x001120ab      lea eax, [esi - 0x7d39]\l"]
	"0x001120b1" [URL="sym.pdumph/0x001120b1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x1120a9\l0x001120b1      sub esp, 8\l0x001120b4      push eax\l0x001120b5      lea eax, [esi - 0x7d34]\l0x001120bb      push eax\l0x001120bc      mov ebx, esi\l0x001120be      call sym.kprintf\l0x001120c3      add esp, 0x10\l0x001120c6      mov eax, dword [arg_8h]\l0x001120c9      mov al, byte [eax + 0x17]\l0x001120cc      cmp al, 0x11                                           ; 17\l0x001120ce      jne 0x1121f5\l"]
	"0x001120d4" [URL="sym.pdumph/0x001120d4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001120d4      mov eax, dword [arg_8h]\l0x001120d7      mov ax, word [eax + 0x10]\l0x001120db      xor edx, edx\l0x001120dd      mov dx, ax\l0x001120e0      mov eax, dword [arg_8h]\l0x001120e3      mov al, byte [eax + 0x17]\l0x001120e6      and eax, 0xff                                          ; 255\l0x001120eb      sub esp, 4\l0x001120ee      push edx\l0x001120ef      push eax\l0x001120f0      lea eax, [esi - 0x7d21]\l0x001120f6      push eax\l0x001120f7      mov ebx, esi\l0x001120f9      call sym.kprintf\l0x001120fe      add esp, 0x10\l0x00112101      sub esp, 0xc\l0x00112104      lea eax, [esi - 0x7d07]\l0x0011210a      push eax\l0x0011210b      mov ebx, esi\l0x0011210d      call sym.kprintf\l0x00112112      add esp, 0x10\l0x00112115      mov eax, dword [arg_8h]\l0x00112118      mov eax, dword [eax + 0x1a]\l0x0011211b      xor ecx, ecx\l0x0011211d      mov cl, al\l0x0011211f      mov eax, dword [arg_8h]\l0x00112122      mov eax, dword [eax + 0x1a]\l0x00112125      shr eax, 8\l0x00112128      xor edx, edx\l0x0011212a      mov dl, al\l0x0011212c      mov eax, dword [arg_8h]\l0x0011212f      mov eax, dword [eax + 0x1a]\l0x00112132      shr eax, 0x10\l0x00112135      and eax, 0xff                                          ; 255\l0x0011213a      mov ebx, dword [arg_8h]\l0x0011213d      mov ebx, dword [ebx + 0x1a]\l0x00112140      shr ebx, 0x18\l0x00112143      sub esp, 0xc\l0x00112146      push ecx\l0x00112147      push edx\l0x00112148      push eax\l0x00112149      push ebx\l0x0011214a      lea eax, [esi - 0x7d04]\l0x00112150      push eax\l0x00112151      mov ebx, esi\l0x00112153      call sym.kprintf\l0x00112158      add esp, 0x20\l0x0011215b      mov eax, dword [arg_8h]\l0x0011215e      mov eax, dword [eax + 0x1e]\l0x00112161      xor ecx, ecx\l0x00112163      mov cl, al\l0x00112165      mov eax, dword [arg_8h]\l0x00112168      mov eax, dword [eax + 0x1e]\l0x0011216b      shr eax, 8\l0x0011216e      xor edx, edx\l0x00112170      mov dl, al\l0x00112172      mov eax, dword [arg_8h]\l0x00112175      mov eax, dword [eax + 0x1e]\l0x00112178      shr eax, 0x10\l0x0011217b      and eax, 0xff                                          ; 255\l0x00112180      mov ebx, dword [arg_8h]\l0x00112183      mov ebx, dword [ebx + 0x1e]\l0x00112186      shr ebx, 0x18\l0x00112189      sub esp, 0xc\l0x0011218c      push ecx\l0x0011218d      push edx\l0x0011218e      push eax\l0x0011218f      push ebx\l0x00112190      lea eax, [esi - 0x7cf4]\l0x00112196      push eax\l0x00112197      mov ebx, esi\l0x00112199      call sym.kprintf\l0x0011219e      add esp, 0x20\l0x001121a1      sub esp, 0xc\l0x001121a4      lea eax, [esi - 0x7ce6]\l0x001121aa      push eax\l0x001121ab      mov ebx, esi\l0x001121ad      call sym.kprintf\l0x001121b2      add esp, 0x10\l0x001121b5      mov eax, dword [arg_8h]\l0x001121b8      mov ax, word [eax + 0x26]\l0x001121bc      and eax, 0xffff\l0x001121c1      lea ecx, [eax - 8]\l0x001121c4      mov eax, dword [arg_8h]\l0x001121c7      mov ax, word [eax + 0x24]\l0x001121cb      xor edx, edx\l0x001121cd      mov dx, ax\l0x001121d0      mov eax, dword [arg_8h]\l0x001121d3      mov ax, word [eax + 0x22]\l0x001121d7      and eax, 0xffff\l0x001121dc      push ecx\l0x001121dd      push edx\l0x001121de      push eax\l0x001121df      lea eax, [esi - 0x7cd0]\l0x001121e5      push eax\l0x001121e6      mov ebx, esi\l0x001121e8      call sym.kprintf\l0x001121ed      add esp, 0x10\l0x001121f0      jmp 0x1123c5\l"]
	"0x001121f5" [URL="sym.pdumph/0x001121f5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x1120ce\l0x001121f5      mov eax, dword [arg_8h]\l0x001121f8      mov al, byte [eax + 0x17]\l0x001121fb      cmp al, 1                                              ; 1\l0x001121fd      jne 0x1123c1\l"]
	"0x00112203" [URL="sym.pdumph/0x00112203", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00112203      mov eax, dword [arg_8h]\l0x00112206      mov ax, word [eax + 0x10]\l0x0011220a      xor edx, edx\l0x0011220c      mov dx, ax\l0x0011220f      mov eax, dword [arg_8h]\l0x00112212      mov al, byte [eax + 0x17]\l0x00112215      and eax, 0xff                                          ; 255\l0x0011221a      sub esp, 4\l0x0011221d      push edx\l0x0011221e      push eax\l0x0011221f      lea eax, [esi - 0x7ca6]\l0x00112225      push eax\l0x00112226      mov ebx, esi\l0x00112228      call sym.kprintf\l0x0011222d      add esp, 0x10\l0x00112230      sub esp, 0xc\l0x00112233      lea eax, [esi - 0x7d07]\l0x00112239      push eax\l0x0011223a      mov ebx, esi\l0x0011223c      call sym.kprintf\l0x00112241      add esp, 0x10\l0x00112244      mov eax, dword [arg_8h]\l0x00112247      mov eax, dword [eax + 0x1a]\l0x0011224a      xor ecx, ecx\l0x0011224c      mov cl, al\l0x0011224e      mov eax, dword [arg_8h]\l0x00112251      mov eax, dword [eax + 0x1a]\l0x00112254      shr eax, 8\l0x00112257      xor edx, edx\l0x00112259      mov dl, al\l0x0011225b      mov eax, dword [arg_8h]\l0x0011225e      mov eax, dword [eax + 0x1a]\l0x00112261      shr eax, 0x10\l0x00112264      and eax, 0xff                                          ; 255\l0x00112269      mov ebx, dword [arg_8h]\l0x0011226c      mov ebx, dword [ebx + 0x1a]\l0x0011226f      shr ebx, 0x18\l0x00112272      sub esp, 0xc\l0x00112275      push ecx\l0x00112276      push edx\l0x00112277      push eax\l0x00112278      push ebx\l0x00112279      lea eax, [esi - 0x7d04]\l0x0011227f      push eax\l0x00112280      mov ebx, esi\l0x00112282      call sym.kprintf\l0x00112287      add esp, 0x20\l0x0011228a      mov eax, dword [arg_8h]\l0x0011228d      mov eax, dword [eax + 0x1a]\l0x00112290      xor ecx, ecx\l0x00112292      mov cl, al\l0x00112294      mov eax, dword [arg_8h]\l0x00112297      mov eax, dword [eax + 0x1a]\l0x0011229a      shr eax, 8\l0x0011229d      xor edx, edx\l0x0011229f      mov dl, al\l0x001122a1      mov eax, dword [arg_8h]\l0x001122a4      mov eax, dword [eax + 0x1a]\l0x001122a7      shr eax, 0x10\l0x001122aa      and eax, 0xff                                          ; 255\l0x001122af      mov ebx, dword [arg_8h]\l0x001122b2      mov ebx, dword [ebx + 0x1a]\l0x001122b5      shr ebx, 0x18\l0x001122b8      sub esp, 0xc\l0x001122bb      push ecx\l0x001122bc      push edx\l0x001122bd      push eax\l0x001122be      push ebx\l0x001122bf      lea eax, [esi - 0x7cf4]\l0x001122c5      push eax\l0x001122c6      mov ebx, esi\l0x001122c8      call sym.kprintf\l0x001122cd      add esp, 0x20\l0x001122d0      mov eax, dword [arg_8h]\l0x001122d3      mov al, byte [eax + 0x22]\l0x001122d6      cmp al, 8                                              ; 8\l0x001122d8      jne 0x1122f0\l"]
	"0x001122da" [URL="sym.pdumph/0x001122da", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001122da      sub esp, 0xc\l0x001122dd      lea eax, [esi - 0x7c8b]\l0x001122e3      push eax\l0x001122e4      mov ebx, esi\l0x001122e6      call sym.kprintf\l0x001122eb      add esp, 0x10\l0x001122ee      jmp 0x112312\l"]
	"0x001122f0" [URL="sym.pdumph/0x001122f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x1122d8\l0x001122f0      mov eax, dword [arg_8h]\l0x001122f3      mov al, byte [eax + 0x22]\l0x001122f6      test al, al\l0x001122f8      jne 0x1123c4\l"]
	"0x001122fe" [URL="sym.pdumph/0x001122fe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001122fe      sub esp, 0xc\l0x00112301      lea eax, [esi - 0x7c77]\l0x00112307      push eax\l0x00112308      mov ebx, esi\l0x0011230a      call sym.kprintf\l0x0011230f      add esp, 0x10\l"]
	"0x00112312" [URL="sym.pdumph/0x00112312", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x1122ee\l0x00112312      mov eax, dword [arg_8h]\l0x00112315      mov ax, word [eax + 0x28]\l0x00112319      xor edx, edx\l0x0011231b      mov dx, ax\l0x0011231e      mov eax, dword [arg_8h]\l0x00112321      mov ax, word [eax + 0x26]\l0x00112325      and eax, 0xffff\l0x0011232a      sub esp, 4\l0x0011232d      push edx\l0x0011232e      push eax\l0x0011232f      lea eax, [esi - 0x7c65]\l0x00112335      push eax\l0x00112336      mov ebx, esi\l0x00112338      call sym.kprintf\l0x0011233d      add esp, 0x10\l0x00112340      mov eax, dword [arg_8h]\l0x00112343      mov ax, word [eax + 0x10]\l0x00112347      shr ax, 8\l0x0011234b      xor edx, edx\l0x0011234d      mov dx, ax\l0x00112350      mov eax, dword [arg_8h]\l0x00112353      mov ax, word [eax + 0x10]\l0x00112357      and eax, 0xffff\l0x0011235c      shl eax, 8\l0x0011235f      and eax, 0xffff\l0x00112364      or eax, edx\l0x00112366      lea edx, [eax - 0x14]\l0x00112369      mov eax, dword [arg_8h]\l0x0011236c      add eax, 0x22                                          ; 34\l0x0011236f      sub esp, 8\l0x00112372      push edx\l0x00112373      push eax\l0x00112374      mov ebx, esi\l0x00112376      call sym.icmp_cksum\l0x0011237b      add esp, 0x10\l0x0011237e      test ax, ax\l0x00112381      jne 0x11238b\l"]
	"0x00112383" [URL="sym.pdumph/0x00112383", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00112383      lea eax, [esi - 0x7c4d]\l0x00112389      jmp 0x112391\l"]
	"0x0011238b" [URL="sym.pdumph/0x0011238b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x112381\l0x0011238b      lea eax, [esi - 0x7c4a]\l"]
	"0x00112391" [URL="sym.pdumph/0x00112391", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x112389\l0x00112391      sub esp, 8\l0x00112394      push eax\l0x00112395      lea eax, [esi - 0x7c43]\l0x0011239b      push eax\l0x0011239c      mov ebx, esi\l0x0011239e      call sym.kprintf\l0x001123a3      add esp, 0x10\l0x001123a6      jmp 0x1123c5\l"]
	"0x001123a8" [URL="sym.pdumph/0x001123a8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x111d78\l0x001123a8      sub esp, 0xc\l0x001123ab      lea eax, [esi - 0x7c56]\l0x001123b1      push eax\l0x001123b2      mov ebx, esi\l0x001123b4      call sym.kprintf\l0x001123b9      add esp, 0x10\l0x001123bc      jmp 0x1123c5\l"]
	"0x001123be" [URL="sym.pdumph/0x001123be", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x111ea6\l0x001123be      nop\l0x001123bf      jmp 0x1123c5\l"]
	"0x001123c1" [URL="sym.pdumph/0x001123c1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x1121fd\l0x001123c1      nop\l0x001123c2      jmp 0x1123c5\l"]
	"0x001123c4" [URL="sym.pdumph/0x001123c4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.pdumph @ 0x1122f8\l0x001123c4      nop\l"]
	"0x001123c5" [URL="sym.pdumph/0x001123c5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00111f7a  CODE 0x001121f0  CODE 0x001123a6  \l; XREFS: CODE 0x001123bc  CODE 0x001123bf  CODE 0x001123c2  \l0x001123c5      nop\l"]
	"0x001123c6" [URL="sym.pdumph/0x001123c6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.pdumph @ 0x111db2, 0x111dc3\l0x001123c6      nop\l0x001123c7      lea esp, [var_ch]\l0x001123ca      pop ebx\l0x001123cb      pop esi\l0x001123cc      pop edi\l0x001123cd      pop ebp\l0x001123ce      ret\l"]
        "0x00111c6b" -> "0x00111f7f" [color="#13a10e"];
        "0x00111c6b" -> "0x00111d73" [color="#c50f1f"];
        "0x00111d73" -> "0x001123a8" [color="#13a10e"];
        "0x00111d73" -> "0x00111d7e" [color="#c50f1f"];
        "0x00111d7e" -> "0x001123c6" [color="#13a10e"];
        "0x00111d7e" -> "0x00111db8" [color="#c50f1f"];
        "0x00111db8" -> "0x001123c6" [color="#13a10e"];
        "0x00111db8" -> "0x00111dc9" [color="#c50f1f"];
        "0x00111dc9" -> "0x00111e9b" [color="#13a10e"];
        "0x00111dc9" -> "0x00111e05" [color="#c50f1f"];
        "0x00111e05" -> "0x00111f64" [color="#0037da"];
        "0x00111e9b" -> "0x001123be" [color="#13a10e"];
        "0x00111e9b" -> "0x00111eac" [color="#c50f1f"];
        "0x00111eac" -> "0x00111f64" [color="#0037da"];
        "0x00111f64" -> "0x001123c5" [color="#0037da"];
        "0x00111f7f" -> "0x0011204f" [color="#13a10e"];
        "0x00111f7f" -> "0x00112039" [color="#c50f1f"];
        "0x00112039" -> "0x0011208e" [color="#0037da"];
        "0x0011204f" -> "0x0011207a" [color="#13a10e"];
        "0x0011204f" -> "0x00112064" [color="#c50f1f"];
        "0x00112064" -> "0x0011208e" [color="#0037da"];
        "0x0011207a" -> "0x0011208e" [color="#0037da"];
        "0x0011208e" -> "0x001120ab" [color="#13a10e"];
        "0x0011208e" -> "0x001120a3" [color="#c50f1f"];
        "0x001120a3" -> "0x001120b1" [color="#0037da"];
        "0x001120ab" -> "0x001120b1" [color="#0037da"];
        "0x001120b1" -> "0x001121f5" [color="#13a10e"];
        "0x001120b1" -> "0x001120d4" [color="#c50f1f"];
        "0x001120d4" -> "0x001123c5" [color="#0037da"];
        "0x001121f5" -> "0x001123c1" [color="#13a10e"];
        "0x001121f5" -> "0x00112203" [color="#c50f1f"];
        "0x00112203" -> "0x001122f0" [color="#13a10e"];
        "0x00112203" -> "0x001122da" [color="#c50f1f"];
        "0x001122da" -> "0x00112312" [color="#0037da"];
        "0x001122f0" -> "0x001123c4" [color="#13a10e"];
        "0x001122f0" -> "0x001122fe" [color="#c50f1f"];
        "0x001122fe" -> "0x00112312" [color="#0037da"];
        "0x00112312" -> "0x0011238b" [color="#13a10e"];
        "0x00112312" -> "0x00112383" [color="#c50f1f"];
        "0x00112383" -> "0x00112391" [color="#0037da"];
        "0x0011238b" -> "0x00112391" [color="#0037da"];
        "0x00112391" -> "0x001123c5" [color="#0037da"];
        "0x001123a8" -> "0x001123c5" [color="#0037da"];
        "0x001123be" -> "0x001123c5" [color="#0037da"];
        "0x001123c1" -> "0x001123c5" [color="#0037da"];
        "0x001123c4" -> "0x001123c5" [color="#0037da"];
        "0x001123c5" -> "0x001123c6" [color="#0037da"];
}
