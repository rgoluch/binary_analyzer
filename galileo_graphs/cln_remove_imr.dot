digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00100e24" [URL="sym.cln_remove_imr/0x00100e24", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.cln_remove_imr_grub @ 0x100eca\l  ; CALL XREF from sym.cln_remove_imr_boot_params @ 0x100eed\l  ; CALL XREF from sym.cln_remove_imr_bzimage @ 0x100f10\l142: sym.cln_remove_imr (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h);\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l; arg int32_t arg_14h @ ebp+0x14\l0x00100e24      push ebp\l0x00100e25      mov ebp, esp\l0x00100e27      push ebx\l0x00100e28      sub esp, 0x14\l0x00100e2b      call sym.__x86.get_pc_thunk.ax\l0x00100e30      add eax, 0x201d0\l0x00100e35      mov ebx, dword [arg_8h]\l0x00100e38      mov ecx, dword [arg_ch]\l0x00100e3b      mov edx, dword [arg_10h]\l0x00100e3e      mov eax, dword [arg_14h]\l0x00100e41      mov byte [var_ch], bl\l0x00100e44      mov byte [var_10h], cl\l0x00100e47      mov byte [var_14h], dl\l0x00100e4a      mov byte [var_18h], al\l0x00100e4d      mov al, byte [var_14h]\l0x00100e50      and eax, 0xff                                          ; 255\l0x00100e55      push 0xbfffffff\l0x00100e5a      push eax\l0x00100e5b      push 0x11                                              ; 17\l0x00100e5d      push 5                                                 ; 5\l0x00100e5f      call sym.intel_cln_early_sb_write_reg\l0x00100e64      add esp, 0x10\l0x00100e67      mov al, byte [var_18h]\l0x00100e6a      and eax, 0xff                                          ; 255\l0x00100e6f      push 0xffffffffffffffff\l0x00100e71      push eax\l0x00100e72      push 0x11                                              ; 17\l0x00100e74      push 5                                                 ; 5\l0x00100e76      call sym.intel_cln_early_sb_write_reg\l0x00100e7b      add esp, 0x10\l0x00100e7e      mov al, byte [var_10h]\l0x00100e81      and eax, 0xff                                          ; 255\l0x00100e86      push 0\l0x00100e88      push eax\l0x00100e89      push 0x11                                              ; 17\l0x00100e8b      push 5                                                 ; 5\l0x00100e8d      call sym.intel_cln_early_sb_write_reg\l0x00100e92      add esp, 0x10\l0x00100e95      mov al, byte [var_ch]\l0x00100e98      and eax, 0xff                                          ; 255\l0x00100e9d      push 0\l0x00100e9f      push eax\l0x00100ea0      push 0x11                                              ; 17\l0x00100ea2      push 5                                                 ; 5\l0x00100ea4      call sym.intel_cln_early_sb_write_reg\l0x00100ea9      add esp, 0x10\l0x00100eac      nop\l0x00100ead      mov ebx, dword [var_4h]\l0x00100eb0      leave\l0x00100eb1      ret\l"]
}
