digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x001013b7" [URL="sym.trap/0x001013b7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.int_dispatch @ 0x1012fb\l  ; CALL XREF from loc._Xint5 @ 0x117a58\l645: sym.trap (int32_t arg_8h, int32_t arg_ch);\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l0x001013b7      push ebp\l0x001013b8      mov ebp, esp\l0x001013ba      push ebx\l0x001013bb      sub esp, 0x14\l0x001013be      call sym.__x86.get_pc_thunk.bx\l0x001013c3      add ebx, 0x1fc3d\l0x001013c9      call loc.disable\l0x001013ce      mov dword [var_ch], eax\l0x001013d1      mov eax, dword [arg_ch]\l0x001013d4      mov dword [var_10h], eax\l0x001013d7      sub esp, 0xc\l0x001013da      lea eax, [ebx - 0x8fde]\l0x001013e0      push eax\l0x001013e1      call sym.kprintf\l0x001013e6      add esp, 0x10\l0x001013e9      cmp dword [arg_8h], 0xf\l0x001013ed      jg 0x101439\l"]
	"0x001013ef" [URL="sym.trap/0x001013ef", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001013ef      mov eax, obj.currpid                                   ; 0x1212c0\l0x001013f5      mov edx, dword [eax]\l0x001013f7      mov eax, edx\l0x001013f9      shl eax, 3\l0x001013fc      sub eax, edx\l0x001013fe      shl eax, 3\l0x00101401      lea edx, [eax + 0x10]\l0x00101404      mov eax, obj.proctab                                   ; 0x1212e0\l0x0010140a      lea ecx, [edx + eax]\l0x0010140d      mov eax, obj.currpid                                   ; 0x1212c0\l0x00101413      mov edx, dword [eax]\l0x00101415      mov eax, dword [arg_8h]\l0x00101418      mov eax, dword [ebx + eax*4 - 0x11c0]\l0x0010141f      sub esp, 0xc\l0x00101422      push ecx\l0x00101423      push edx\l0x00101424      push eax\l0x00101425      push dword [arg_8h]\l0x00101428      lea eax, [ebx - 0x8fd0]\l0x0010142e      push eax\l0x0010142f      call sym.kprintf\l0x00101434      add esp, 0x20\l0x00101437      jmp 0x101472\l"]
	"0x00101439" [URL="sym.trap/0x00101439", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.trap @ 0x1013ed\l0x00101439      mov eax, obj.currpid                                   ; 0x1212c0\l0x0010143f      mov edx, dword [eax]\l0x00101441      mov eax, edx\l0x00101443      shl eax, 3\l0x00101446      sub eax, edx\l0x00101448      shl eax, 3\l0x0010144b      lea edx, [eax + 0x10]\l0x0010144e      mov eax, obj.proctab                                   ; 0x1212e0\l0x00101454      add edx, eax\l0x00101456      mov eax, obj.currpid                                   ; 0x1212c0\l0x0010145c      mov eax, dword [eax]\l0x0010145e      push edx\l0x0010145f      push eax\l0x00101460      push dword [arg_8h]\l0x00101463      lea eax, [ebx - 0x8fad]\l0x00101469      push eax\l0x0010146a      call sym.kprintf\l0x0010146f      add esp, 0x10\l"]
	"0x00101472" [URL="sym.trap/0x00101472", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.trap @ 0x101437\l0x00101472      mov eax, dword [var_10h]\l0x00101475      add eax, 0x20                                          ; loc.EOI\l0x00101478      mov dword [arg_ch], eax\l0x0010147b      cmp dword [arg_8h], 8\l0x0010147f      je 0x10148d\l"]
	"0x00101481" [URL="sym.trap/0x00101481", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00101481      cmp dword [arg_8h], 9\l0x00101485      jle 0x1014af\l"]
	"0x00101487" [URL="sym.trap/0x00101487", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00101487      cmp dword [arg_8h], 0xe\l0x0010148b      jg 0x1014af\l"]
	"0x0010148d" [URL="sym.trap/0x0010148d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.trap @ 0x10147f\l0x0010148d      mov eax, dword [arg_ch]\l0x00101490      mov edx, dword [eax]\l0x00101492      mov eax, dword [arg_ch]\l0x00101495      mov eax, dword [eax]\l0x00101497      sub esp, 4\l0x0010149a      push edx\l0x0010149b      push eax\l0x0010149c      lea eax, [ebx - 0x8f8f]\l0x001014a2      push eax\l0x001014a3      call sym.kprintf\l0x001014a8      add esp, 0x10\l0x001014ab      add dword [arg_ch], 4\l"]
	"0x001014af" [URL="sym.trap/0x001014af", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.trap @ 0x101485, 0x10148b\l0x001014af      mov eax, dword [arg_ch]\l0x001014b2      mov edx, dword [eax]\l0x001014b4      mov eax, dword [arg_ch]\l0x001014b7      add eax, 4\l0x001014ba      mov eax, dword [eax]\l0x001014bc      sub esp, 4\l0x001014bf      push edx\l0x001014c0      push eax\l0x001014c1      lea eax, [ebx - 0x8f79]\l0x001014c7      push eax\l0x001014c8      call sym.kprintf\l0x001014cd      add esp, 0x10\l0x001014d0      mov eax, dword [arg_ch]\l0x001014d3      add eax, 8\l0x001014d6      mov eax, dword [eax]\l0x001014d8      sub esp, 8\l0x001014db      push eax\l0x001014dc      lea eax, [ebx - 0x8f6b]\l0x001014e2      push eax\l0x001014e3      call sym.kprintf\l0x001014e8      add esp, 0x10\l0x001014eb      mov eax, dword [var_10h]\l0x001014ee      add eax, 0x1c                                          ; 28\l0x001014f1      mov dword [arg_ch], eax\l0x001014f4      sub esp, 0xc\l0x001014f7      lea eax, [ebx - 0x8f60]\l0x001014fd      push eax\l0x001014fe      call sym.kprintf\l0x00101503      add esp, 0x10\l0x00101506      mov eax, dword [arg_ch]\l0x00101509      mov edx, dword [eax]\l0x0010150b      mov eax, dword [arg_ch]\l0x0010150e      mov eax, dword [eax]\l0x00101510      sub esp, 4\l0x00101513      push edx\l0x00101514      push eax\l0x00101515      lea eax, [ebx - 0x8f50]\l0x0010151b      push eax\l0x0010151c      call sym.kprintf\l0x00101521      add esp, 0x10\l0x00101524      sub dword [arg_ch], 4\l0x00101528      mov eax, dword [arg_ch]\l0x0010152b      mov edx, dword [eax]\l0x0010152d      mov eax, dword [arg_ch]\l0x00101530      mov eax, dword [eax]\l0x00101532      sub esp, 4\l0x00101535      push edx\l0x00101536      push eax\l0x00101537      lea eax, [ebx - 0x8f41]\l0x0010153d      push eax\l0x0010153e      call sym.kprintf\l0x00101543      add esp, 0x10\l0x00101546      sub dword [arg_ch], 4\l0x0010154a      mov eax, dword [arg_ch]\l0x0010154d      mov edx, dword [eax]\l0x0010154f      mov eax, dword [arg_ch]\l0x00101552      mov eax, dword [eax]\l0x00101554      sub esp, 4\l0x00101557      push edx\l0x00101558      push eax\l0x00101559      lea eax, [ebx - 0x8f32]\l0x0010155f      push eax\l0x00101560      call sym.kprintf\l0x00101565      add esp, 0x10\l0x00101568      sub dword [arg_ch], 4\l0x0010156c      mov eax, dword [arg_ch]\l0x0010156f      mov edx, dword [eax]\l0x00101571      mov eax, dword [arg_ch]\l0x00101574      mov eax, dword [eax]\l0x00101576      sub esp, 4\l0x00101579      push edx\l0x0010157a      push eax\l0x0010157b      lea eax, [ebx - 0x8f23]\l0x00101581      push eax\l0x00101582      call sym.kprintf\l0x00101587      add esp, 0x10\l0x0010158a      sub dword [arg_ch], 4\l0x0010158e      mov eax, dword [arg_ch]\l0x00101591      mov edx, dword [eax]\l0x00101593      mov eax, dword [arg_ch]\l0x00101596      mov eax, dword [eax]\l0x00101598      sub esp, 4\l0x0010159b      push edx\l0x0010159c      push eax\l0x0010159d      lea eax, [ebx - 0x8f14]\l0x001015a3      push eax\l0x001015a4      call sym.kprintf\l0x001015a9      add esp, 0x10\l0x001015ac      sub dword [arg_ch], 4\l0x001015b0      mov eax, dword [arg_ch]\l0x001015b3      mov edx, dword [eax]\l0x001015b5      mov eax, dword [arg_ch]\l0x001015b8      mov eax, dword [eax]\l0x001015ba      sub esp, 4\l0x001015bd      push edx\l0x001015be      push eax\l0x001015bf      lea eax, [ebx - 0x8f05]\l0x001015c5      push eax\l0x001015c6      call sym.kprintf\l0x001015cb      add esp, 0x10\l0x001015ce      sub dword [arg_ch], 4\l0x001015d2      mov eax, dword [arg_ch]\l0x001015d5      mov edx, dword [eax]\l0x001015d7      mov eax, dword [arg_ch]\l0x001015da      mov eax, dword [eax]\l0x001015dc      sub esp, 4\l0x001015df      push edx\l0x001015e0      push eax\l0x001015e1      lea eax, [ebx - 0x8ef6]\l0x001015e7      push eax\l0x001015e8      call sym.kprintf\l0x001015ed      add esp, 0x10\l0x001015f0      sub dword [arg_ch], 4\l0x001015f4      mov eax, dword [arg_ch]\l0x001015f7      mov edx, dword [eax]\l0x001015f9      mov eax, dword [arg_ch]\l0x001015fc      mov eax, dword [eax]\l0x001015fe      sub esp, 4\l0x00101601      push edx\l0x00101602      push eax\l0x00101603      lea eax, [ebx - 0x8ee7]\l0x00101609      push eax\l0x0010160a      call sym.kprintf\l0x0010160f      add esp, 0x10\l0x00101612      sub dword [arg_ch], 4\l0x00101616      sub esp, 0xc\l0x00101619      lea eax, [ebx - 0x8ed8]\l0x0010161f      push eax\l0x00101620      call sym.panic\l0x00101625      add esp, 0x10\l0x00101628      sub esp, 0xc\l0x0010162b      push dword [var_ch]\l0x0010162e      call loc.restore\l0x00101633      add esp, 0x10\l0x00101636      nop\l0x00101637      mov ebx, dword [var_4h]\l0x0010163a      leave\l0x0010163b      ret\l"]
        "0x001013b7" -> "0x00101439" [color="#13a10e"];
        "0x001013b7" -> "0x001013ef" [color="#c50f1f"];
        "0x001013ef" -> "0x00101472" [color="#0037da"];
        "0x00101439" -> "0x00101472" [color="#0037da"];
        "0x00101472" -> "0x0010148d" [color="#13a10e"];
        "0x00101472" -> "0x00101481" [color="#c50f1f"];
        "0x00101481" -> "0x001014af" [color="#13a10e"];
        "0x00101481" -> "0x00101487" [color="#c50f1f"];
        "0x00101487" -> "0x001014af" [color="#13a10e"];
        "0x00101487" -> "0x0010148d" [color="#c50f1f"];
        "0x0010148d" -> "0x001014af" [color="#0037da"];
}
