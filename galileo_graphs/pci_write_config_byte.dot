digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00103604" [URL="sym.pci_write_config_byte/0x00103604", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="108: sym.pci_write_config_byte (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h);\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_8h @ ebp-0x8\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l0x00103604      push ebp\l0x00103605      mov ebp, esp\l0x00103607      sub esp, 0x14\l0x0010360a      call sym.__x86.get_pc_thunk.ax\l0x0010360f      add eax, 0x1d9f1\l0x00103614      mov eax, dword [arg_10h]\l0x00103617      mov byte [var_14h], al\l0x0010361a      push dword [arg_8h]\l0x0010361d      call sym.encodedPCIDevToBus\l0x00103622      add esp, 4\l0x00103625      mov dword [var_4h], eax\l0x00103628      push dword [arg_8h]\l0x0010362b      call sym.encodedPCIDevToDevice\l0x00103630      add esp, 4\l0x00103633      mov dword [var_8h], eax\l0x00103636      push dword [arg_8h]\l0x00103639      call sym.encodedPCIDevToFunction\l0x0010363e      add esp, 4\l0x00103641      mov dword [var_ch], eax\l0x00103644      mov eax, dword [arg_ch]\l0x00103647      push eax\l0x00103648      push dword [var_ch]\l0x0010364b      push dword [var_8h]\l0x0010364e      push dword [var_4h]\l0x00103651      push 0xe0000000\l0x00103656      call sym.regAddress_MMConfig\l0x0010365b      add esp, 0x14\l0x0010365e      mov dword [var_10h], eax\l0x00103661      mov eax, dword [var_10h]\l0x00103664      mov dl, byte [var_14h]\l0x00103667      mov byte [eax], dl\l0x00103669      mov eax, 1\l0x0010366e      leave\l0x0010366f      ret\l"]
}
