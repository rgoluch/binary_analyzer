digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010c072" [URL="sym.lfsetup/0x0010c072", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.lflgetc @ 0x10b8f6\l  ; CALL XREF from sym.lflputc @ 0x10bad9\l642: sym.lfsetup (int32_t arg_8h);\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l; var int32_t var_38h @ esp+0x4\l; var int32_t var_34h @ esp+0x8\l0x0010c072      push ebp\l0x0010c073      mov ebp, esp\l0x0010c075      sub esp, 0x38\l0x0010c078      mov eax, dword [0x13f644]                              ; [0x13f644:4]=0\l0x0010c07d      mov dword [esp], eax\l0x0010c080      call sym.wait                                          ; pid_t wait(int *wstatus)\l0x0010c085      mov eax, dword [arg_8h]\l0x0010c088      mov eax, dword [eax + 0xc]\l0x0010c08b      mov dword [var_14h], eax\l0x0010c08e      mov eax, dword [arg_8h]\l0x0010c091      add eax, 0x2c                                          ; 44\l0x0010c094      mov dword [var_18h], eax\l0x0010c097      mov eax, dword [arg_8h]\l0x0010c09a      mov al, byte [eax + 0x27c]\l0x0010c0a0      test al, al\l0x0010c0a2      jne 0x10c0b1\l"]
	"0x0010c0a4" [URL="sym.lfsetup/0x0010c0a4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c0a4      mov eax, dword [arg_8h]\l0x0010c0a7      mov al, byte [eax + 0x27d]\l0x0010c0ad      test al, al\l0x0010c0af      je 0x10c0bc\l"]
	"0x0010c0b1" [URL="sym.lfsetup/0x0010c0b1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsetup @ 0x10c0a2\l0x0010c0b1      mov eax, dword [arg_8h]\l0x0010c0b4      mov dword [esp], eax\l0x0010c0b7      call sym.lfflush\l"]
	"0x0010c0bc" [URL="sym.lfsetup/0x0010c0bc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsetup @ 0x10c0af\l0x0010c0bc      mov eax, dword [arg_8h]\l0x0010c0bf      mov eax, dword [eax + 0x28]\l0x0010c0c2      mov dword [var_10h], eax\l0x0010c0c5      cmp dword [var_10h], 0xffffffff\l0x0010c0c9      jne 0x10c130\l"]
	"0x0010c0cb" [URL="sym.lfsetup/0x0010c0cb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c0cb      mov eax, dword [var_14h]\l0x0010c0ce      mov eax, dword [eax + 4]\l0x0010c0d1      mov dword [var_10h], eax\l0x0010c0d4      cmp dword [var_10h], 0xffffffff\l0x0010c0d8      jne 0x10c10a\l"]
	"0x0010c0da" [URL="sym.lfsetup/0x0010c0da", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c0da      call sym.lfiballoc\l0x0010c0df      mov dword [var_10h], eax\l0x0010c0e2      mov dword [var_38h], 0\l0x0010c0ea      mov eax, dword [var_18h]\l0x0010c0ed      mov dword [esp], eax\l0x0010c0f0      call sym.lfibclear\l0x0010c0f5      mov eax, dword [var_14h]\l0x0010c0f8      mov edx, dword [var_10h]\l0x0010c0fb      mov dword [eax + 4], edx\l0x0010c0fe      mov eax, dword [arg_8h]\l0x0010c101      mov byte [eax + 0x27c], 1\l0x0010c108      jmp 0x10c125\l"]
	"0x0010c10a" [URL="sym.lfsetup/0x0010c10a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsetup @ 0x10c0d8\l0x0010c10a      mov eax, dword [obj.Lf_data]                           ; [0x13f640:4]=0\l0x0010c10f      mov edx, dword [var_18h]\l0x0010c112      mov dword [var_34h], edx\l0x0010c116      mov edx, dword [var_10h]\l0x0010c119      mov dword [var_38h], edx\l0x0010c11d      mov dword [esp], eax\l0x0010c120      call sym.lfibget\l"]
	"0x0010c125" [URL="sym.lfsetup/0x0010c125", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsetup @ 0x10c108\l0x0010c125      mov eax, dword [arg_8h]\l0x0010c128      mov edx, dword [var_10h]\l0x0010c12b      mov dword [eax + 0x28], edx\l0x0010c12e      jmp 0x10c172\l"]
	"0x0010c130" [URL="sym.lfsetup/0x0010c130", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsetup @ 0x10c0c9\l0x0010c130      mov eax, dword [arg_8h]\l0x0010c133      mov edx, dword [eax + 0x14]\l0x0010c136      mov eax, dword [var_18h]\l0x0010c139      mov eax, dword [eax + 4]\l0x0010c13c      cmp edx, eax\l0x0010c13e      jae 0x10c172\l"]
	"0x0010c140" [URL="sym.lfsetup/0x0010c140", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c140      mov eax, dword [var_14h]\l0x0010c143      mov eax, dword [eax + 4]\l0x0010c146      mov dword [var_10h], eax\l0x0010c149      mov eax, dword [obj.Lf_data]                           ; [0x13f640:4]=0\l0x0010c14e      mov edx, dword [var_18h]\l0x0010c151      mov dword [var_34h], edx\l0x0010c155      mov edx, dword [var_10h]\l0x0010c158      mov dword [var_38h], edx\l0x0010c15c      mov dword [esp], eax\l0x0010c15f      call sym.lfibget\l0x0010c164      mov eax, dword [arg_8h]\l0x0010c167      mov edx, dword [var_10h]\l0x0010c16a      mov dword [eax + 0x28], edx\l0x0010c16d      jmp 0x10c216\l"]
	"0x0010c172" [URL="sym.lfsetup/0x0010c172", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.lfsetup @ 0x10c12e, 0x10c13e\l0x0010c172      jmp 0x10c216\l"]
	"0x0010c177" [URL="sym.lfsetup/0x0010c177", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsetup @ 0x10c22b\l0x0010c177      mov eax, dword [var_18h]\l0x0010c17a      mov eax, dword [eax]\l0x0010c17c      mov dword [var_10h], eax\l0x0010c17f      cmp dword [var_10h], 0xffffffff\l0x0010c183      jne 0x10c1e8\l"]
	"0x0010c185" [URL="sym.lfsetup/0x0010c185", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c185      call sym.lfiballoc\l0x0010c18a      mov dword [var_10h], eax\l0x0010c18d      mov eax, dword [var_18h]\l0x0010c190      mov edx, dword [var_10h]\l0x0010c193      mov dword [eax], edx\l0x0010c195      mov eax, dword [arg_8h]\l0x0010c198      mov edx, dword [eax + 0x28]\l0x0010c19b      mov eax, dword [obj.Lf_data]                           ; [0x13f640:4]=0\l0x0010c1a0      mov ecx, dword [var_18h]\l0x0010c1a3      mov dword [var_34h], ecx\l0x0010c1a7      mov dword [var_38h], edx\l0x0010c1ab      mov dword [esp], eax\l0x0010c1ae      call sym.lfibput\l0x0010c1b3      mov eax, dword [arg_8h]\l0x0010c1b6      mov edx, dword [var_10h]\l0x0010c1b9      mov dword [eax + 0x28], edx\l0x0010c1bc      mov eax, dword [var_18h]\l0x0010c1bf      mov eax, dword [eax + 4]\l0x0010c1c2      add eax, 0x2000\l0x0010c1c7      mov dword [var_1ch], eax\l0x0010c1ca      mov eax, dword [var_1ch]\l0x0010c1cd      mov dword [var_38h], eax\l0x0010c1d1      mov eax, dword [var_18h]\l0x0010c1d4      mov dword [esp], eax\l0x0010c1d7      call sym.lfibclear\l0x0010c1dc      mov eax, dword [arg_8h]\l0x0010c1df      mov byte [eax + 0x27c], 1\l0x0010c1e6      jmp 0x10c20c\l"]
	"0x0010c1e8" [URL="sym.lfsetup/0x0010c1e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsetup @ 0x10c183\l0x0010c1e8      mov eax, dword [obj.Lf_data]                           ; [0x13f640:4]=0\l0x0010c1ed      mov edx, dword [var_18h]\l0x0010c1f0      mov dword [var_34h], edx\l0x0010c1f4      mov edx, dword [var_10h]\l0x0010c1f7      mov dword [var_38h], edx\l0x0010c1fb      mov dword [esp], eax\l0x0010c1fe      call sym.lfibget\l0x0010c203      mov eax, dword [arg_8h]\l0x0010c206      mov edx, dword [var_10h]\l0x0010c209      mov dword [eax + 0x28], edx\l"]
	"0x0010c20c" [URL="sym.lfsetup/0x0010c20c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsetup @ 0x10c1e6\l0x0010c20c      mov eax, dword [arg_8h]\l0x0010c20f      mov dword [eax + 0x74], 0xffffffff                     ; [0xffffffff:4]=-1 ; -1\l"]
	"0x0010c216" [URL="sym.lfsetup/0x0010c216", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.lfsetup @ 0x10c16d, 0x10c172\l0x0010c216      mov eax, dword [arg_8h]\l0x0010c219      mov eax, dword [eax + 0x14]\l0x0010c21c      and eax, 0xffffe000\l0x0010c221      mov edx, eax\l0x0010c223      mov eax, dword [var_18h]\l0x0010c226      mov eax, dword [eax + 4]\l0x0010c229      cmp edx, eax\l0x0010c22b      ja 0x10c177\l"]
	"0x0010c231" [URL="sym.lfsetup/0x0010c231", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c231      mov eax, dword [arg_8h]\l0x0010c234      mov eax, dword [eax + 0x14]\l0x0010c237      and eax, 0x1fff\l0x0010c23c      shr eax, 9\l0x0010c23f      mov dword [var_20h], eax\l0x0010c242      mov eax, dword [arg_8h]\l0x0010c245      mov edx, dword [var_20h]\l0x0010c248      add edx, 8\l0x0010c24b      mov eax, dword [eax + edx*4 + 0x14]\l0x0010c24f      mov dword [var_ch], eax\l0x0010c252      cmp dword [var_ch], 0xffffffff\l0x0010c256      jne 0x10c285\l"]
	"0x0010c258" [URL="sym.lfsetup/0x0010c258", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c258      mov eax, dword [arg_8h]\l0x0010c25b      add eax, 0x78                                          ; 120\l0x0010c25e      mov dword [esp], eax\l0x0010c261      call sym.lfdballoc\l0x0010c266      mov dword [var_ch], eax\l0x0010c269      mov eax, dword [arg_8h]\l0x0010c26c      mov edx, dword [var_20h]\l0x0010c26f      lea ecx, [edx + 8]\l0x0010c272      mov edx, dword [var_ch]\l0x0010c275      mov dword [eax + ecx*4 + 0x14], edx\l0x0010c279      mov eax, dword [arg_8h]\l0x0010c27c      mov byte [eax + 0x27c], 1\l0x0010c283      jmp 0x10c2b8\l"]
	"0x0010c285" [URL="sym.lfsetup/0x0010c285", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.lfsetup @ 0x10c256\l0x0010c285      mov eax, dword [arg_8h]\l0x0010c288      mov eax, dword [eax + 0x74]\l0x0010c28b      cmp eax, dword [var_ch]\l0x0010c28e      je 0x10c2b8\l"]
	"0x0010c290" [URL="sym.lfsetup/0x0010c290", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010c290      mov edx, dword [var_ch]\l0x0010c293      mov eax, dword [arg_8h]\l0x0010c296      lea ecx, [eax + 0x78]\l0x0010c299      mov eax, dword [obj.Lf_data]                           ; [0x13f640:4]=0\l0x0010c29e      mov dword [var_34h], edx\l0x0010c2a2      mov dword [var_38h], ecx\l0x0010c2a6      mov dword [esp], eax\l0x0010c2a9      call sym.read                                          ; ssize_t read(int fildes, void *buf, size_t nbyte)\l0x0010c2ae      mov eax, dword [arg_8h]\l0x0010c2b1      mov byte [eax + 0x27d], 0\l"]
	"0x0010c2b8" [URL="sym.lfsetup/0x0010c2b8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.lfsetup @ 0x10c283, 0x10c28e\l0x0010c2b8      mov eax, dword [arg_8h]\l0x0010c2bb      mov edx, dword [var_ch]\l0x0010c2be      mov dword [eax + 0x74], edx\l0x0010c2c1      mov eax, dword [arg_8h]\l0x0010c2c4      mov eax, dword [eax + 0x14]\l0x0010c2c7      and eax, 0x1ff                                         ; 511\l0x0010c2cc      lea edx, [eax + 0x70]\l0x0010c2cf      mov eax, dword [arg_8h]\l0x0010c2d2      add eax, edx\l0x0010c2d4      lea edx, [eax + 8]\l0x0010c2d7      mov eax, dword [arg_8h]\l0x0010c2da      mov dword [eax + 0x278], edx\l0x0010c2e0      mov eax, dword [0x13f644]                              ; [0x13f644:4]=0\l0x0010c2e5      mov dword [esp], eax\l0x0010c2e8      call sym.signal                                        ; void signal(int sig, void *func)\l0x0010c2ed      mov eax, 1\l0x0010c2f2      leave\l0x0010c2f3      ret\l"]
        "0x0010c072" -> "0x0010c0b1" [color="#13a10e"];
        "0x0010c072" -> "0x0010c0a4" [color="#c50f1f"];
        "0x0010c0a4" -> "0x0010c0bc" [color="#13a10e"];
        "0x0010c0a4" -> "0x0010c0b1" [color="#c50f1f"];
        "0x0010c0b1" -> "0x0010c0bc" [color="#0037da"];
        "0x0010c0bc" -> "0x0010c130" [color="#13a10e"];
        "0x0010c0bc" -> "0x0010c0cb" [color="#c50f1f"];
        "0x0010c0cb" -> "0x0010c10a" [color="#13a10e"];
        "0x0010c0cb" -> "0x0010c0da" [color="#c50f1f"];
        "0x0010c0da" -> "0x0010c125" [color="#0037da"];
        "0x0010c10a" -> "0x0010c125" [color="#0037da"];
        "0x0010c125" -> "0x0010c172" [color="#0037da"];
        "0x0010c130" -> "0x0010c172" [color="#13a10e"];
        "0x0010c130" -> "0x0010c140" [color="#c50f1f"];
        "0x0010c140" -> "0x0010c216" [color="#0037da"];
        "0x0010c172" -> "0x0010c216" [color="#0037da"];
        "0x0010c177" -> "0x0010c1e8" [color="#13a10e"];
        "0x0010c177" -> "0x0010c185" [color="#c50f1f"];
        "0x0010c185" -> "0x0010c20c" [color="#0037da"];
        "0x0010c1e8" -> "0x0010c20c" [color="#0037da"];
        "0x0010c20c" -> "0x0010c216" [color="#0037da"];
        "0x0010c216" -> "0x0010c177" [color="#13a10e"];
        "0x0010c216" -> "0x0010c231" [color="#c50f1f"];
        "0x0010c231" -> "0x0010c285" [color="#13a10e"];
        "0x0010c231" -> "0x0010c258" [color="#c50f1f"];
        "0x0010c258" -> "0x0010c2b8" [color="#0037da"];
        "0x0010c285" -> "0x0010c2b8" [color="#13a10e"];
        "0x0010c285" -> "0x0010c290" [color="#c50f1f"];
        "0x0010c290" -> "0x0010c2b8" [color="#0037da"];
}
