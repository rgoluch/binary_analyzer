digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00114ef1" [URL="sym.xsh_kill/0x00114ef1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="647: sym.xsh_kill (int32_t arg_8h, int32_t arg_ch);\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_dh @ ebp-0xd\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_8h @ ebp-0x8\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l0x00114ef1      push ebp\l0x00114ef2      mov ebp, esp\l0x00114ef4      push esi\l0x00114ef5      push ebx\l0x00114ef6      sub esp, 0x10\l0x00114ef9      call sym.__x86.get_pc_thunk.bx\l0x00114efe      add ebx, 0xc102\l0x00114f04      cmp dword [arg_8h], 2\l0x00114f08      jne 0x114fab\l"]
	"0x00114f0e" [URL="sym.xsh_kill/0x00114f0e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00114f0e      mov eax, dword [arg_ch]\l0x00114f11      add eax, 4\l0x00114f14      mov eax, dword [eax]\l0x00114f16      sub esp, 4\l0x00114f19      push 7                                                 ; 7\l0x00114f1b      lea edx, [ebx - 0x7298]\l0x00114f21      push edx\l0x00114f22      push eax\l0x00114f23      call sym.strncmp                                       ; int strncmp(const char *s1, const char *s2, size_t n)\l0x00114f28      add esp, 0x10\l0x00114f2b      test eax, eax\l0x00114f2d      jne 0x114fab\l"]
	"0x00114f2f" [URL="sym.xsh_kill/0x00114f2f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00114f2f      mov eax, dword [arg_ch]\l0x00114f32      mov eax, dword [eax]\l0x00114f34      sub esp, 8\l0x00114f37      push eax\l0x00114f38      lea eax, [ebx - 0x7291]\l0x00114f3e      push eax\l0x00114f3f      call sym.printf                                        ; int printf(const char *format)\l0x00114f44      add esp, 0x10\l0x00114f47      sub esp, 0xc\l0x00114f4a      lea eax, [ebx - 0x7281]\l0x00114f50      push eax\l0x00114f51      call sym.printf                                        ; int printf(const char *format)\l0x00114f56      add esp, 0x10\l0x00114f59      sub esp, 0xc\l0x00114f5c      lea eax, [ebx - 0x7273]\l0x00114f62      push eax\l0x00114f63      call sym.printf                                        ; int printf(const char *format)\l0x00114f68      add esp, 0x10\l0x00114f6b      sub esp, 0xc\l0x00114f6e      lea eax, [ebx - 0x725c]\l0x00114f74      push eax\l0x00114f75      call sym.printf                                        ; int printf(const char *format)\l0x00114f7a      add esp, 0x10\l0x00114f7d      sub esp, 0xc\l0x00114f80      lea eax, [ebx - 0x7250]\l0x00114f86      push eax\l0x00114f87      call sym.printf                                        ; int printf(const char *format)\l0x00114f8c      add esp, 0x10\l0x00114f8f      sub esp, 0xc\l0x00114f92      lea eax, [ebx - 0x7228]\l0x00114f98      push eax\l0x00114f99      call sym.printf                                        ; int printf(const char *format)\l0x00114f9e      add esp, 0x10\l0x00114fa1      mov eax, 1\l0x00114fa6      jmp 0x115171\l"]
	"0x00114fab" [URL="sym.xsh_kill/0x00114fab", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_kill @ 0x114f08, 0x114f2d\l0x00114fab      cmp dword [arg_8h], 2\l0x00114faf      je 0x11502f\l"]
	"0x00114fb1" [URL="sym.xsh_kill/0x00114fb1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00114fb1      mov eax, dword [arg_ch]\l0x00114fb4      mov edx, dword [eax]\l0x00114fb6      mov eax, obj.currpid                                   ; 0x1212c0\l0x00114fbc      mov ecx, dword [eax]\l0x00114fbe      mov esi, obj.proctab                                   ; 0x1212e0\l0x00114fc4      mov eax, ecx\l0x00114fc6      shl eax, 3\l0x00114fc9      sub eax, ecx\l0x00114fcb      shl eax, 3\l0x00114fce      add eax, esi\l0x00114fd0      add eax, 0x32                                          ; 50\l0x00114fd3      mov ax, word [eax]\l0x00114fd6      cwde\l0x00114fd7      sub esp, 4\l0x00114fda      push edx\l0x00114fdb      lea edx, [ebx - 0x7204]\l0x00114fe1      push edx\l0x00114fe2      push eax\l0x00114fe3      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00114fe8      add esp, 0x10\l0x00114feb      mov eax, dword [arg_ch]\l0x00114fee      mov edx, dword [eax]\l0x00114ff0      mov eax, obj.currpid                                   ; 0x1212c0\l0x00114ff6      mov ecx, dword [eax]\l0x00114ff8      mov esi, obj.proctab                                   ; 0x1212e0\l0x00114ffe      mov eax, ecx\l0x00115000      shl eax, 3\l0x00115003      sub eax, ecx\l0x00115005      shl eax, 3\l0x00115008      add eax, esi\l0x0011500a      add eax, 0x32                                          ; 50\l0x0011500d      mov ax, word [eax]\l0x00115010      cwde\l0x00115011      sub esp, 4\l0x00115014      push edx\l0x00115015      lea edx, [ebx - 0x71ec]\l0x0011501b      push edx\l0x0011501c      push eax\l0x0011501d      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00115022      add esp, 0x10\l0x00115025      mov eax, 0xffffffff                                    ; -1\l0x0011502a      jmp 0x115171\l"]
	"0x0011502f" [URL="sym.xsh_kill/0x0011502f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_kill @ 0x114faf\l0x0011502f      mov eax, dword [arg_ch]\l0x00115032      mov eax, dword [eax + 4]\l0x00115035      mov dword [var_14h], eax\l0x00115038      mov eax, dword [var_14h]\l0x0011503b      lea edx, [eax + 1]\l0x0011503e      mov dword [var_14h], edx\l0x00115041      mov al, byte [eax]\l0x00115043      mov byte [var_dh], al\l0x00115046      mov dword [var_ch], 0\l0x0011504d      jmp 0x1150c7\l"]
	"0x0011504f" [URL="sym.xsh_kill/0x0011504f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_kill @ 0x1150cb\l0x0011504f      cmp byte [var_dh], 0x2f\l0x00115053      jle 0x11505b\l"]
	"0x00115055" [URL="sym.xsh_kill/0x00115055", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00115055      cmp byte [var_dh], 0x39\l0x00115059      jle 0x11509f\l"]
	"0x0011505b" [URL="sym.xsh_kill/0x0011505b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_kill @ 0x115053\l0x0011505b      mov eax, dword [arg_ch]\l0x0011505e      mov edx, dword [eax]\l0x00115060      mov eax, obj.currpid                                   ; 0x1212c0\l0x00115066      mov ecx, dword [eax]\l0x00115068      mov esi, obj.proctab                                   ; 0x1212e0\l0x0011506e      mov eax, ecx\l0x00115070      shl eax, 3\l0x00115073      sub eax, ecx\l0x00115075      shl eax, 3\l0x00115078      add eax, esi\l0x0011507a      add eax, 0x32                                          ; 50\l0x0011507d      mov ax, word [eax]\l0x00115080      cwde\l0x00115081      sub esp, 4\l0x00115084      push edx\l0x00115085      lea edx, [ebx - 0x71c6]\l0x0011508b      push edx\l0x0011508c      push eax\l0x0011508d      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00115092      add esp, 0x10\l0x00115095      mov eax, 1\l0x0011509a      jmp 0x115171\l"]
	"0x0011509f" [URL="sym.xsh_kill/0x0011509f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_kill @ 0x115059\l0x0011509f      mov edx, dword [var_ch]\l0x001150a2      mov eax, edx\l0x001150a4      shl eax, 2\l0x001150a7      add eax, edx\l0x001150a9      add eax, eax\l0x001150ab      mov edx, eax\l0x001150ad      movsx eax, byte [var_dh]\l0x001150b1      sub eax, 0x30                                          ; 48\l0x001150b4      add eax, edx\l0x001150b6      mov dword [var_ch], eax\l0x001150b9      mov eax, dword [var_14h]\l0x001150bc      lea edx, [eax + 1]\l0x001150bf      mov dword [var_14h], edx\l0x001150c2      mov al, byte [eax]\l0x001150c4      mov byte [var_dh], al\l"]
	"0x001150c7" [URL="sym.xsh_kill/0x001150c7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_kill @ 0x11504d\l0x001150c7      cmp byte [var_dh], 0\l0x001150cb      jne 0x11504f\l"]
	"0x001150cd" [URL="sym.xsh_kill/0x001150cd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001150cd      cmp dword [var_ch], 0\l0x001150d1      jne 0x115114\l"]
	"0x001150d3" [URL="sym.xsh_kill/0x001150d3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001150d3      mov eax, dword [arg_ch]\l0x001150d6      mov edx, dword [eax]\l0x001150d8      mov eax, obj.currpid                                   ; 0x1212c0\l0x001150de      mov ecx, dword [eax]\l0x001150e0      mov esi, obj.proctab                                   ; 0x1212e0\l0x001150e6      mov eax, ecx\l0x001150e8      shl eax, 3\l0x001150eb      sub eax, ecx\l0x001150ed      shl eax, 3\l0x001150f0      add eax, esi\l0x001150f2      add eax, 0x32                                          ; 50\l0x001150f5      mov ax, word [eax]\l0x001150f8      cwde\l0x001150f9      sub esp, 4\l0x001150fc      push edx\l0x001150fd      lea edx, [ebx - 0x71a8]\l0x00115103      push edx\l0x00115104      push eax\l0x00115105      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x0011510a      add esp, 0x10\l0x0011510d      mov eax, 1\l0x00115112      jmp 0x115171\l"]
	"0x00115114" [URL="sym.xsh_kill/0x00115114", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_kill @ 0x1150d1\l0x00115114      sub esp, 0xc\l0x00115117      push dword [var_ch]\l0x0011511a      call sym.kill                                          ; int kill(pid_t pid, int sig)\l0x0011511f      add esp, 0x10\l0x00115122      mov dword [var_18h], eax\l0x00115125      cmp dword [var_18h], 0xffffffff\l0x00115129      jne 0x11516c\l"]
	"0x0011512b" [URL="sym.xsh_kill/0x0011512b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0011512b      mov eax, dword [arg_ch]\l0x0011512e      mov edx, dword [eax]\l0x00115130      mov eax, obj.currpid                                   ; 0x1212c0\l0x00115136      mov ecx, dword [eax]\l0x00115138      mov esi, obj.proctab                                   ; 0x1212e0\l0x0011513e      mov eax, ecx\l0x00115140      shl eax, 3\l0x00115143      sub eax, ecx\l0x00115145      shl eax, 3\l0x00115148      add eax, esi\l0x0011514a      add eax, 0x32                                          ; 50\l0x0011514d      mov ax, word [eax]\l0x00115150      cwde\l0x00115151      push dword [var_ch]\l0x00115154      push edx\l0x00115155      lea edx, [ebx - 0x7186]\l0x0011515b      push edx\l0x0011515c      push eax\l0x0011515d      call sym.fprintf                                       ; int fprintf(FILE *stream, const char *format,   ...)\l0x00115162      add esp, 0x10\l0x00115165      mov eax, 1\l0x0011516a      jmp 0x115171\l"]
	"0x0011516c" [URL="sym.xsh_kill/0x0011516c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_kill @ 0x115129\l0x0011516c      mov eax, 0\l"]
	"0x00115171" [URL="sym.xsh_kill/0x00115171", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_kill @ 0x114fa6, 0x11502a, 0x11509a, 0x115112, 0x11516a\l0x00115171      lea esp, [var_8h]\l0x00115174      pop ebx\l0x00115175      pop esi\l0x00115176      pop ebp\l0x00115177      ret\l"]
        "0x00114ef1" -> "0x00114fab" [color="#13a10e"];
        "0x00114ef1" -> "0x00114f0e" [color="#c50f1f"];
        "0x00114f0e" -> "0x00114fab" [color="#13a10e"];
        "0x00114f0e" -> "0x00114f2f" [color="#c50f1f"];
        "0x00114f2f" -> "0x00115171" [color="#0037da"];
        "0x00114fab" -> "0x0011502f" [color="#13a10e"];
        "0x00114fab" -> "0x00114fb1" [color="#c50f1f"];
        "0x00114fb1" -> "0x00115171" [color="#0037da"];
        "0x0011502f" -> "0x001150c7" [color="#0037da"];
        "0x0011504f" -> "0x0011505b" [color="#13a10e"];
        "0x0011504f" -> "0x00115055" [color="#c50f1f"];
        "0x00115055" -> "0x0011509f" [color="#13a10e"];
        "0x00115055" -> "0x0011505b" [color="#c50f1f"];
        "0x0011505b" -> "0x00115171" [color="#0037da"];
        "0x0011509f" -> "0x001150c7" [color="#0037da"];
        "0x001150c7" -> "0x0011504f" [color="#13a10e"];
        "0x001150c7" -> "0x001150cd" [color="#c50f1f"];
        "0x001150cd" -> "0x00115114" [color="#13a10e"];
        "0x001150cd" -> "0x001150d3" [color="#c50f1f"];
        "0x001150d3" -> "0x00115171" [color="#0037da"];
        "0x00115114" -> "0x0011516c" [color="#13a10e"];
        "0x00115114" -> "0x0011512b" [color="#c50f1f"];
        "0x0011512b" -> "0x00115171" [color="#0037da"];
        "0x0011516c" -> "0x00115171" [color="#0037da"];
}
