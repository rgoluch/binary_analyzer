digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010ffd5" [URL="sym.icmp_cksum/0x0010ffd5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.ip_in @ 0x11023d\l  ; CALL XREF from sym.ip_out @ 0x110582\l  ; CALL XREF from sym.pdumph @ 0x112376\l157: sym.icmp_cksum (int32_t arg_8h, int32_t arg_ch);\l; var int32_t var_eh @ ebp-0xe\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_8h @ ebp-0x8\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l0x0010ffd5      push ebp\l0x0010ffd6      mov ebp, esp\l0x0010ffd8      sub esp, 0x10\l0x0010ffdb      call sym.__x86.get_pc_thunk.ax\l0x0010ffe0      add eax, 0x11020\l0x0010ffe5      mov eax, dword [arg_ch]\l0x0010ffe8      sar eax, 1\l0x0010ffea      mov dword [var_4h], eax\l0x0010ffed      mov eax, dword [arg_8h]\l0x0010fff0      mov dword [var_ch], eax\l0x0010fff3      mov dword [var_8h], 0\l0x0010fffa      jmp 0x110032\l"]
	"0x0010fffc" [URL="sym.icmp_cksum/0x0010fffc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.icmp_cksum @ 0x110036\l0x0010fffc      mov eax, dword [var_ch]\l0x0010ffff      lea edx, [eax + 2]\l0x00110002      mov dword [var_ch], edx\l0x00110005      mov ax, word [eax]\l0x00110008      mov word [var_eh], ax\l0x0011000c      mov ax, word [var_eh]\l0x00110010      shr ax, 8\l0x00110014      xor edx, edx\l0x00110016      mov dx, ax\l0x00110019      mov ax, word [var_eh]\l0x0011001d      and eax, 0xffff\l0x00110022      shl eax, 8\l0x00110025      and eax, 0xffff\l0x0011002a      or eax, edx\l0x0011002c      add dword [var_8h], eax\l0x0011002f      dec dword [var_4h]\l"]
	"0x00110032" [URL="sym.icmp_cksum/0x00110032", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.icmp_cksum @ 0x10fffa\l0x00110032      cmp dword [var_4h], 0\l0x00110036      jg 0x10fffc\l"]
	"0x00110038" [URL="sym.icmp_cksum/0x00110038", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00110038      mov eax, dword [arg_ch]\l0x0011003b      and eax, 1\l0x0011003e      test eax, eax\l0x00110040      je 0x110057\l"]
	"0x00110042" [URL="sym.icmp_cksum/0x00110042", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00110042      mov eax, dword [var_ch]\l0x00110045      mov al, byte [eax]\l0x00110047      and eax, 0xff                                          ; 255\l0x0011004c      shl eax, 8\l0x0011004f      and eax, 0xffff\l0x00110054      add dword [var_8h], eax\l"]
	"0x00110057" [URL="sym.icmp_cksum/0x00110057", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.icmp_cksum @ 0x110040\l0x00110057      mov eax, dword [var_8h]\l0x0011005a      shr eax, 0x10\l0x0011005d      add dword [var_8h], eax\l0x00110060      mov eax, dword [var_8h]\l0x00110063      not eax\l0x00110065      and eax, 0xffff\l0x0011006a      mov dword [var_8h], eax\l0x0011006d      mov eax, dword [var_8h]\l0x00110070      leave\l0x00110071      ret\l"]
        "0x0010ffd5" -> "0x00110032" [color="#0037da"];
        "0x0010fffc" -> "0x00110032" [color="#0037da"];
        "0x00110032" -> "0x0010fffc" [color="#13a10e"];
        "0x00110032" -> "0x00110038" [color="#c50f1f"];
        "0x00110038" -> "0x00110057" [color="#13a10e"];
        "0x00110038" -> "0x00110042" [color="#c50f1f"];
        "0x00110042" -> "0x00110057" [color="#0037da"];
}
