digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00104311" [URL="sym.get_quark_pdat_entry_data_by_id/0x00104311", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.ethinit @ 0x10964f\l258: sym.get_quark_pdat_entry_data_by_id (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h);\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_14h @ ebp-0x14\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l; arg int32_t arg_10h @ ebp+0x10\l0x00104311      push ebp\l0x00104312      mov ebp, esp\l0x00104314      push ebx\l0x00104315      sub esp, 0x24\l0x00104318      call sym.__x86.get_pc_thunk.bx\l0x0010431d      add ebx, 0x1cce3\l0x00104323      mov eax, dword [arg_8h]\l0x00104326      mov word [var_1ch], ax\l0x0010432a      mov dword [var_ch], 0\l0x00104331      mov dword [var_14h], 0xfff10000\l0x00104338      mov eax, dword [var_14h]\l0x0010433b      sub esp, 4\l0x0010433e      push 4                                                 ; 4\l0x00104340      lea edx, [ebx - 0x8bcf]\l0x00104346      push edx\l0x00104347      push eax\l0x00104348      call sym.memcmp                                        ; int memcmp(const void *s1, const void *s2, size_t n)\l0x0010434d      add esp, 0x10\l0x00104350      test eax, eax\l0x00104352      je 0x104370\l"]
	"0x00104354" [URL="sym.get_quark_pdat_entry_data_by_id/0x00104354", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00104354      sub esp, 0xc\l0x00104357      lea eax, [ebx - 0x8bca]\l0x0010435d      push eax\l0x0010435e      call sym.kprintf\l0x00104363      add esp, 0x10\l0x00104366      mov eax, 0xffffffff                                    ; -1\l0x0010436b      jmp 0x10440e\l"]
	"0x00104370" [URL="sym.get_quark_pdat_entry_data_by_id/0x00104370", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.get_quark_pdat_entry_data_by_id @ 0x104352\l0x00104370      mov eax, dword [var_14h]\l0x00104373      add eax, 0xc                                           ; 12\l0x00104376      mov dword [var_10h], eax\l0x00104379      jmp 0x1043fa\l"]
	"0x0010437b" [URL="sym.get_quark_pdat_entry_data_by_id/0x0010437b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.get_quark_pdat_entry_data_by_id @ 0x104403\l0x0010437b      mov eax, dword [var_10h]\l0x0010437e      mov ax, word [eax]\l0x00104381      cmp word [var_1ch], ax\l0x00104385      jne 0x1043d1\l"]
	"0x00104387" [URL="sym.get_quark_pdat_entry_data_by_id/0x00104387", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00104387      mov eax, dword [arg_10h]\l0x0010438a      sub esp, 4\l0x0010438d      push eax\l0x0010438e      push 0\l0x00104390      push dword [arg_ch]\l0x00104393      call sym.memset                                        ; void *memset(void *s, int c, size_t n)\l0x00104398      add esp, 0x10\l0x0010439b      mov eax, dword [var_10h]\l0x0010439e      mov ax, word [eax + 2]\l0x001043a2      xor edx, edx\l0x001043a4      mov dx, ax\l0x001043a7      mov eax, dword [arg_10h]\l0x001043aa      cmp eax, edx\l0x001043ac      jbe 0x1043b0\l"]
	"0x001043ae" [URL="sym.get_quark_pdat_entry_data_by_id/0x001043ae", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x001043ae      mov eax, edx\l"]
	"0x001043b0" [URL="sym.get_quark_pdat_entry_data_by_id/0x001043b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.get_quark_pdat_entry_data_by_id @ 0x1043ac\l0x001043b0      mov dword [arg_10h], eax\l0x001043b3      mov eax, dword [arg_10h]\l0x001043b6      mov edx, dword [var_10h]\l0x001043b9      add edx, 0x10                                          ; 16\l0x001043bc      sub esp, 4\l0x001043bf      push eax\l0x001043c0      push edx\l0x001043c1      push dword [arg_ch]\l0x001043c4      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x001043c9      add esp, 0x10\l0x001043cc      mov eax, dword [arg_10h]\l0x001043cf      jmp 0x10440e\l"]
	"0x001043d1" [URL="sym.get_quark_pdat_entry_data_by_id/0x001043d1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.get_quark_pdat_entry_data_by_id @ 0x104385\l0x001043d1      mov eax, dword [var_10h]\l0x001043d4      mov ax, word [eax + 2]\l0x001043d8      and eax, 0xffff\l0x001043dd      add eax, 0x10                                          ; 16\l0x001043e0      add dword [var_10h], eax\l0x001043e3      mov eax, dword [var_10h]\l0x001043e6      mov ax, word [eax + 2]\l0x001043ea      xor edx, edx\l0x001043ec      mov dx, ax\l0x001043ef      mov eax, dword [var_ch]\l0x001043f2      add eax, edx\l0x001043f4      add eax, 0x10                                          ; 16\l0x001043f7      mov dword [var_ch], eax\l"]
	"0x001043fa" [URL="sym.get_quark_pdat_entry_data_by_id/0x001043fa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.get_quark_pdat_entry_data_by_id @ 0x104379\l0x001043fa      mov eax, dword [var_14h]\l0x001043fd      mov eax, dword [eax + 4]\l0x00104400      cmp dword [var_ch], eax\l0x00104403      jb 0x10437b\l"]
	"0x00104409" [URL="sym.get_quark_pdat_entry_data_by_id/0x00104409", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00104409      mov eax, 0xffffffff                                    ; -1\l"]
	"0x0010440e" [URL="sym.get_quark_pdat_entry_data_by_id/0x0010440e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.get_quark_pdat_entry_data_by_id @ 0x10436b, 0x1043cf\l0x0010440e      mov ebx, dword [var_4h]\l0x00104411      leave\l0x00104412      ret\l"]
        "0x00104311" -> "0x00104370" [color="#13a10e"];
        "0x00104311" -> "0x00104354" [color="#c50f1f"];
        "0x00104354" -> "0x0010440e" [color="#0037da"];
        "0x00104370" -> "0x001043fa" [color="#0037da"];
        "0x0010437b" -> "0x001043d1" [color="#13a10e"];
        "0x0010437b" -> "0x00104387" [color="#c50f1f"];
        "0x00104387" -> "0x001043b0" [color="#13a10e"];
        "0x00104387" -> "0x001043ae" [color="#c50f1f"];
        "0x001043ae" -> "0x001043b0" [color="#0037da"];
        "0x001043b0" -> "0x0010440e" [color="#0037da"];
        "0x001043d1" -> "0x001043fa" [color="#0037da"];
        "0x001043fa" -> "0x0010437b" [color="#13a10e"];
        "0x001043fa" -> "0x00104409" [color="#c50f1f"];
        "0x00104409" -> "0x0010440e" [color="#0037da"];
}
