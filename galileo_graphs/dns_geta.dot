digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x0010eecb" [URL="sym.dns_geta/0x0010eecb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREF from sym.dnslookup @ 0x10ed6c\l579: sym.dns_geta (int32_t arg_8h, int32_t arg_ch);\l; var int32_t var_42ah @ ebp-0x42a\l; var int32_t var_2ah @ ebp-0x2a\l; var int32_t var_28h @ ebp-0x28\l; var int32_t var_24h @ ebp-0x24\l; var int32_t var_22h @ ebp-0x22\l; var int32_t var_20h @ ebp-0x20\l; var int32_t var_1ch @ ebp-0x1c\l; var int32_t var_1ah @ ebp-0x1a\l; var int32_t var_18h @ ebp-0x18\l; var int32_t var_11h @ ebp-0x11\l; var int32_t var_10h @ ebp-0x10\l; var int32_t var_ch @ ebp-0xc\l; var int32_t var_4h @ ebp-0x4\l; arg int32_t arg_8h @ ebp+0x8\l; arg int32_t arg_ch @ ebp+0xc\l0x0010eecb      push ebp\l0x0010eecc      mov ebp, esp\l0x0010eece      push ebx\l0x0010eecf      sub esp, 0x434\l0x0010eed5      call sym.__x86.get_pc_thunk.bx\l0x0010eeda      add ebx, 0x12126\l0x0010eee0      mov eax, dword [arg_ch]\l0x0010eee3      add eax, 4\l0x0010eee6      sub esp, 4\l0x0010eee9      push 2                                                 ; 2\l0x0010eeeb      push eax\l0x0010eeec      lea eax, [var_22h]\l0x0010eeef      push eax\l0x0010eef0      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010eef5      add esp, 0x10\l0x0010eef8      mov ax, word [var_22h]\l0x0010eefc      shr ax, 8\l0x0010ef00      mov edx, eax\l0x0010ef02      mov ax, word [var_22h]\l0x0010ef06      and eax, 0xffff\l0x0010ef0b      shl eax, 8\l0x0010ef0e      or eax, edx\l0x0010ef10      mov word [var_1ah], ax\l0x0010ef14      mov eax, dword [arg_ch]\l0x0010ef17      add eax, 0xc                                           ; 12\l0x0010ef1a      mov dword [var_10h], eax\l0x0010ef1d      mov dword [var_18h], 0\l0x0010ef24      jmp 0x10ef66\l"]
	"0x0010ef26" [URL="sym.dns_geta/0x0010ef26", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10ef72\l0x0010ef26      mov eax, dword [var_10h]\l0x0010ef29      mov al, byte [eax]\l0x0010ef2b      mov byte [var_11h], al\l0x0010ef2e      jmp 0x10ef50\l"]
	"0x0010ef30" [URL="sym.dns_geta/0x0010ef30", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10ef54\l0x0010ef30      cmp byte [var_11h], 0x3f\l0x0010ef34      jbe 0x10ef3c\l"]
	"0x0010ef36" [URL="sym.dns_geta/0x0010ef36", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ef36      add dword [var_10h], 2\l0x0010ef3a      jmp 0x10ef56\l"]
	"0x0010ef3c" [URL="sym.dns_geta/0x0010ef3c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10ef34\l0x0010ef3c      mov al, byte [var_11h]\l0x0010ef3f      and eax, 0xff                                          ; 255\l0x0010ef44      inc eax\l0x0010ef45      add dword [var_10h], eax\l0x0010ef48      mov eax, dword [var_10h]\l0x0010ef4b      mov al, byte [eax]\l0x0010ef4d      mov byte [var_11h], al\l"]
	"0x0010ef50" [URL="sym.dns_geta/0x0010ef50", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10ef2e\l0x0010ef50      cmp byte [var_11h], 0\l0x0010ef54      jne 0x10ef30\l"]
	"0x0010ef56" [URL="sym.dns_geta/0x0010ef56", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10ef3a\l0x0010ef56      cmp byte [var_11h], 0\l0x0010ef5a      jne 0x10ef5f\l"]
	"0x0010ef5c" [URL="sym.dns_geta/0x0010ef5c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ef5c      inc dword [var_10h]\l"]
	"0x0010ef5f" [URL="sym.dns_geta/0x0010ef5f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10ef5a\l0x0010ef5f      add dword [var_10h], 4\l0x0010ef63      inc dword [var_18h]\l"]
	"0x0010ef66" [URL="sym.dns_geta/0x0010ef66", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10ef24\l0x0010ef66      mov ax, word [var_1ah]\l0x0010ef6a      and eax, 0xffff\l0x0010ef6f      cmp dword [var_18h], eax\l0x0010ef72      jl 0x10ef26\l"]
	"0x0010ef74" [URL="sym.dns_geta/0x0010ef74", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010ef74      mov eax, dword [arg_ch]\l0x0010ef77      add eax, 6\l0x0010ef7a      sub esp, 4\l0x0010ef7d      push 2                                                 ; 2\l0x0010ef7f      push eax\l0x0010ef80      lea eax, [var_22h]\l0x0010ef83      push eax\l0x0010ef84      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010ef89      add esp, 0x10\l0x0010ef8c      mov ax, word [var_22h]\l0x0010ef90      shr ax, 8\l0x0010ef94      mov edx, eax\l0x0010ef96      mov ax, word [var_22h]\l0x0010ef9a      and eax, 0xffff\l0x0010ef9f      shl eax, 8\l0x0010efa2      or eax, edx\l0x0010efa4      mov word [var_1ch], ax\l0x0010efa8      mov dword [var_ch], 0\l0x0010efaf      mov dword [var_18h], 0\l0x0010efb6      jmp 0x10f0e8\l"]
	"0x0010efbb" [URL="sym.dns_geta/0x0010efbb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10f0f3\l0x0010efbb      sub esp, 4\l0x0010efbe      lea eax, [var_42ah]\l0x0010efc4      push eax\l0x0010efc5      push dword [var_10h]\l0x0010efc8      push dword [arg_ch]\l0x0010efcb      call sym.dns_getrname\l0x0010efd0      add esp, 0x10\l0x0010efd3      mov dword [var_20h], eax\l0x0010efd6      mov eax, dword [var_20h]\l0x0010efd9      add dword [var_10h], eax\l0x0010efdc      sub esp, 4\l0x0010efdf      push 2                                                 ; 2\l0x0010efe1      push dword [var_10h]\l0x0010efe4      lea eax, [var_24h]\l0x0010efe7      push eax\l0x0010efe8      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010efed      add esp, 0x10\l0x0010eff0      sub esp, 0xc\l0x0010eff3      push dword [arg_8h]\l0x0010eff6      call sym.strlen                                        ; size_t strlen(const char *s)\l0x0010effb      add esp, 0x10\l0x0010effe      sub esp, 4\l0x0010f001      push eax\l0x0010f002      lea eax, [var_42ah]\l0x0010f008      push eax\l0x0010f009      push dword [arg_8h]\l0x0010f00c      call sym.strncmp                                       ; int strncmp(const char *s1, const char *s2, size_t n)\l0x0010f011      add esp, 0x10\l0x0010f014      test eax, eax\l0x0010f016      jne 0x10f0a7\l"]
	"0x0010f01c" [URL="sym.dns_geta/0x0010f01c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010f01c      mov eax, dword [var_24h]\l0x0010f01f      shr ax, 8\l0x0010f023      xor edx, edx\l0x0010f025      mov dx, ax\l0x0010f028      mov eax, dword [var_24h]\l0x0010f02b      and eax, 0xffff\l0x0010f030      shl eax, 8\l0x0010f033      and eax, 0xffff\l0x0010f038      or eax, edx\l0x0010f03a      cmp eax, 1                                             ; 1\l0x0010f03d      jne 0x10f0a7\l"]
	"0x0010f03f" [URL="sym.dns_geta/0x0010f03f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010f03f      mov eax, dword [var_10h]\l0x0010f042      add eax, 0xa\l0x0010f045      sub esp, 4\l0x0010f048      push 4                                                 ; 4\l0x0010f04a      push eax\l0x0010f04b      lea eax, [var_28h]\l0x0010f04e      push eax\l0x0010f04f      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010f054      add esp, 0x10\l0x0010f057      cmp dword [var_ch], 0\l0x0010f05b      je 0x10f0a1\l"]
	"0x0010f05d" [URL="sym.dns_geta/0x0010f05d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010f05d      mov eax, obj.NetData                                   ; 0x140200\l0x0010f063      mov eax, dword [eax + 8]\l0x0010f066      mov edx, dword [var_28h]\l0x0010f069      mov ecx, edx\l0x0010f06b      shr ecx, 0x18\l0x0010f06e      mov edx, dword [var_28h]\l0x0010f071      shr edx, 8\l0x0010f074      and edx, 0xff00\l0x0010f07a      or ecx, edx\l0x0010f07c      mov edx, dword [var_28h]\l0x0010f07f      shl edx, 8\l0x0010f082      and edx, 0xff0000\l0x0010f088      or ecx, edx\l0x0010f08a      mov edx, dword [var_28h]\l0x0010f08d      shl edx, 0x18\l0x0010f090      or edx, ecx\l0x0010f092      and edx, eax\l0x0010f094      mov eax, obj.NetData                                   ; 0x140200\l0x0010f09a      mov eax, dword [eax + 0xc]\l0x0010f09d      cmp edx, eax\l0x0010f09f      jne 0x10f0a7\l"]
	"0x0010f0a1" [URL="sym.dns_geta/0x0010f0a1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10f05b\l0x0010f0a1      mov eax, dword [var_28h]\l0x0010f0a4      mov dword [var_ch], eax\l"]
	"0x0010f0a7" [URL="sym.dns_geta/0x0010f0a7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.dns_geta @ 0x10f016, 0x10f03d, 0x10f09f\l0x0010f0a7      add dword [var_10h], 8\l0x0010f0ab      sub esp, 4\l0x0010f0ae      push 2                                                 ; 2\l0x0010f0b0      push dword [var_10h]\l0x0010f0b3      lea eax, [var_2ah]\l0x0010f0b6      push eax\l0x0010f0b7      call sym.memcpy                                        ; void *memcpy(void *s1, const void *s2, size_t n)\l0x0010f0bc      add esp, 0x10\l0x0010f0bf      mov ax, word [var_2ah]\l0x0010f0c3      shr ax, 8\l0x0010f0c7      xor edx, edx\l0x0010f0c9      mov dx, ax\l0x0010f0cc      mov ax, word [var_2ah]\l0x0010f0d0      and eax, 0xffff\l0x0010f0d5      shl eax, 8\l0x0010f0d8      and eax, 0xffff\l0x0010f0dd      or eax, edx\l0x0010f0df      add eax, 2\l0x0010f0e2      add dword [var_10h], eax\l0x0010f0e5      inc dword [var_18h]\l"]
	"0x0010f0e8" [URL="sym.dns_geta/0x0010f0e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10efb6\l0x0010f0e8      mov eax, dword [var_1ch]\l0x0010f0eb      and eax, 0xffff\l0x0010f0f0      cmp dword [var_18h], eax\l0x0010f0f3      jl 0x10efbb\l"]
	"0x0010f0f9" [URL="sym.dns_geta/0x0010f0f9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010f0f9      cmp dword [var_ch], 0\l0x0010f0fd      je 0x10f104\l"]
	"0x0010f0ff" [URL="sym.dns_geta/0x0010f0ff", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0010f0ff      mov eax, dword [var_ch]\l0x0010f102      jmp 0x10f109\l"]
	"0x0010f104" [URL="sym.dns_geta/0x0010f104", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10f0fd\l0x0010f104      mov eax, 0xffffffff                                    ; -1\l"]
	"0x0010f109" [URL="sym.dns_geta/0x0010f109", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.dns_geta @ 0x10f102\l0x0010f109      mov ebx, dword [var_4h]\l0x0010f10c      leave\l0x0010f10d      ret\l"]
        "0x0010eecb" -> "0x0010ef66" [color="#0037da"];
        "0x0010ef26" -> "0x0010ef50" [color="#0037da"];
        "0x0010ef30" -> "0x0010ef3c" [color="#13a10e"];
        "0x0010ef30" -> "0x0010ef36" [color="#c50f1f"];
        "0x0010ef36" -> "0x0010ef56" [color="#0037da"];
        "0x0010ef3c" -> "0x0010ef50" [color="#0037da"];
        "0x0010ef50" -> "0x0010ef30" [color="#13a10e"];
        "0x0010ef50" -> "0x0010ef56" [color="#c50f1f"];
        "0x0010ef56" -> "0x0010ef5f" [color="#13a10e"];
        "0x0010ef56" -> "0x0010ef5c" [color="#c50f1f"];
        "0x0010ef5c" -> "0x0010ef5f" [color="#0037da"];
        "0x0010ef5f" -> "0x0010ef66" [color="#0037da"];
        "0x0010ef66" -> "0x0010ef26" [color="#13a10e"];
        "0x0010ef66" -> "0x0010ef74" [color="#c50f1f"];
        "0x0010ef74" -> "0x0010f0e8" [color="#0037da"];
        "0x0010efbb" -> "0x0010f0a7" [color="#13a10e"];
        "0x0010efbb" -> "0x0010f01c" [color="#c50f1f"];
        "0x0010f01c" -> "0x0010f0a7" [color="#13a10e"];
        "0x0010f01c" -> "0x0010f03f" [color="#c50f1f"];
        "0x0010f03f" -> "0x0010f0a1" [color="#13a10e"];
        "0x0010f03f" -> "0x0010f05d" [color="#c50f1f"];
        "0x0010f05d" -> "0x0010f0a7" [color="#13a10e"];
        "0x0010f05d" -> "0x0010f0a1" [color="#c50f1f"];
        "0x0010f0a1" -> "0x0010f0a7" [color="#0037da"];
        "0x0010f0a7" -> "0x0010f0e8" [color="#0037da"];
        "0x0010f0e8" -> "0x0010efbb" [color="#13a10e"];
        "0x0010f0e8" -> "0x0010f0f9" [color="#c50f1f"];
        "0x0010f0f9" -> "0x0010f104" [color="#13a10e"];
        "0x0010f0f9" -> "0x0010f0ff" [color="#c50f1f"];
        "0x0010f0ff" -> "0x0010f109" [color="#0037da"];
        "0x0010f104" -> "0x0010f109" [color="#0037da"];
}
