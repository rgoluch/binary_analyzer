digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x08000034" [URL="sym.mkarp/0x08000034", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- section..text:\l  ;-- .text:\l  ;-- pc:\l320: sym.mkarp (int32_t arg3, int32_t arg4, signed int arg_16h, signed int arg_1ch, signed int arg_bp_20h, signed int arg_26h, signed int arg_20h, int32_t arg_24h);\l; arg signed int arg_16h @ r31+0x16\l; arg signed int arg_1ch @ r31+0x1c\l; arg signed int arg_bp_20h @ r31+0x20\l; arg signed int arg_26h @ r31+0x26\l; var int32_t var_8h @ r1+0x8\l; var int32_t var_ch @ r1+0xc\l; var int32_t var_10h @ r1+0x10\l; var int32_t var_14h @ r1+0x14\l; var int32_t var_18h @ r1+0x18\l; var int32_t var_1ch @ r1+0x1c\l; arg signed int arg_20h @ r1+0x20\l; arg int32_t arg_24h @ r1+0x24\l; arg int32_t arg3 @ r5\l; arg int32_t arg4 @ r6\l0x08000034      stwu r1, -0x20(r1)                                     ; [01] -r-x section size 320 named .text\l0x08000038      mflr r0\l0x0800003c      stw r0, 0x24(r1)\l0x08000040      stw r26, 8(r1)\l0x08000044      stw r27, 0xc(r1)\l0x08000048      stw r28, 0x10(r1)\l0x0800004c      stw r29, 0x14(r1)\l0x08000050      stw r30, 0x18(r1)\l0x08000054      stw r31, 0x1c(r1)\l0x08000058      mr r27, r5                                             ; arg3\l0x0800005c      mr r28, r6                                             ; arg4\l0x08000060      extsh r26, r3\l0x08000064      extsh r29, r4\l0x08000068      lis r9, 0                                              ; int32_t arg_20h\l0x0800006c      lwz r3, 0(r9)                                          ; int32_t arg3\l0x08000070      crclr 6\l0x08000074      bl 0x8000074\l0x08000078      mr r31, r3\l0x0800007c      li r30, 0xffff\l0x08000080      cmpwi cr7, r3, 0xffff\l0x08000084      beq cr7, 0x8000148\l"]
	"0x08000088" [URL="sym.mkarp/0x08000088", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x08000088      mr r30, r3\l0x0800008c      lis r4, 0\l0x08000090      addi r4, r4, 0                                         ; int32_t arg4\l0x08000094      li r5, 6                                               ; int32_t arg_16h\l0x08000098      crclr 6\l0x0800009c      bl 0x800009c\l0x080000a0      mr r3, r26                                             ; int32_t arg3\l0x080000a4      crclr 6\l0x080000a8      bl 0x80000a8\l0x080000ac      sth r3, 0xc(r31)\l0x080000b0      li r3, 1                                               ; int32_t arg3\l0x080000b4      crclr 6\l0x080000b8      bl 0x80000b8\l0x080000bc      sth r3, 0xe(r31)\l0x080000c0      li r3, 0x800                                           ; int32_t arg3\l0x080000c4      crclr 6\l0x080000c8      bl 0x80000c8\l0x080000cc      sth r3, 0x10(r31)\l0x080000d0      li r0, 6\l0x080000d4      stb r0, 0x12(r31)\l0x080000d8      li r0, 4\l0x080000dc      stb r0, 0x13(r31)\l0x080000e0      mr r3, r29                                             ; int32_t arg3\l0x080000e4      crclr 6\l0x080000e8      bl 0x80000e8\l0x080000ec      sth r3, 0x14(r31)\l0x080000f0      lis r29, 0\l0x080000f4      addi r29, r29, 8\l0x080000f8      addi r3, r31, 0x16                                     ; int32_t arg3\l0x080000fc      mr r4, r29                                             ; int32_t arg4\l0x08000100      li r5, 6                                               ; int32_t arg_16h\l0x08000104      crclr 6\l0x08000108      bl 0x8000108\l0x0800010c      addi r3, r31, 0x1c                                     ; int32_t arg3\l0x08000110      mr r4, r27                                             ; int32_t arg4\l0x08000114      li r5, 4                                               ; int32_t arg_16h\l0x08000118      crclr 6\l0x0800011c      bl 0x800011c\l0x08000120      addi r3, r31, 0x20                                     ; int32_t arg3\l0x08000124      mr r4, r29                                             ; int32_t arg4\l0x08000128      li r5, 6                                               ; int32_t arg_16h\l0x0800012c      crclr 6\l0x08000130      bl 0x8000130\l0x08000134      addi r3, r31, 0x26                                     ; int32_t arg3\l0x08000138      mr r4, r28                                             ; int32_t arg4\l0x0800013c      li r5, 4                                               ; int32_t arg_16h\l0x08000140      crclr 6\l0x08000144      bl 0x8000144\l"]
	"0x08000148" [URL="sym.mkarp/0x08000148", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.mkarp @ 0x8000084\l0x08000148      mr r3, r30\l0x0800014c      lwz r0, 0x24(r1)\l0x08000150      mtlr r0\l0x08000154      lwz r26, 8(r1)\l0x08000158      lwz r27, 0xc(r1)\l0x0800015c      lwz r28, 0x10(r1)\l0x08000160      lwz r29, 0x14(r1)\l0x08000164      lwz r30, 0x18(r1)\l0x08000168      lwz r31, 0x1c(r1)\l0x0800016c      addi r1, r1, 0x20\l0x08000170      blr\l"]
        "0x08000034" -> "0x08000148" [color="#13a10e"];
        "0x08000034" -> "0x08000088" [color="#c50f1f"];
        "0x08000088" -> "0x08000148" [color="#3a96dd"];
}
