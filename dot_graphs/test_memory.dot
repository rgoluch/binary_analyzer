digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x80009a64" [URL="sym.test_memory/0x80009a64", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; UNKNOWN XREF from obj.testtab @ +0x84\l668: sym.test_memory (int32_t arg1, int32_t arg2);\l; var int32_t var_24h @ sp+0x14\l; var int32_t var_20h @ sp+0x18\l; var int32_t var_1ch @ sp+0x1c\l; var int32_t var_18h @ sp+0x20\l; var int32_t var_14h @ sp+0x24\l; var int32_t var_10h @ sp+0x28\l; var int32_t var_ch @ sp+0x2c\l; var int32_t var_8h @ sp+0x30\l; var int32_t var_4h @ sp+0x34\l; arg int32_t arg1 @ a0\l; arg int32_t arg2 @ a1\l0x80009a64      addiu sp, sp, -0x38\l0x80009a68      lui a1, 0x8001\l0x80009a6c      sw s1, (var_20h)\l0x80009a70      lui s1, 0x8001\l0x80009a74      sw ra, (var_4h)\l0x80009a78      sw s7, (var_8h)\l0x80009a7c      sw s4, (var_14h)\l0x80009a80      sw s0, (var_24h)\l0x80009a84      addiu a1, a1, 0x4bbc                                   ; arg2 ; esilref: 'Allocate small piece'\l0x80009a88      sw s6, (var_ch)\l0x80009a8c      sw s5, (var_10h)\l0x80009a90      sw s3, (var_18h)\l0x80009a94      sw s2, (var_1ch)\l0x80009a98      addiu s1, s1, -0x71bc                                  ; 0x80008e44\l                                                                       ; sym.testPrint ; sym.testPrint\l0x80009a9c      lui s4, 0x8000\l0x80009aa0      move s0, a0\l0x80009aa4      jalr s1\l0x80009aa8      addiu s4, s4, 0x2eb8                                   ; 0x80002eb8 ; \"4\" ; sym.memget\l0x80009aac      jalr s4\l0x80009ab0      addiu a0, zero, 1                                      ; arg1\l0x80009ab4      addiu s7, zero, -1\l0x80009ab8      bne v0, s7, 0x80009ba4\l0x80009abc      lui s3, 0x8001\l"]
	"0x80009ac0" [URL="sym.test_memory/0x80009ac0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009ac0      lui a1, 0x8001\l0x80009ac4      addiu a1, a1, 0x4bd4                                   ; esilref: 'memget SYSERR'\l"]
	"0x80009ac8" [URL="sym.test_memory/0x80009ac8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.test_memory @ 0x80009bbc, 0x80009c04\l0x80009ac8      lui v0, 0x8001\l0x80009acc      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x80009ad0      jalr v0\l0x80009ad4      move a0, s0\l0x80009ad8      move s2, zero\l"]
	"0x80009adc" [URL="sym.test_memory/0x80009adc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009c28\l0x80009adc      lui a1, 0x8001\l0x80009ae0      addiu a1, a1, 0x4c3c                                   ; esilref: 'Allocate 'all' of memory and free'\l0x80009ae4      jalr s1\l0x80009ae8      move a0, s0\l0x80009aec      addiu s5, zero, 0x11\l0x80009af0      move s1, zero\l0x80009af4      lui s3, 0x10\l0x80009af8      addiu s6, zero, -1\l"]
	"0x80009afc" [URL="sym.test_memory/0x80009afc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.test_memory @ 0x80009b10, 0x80009c38\l0x80009afc      jalr s4\l0x80009b00      move a0, s3\l0x80009b04      bne v0, s6, 0x80009c30\l0x80009b08      nop\l"]
	"0x80009b0c" [URL="sym.test_memory/0x80009b0c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009b0c      addiu s5, s5, -1\l0x80009b10      bnez s5, 0x80009afc\l0x80009b14      srl s3, s3, 1\l"]
	"0x80009b18" [URL="sym.test_memory/0x80009b18", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009b18      lui s3, 0x8000\l0x80009b1c      addiu s3, s3, 0x2f94                                   ; 0x80002f94 ; \"N\" ; sym.memfree\l"]
	"0x80009b20" [URL="sym.test_memory/0x80009b20", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009c50\l0x80009b20      bnez s1, 0x80009c40\l0x80009b24      lui v0, 0x8001\l"]
	"0x80009b28" [URL="sym.test_memory/0x80009b28", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009b28      addiu v0, v0, -0x65d4                                  ; 0x80009a2c\l                                                                       ; sym.list_check ; sym.list_check\l0x80009b2c      jalr v0\l0x80009b30      lui s1, 0x8001\l0x80009b34      bnez v0, 0x80009c58\l0x80009b38      move s3, v0\l"]
	"0x80009b3c" [URL="sym.test_memory/0x80009b3c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009b3c      lui a1, 0x8001\l0x80009b40      lui v0, 0x8001\l0x80009b44      addiu a1, a1, 0x4be4                                   \l; esilref: '\l; memlist->length does not match computed free space'\l0x80009b48      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x80009b4c      jalr v0\l0x80009b50      move a0, s0\l"]
	"0x80009b54" [URL="sym.test_memory/0x80009b54", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009c6c\l0x80009b54      lui v0, 0x8000\l0x80009b58      addiu v0, v0, 0x30f0                                   ; 0x800030f0 ; \"3\" ; sym.stkget\l0x80009b5c      jalr v0\l0x80009b60      addiu a0, zero, 1                                      ; arg1\l0x80009b64      addiu s5, zero, -1\l0x80009b68      bne v0, s5, 0x80009c74\l0x80009b6c      move s4, v0\l"]
	"0x80009b70" [URL="sym.test_memory/0x80009b70", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009b70      lui a1, 0x8001\l0x80009b74      addiu a1, a1, 0x4c60                                   \l; esilref: '\l; stkget SYSERR'\l"]
	"0x80009b78" [URL="sym.test_memory/0x80009b78", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009ca4\l0x80009b78      lui v0, 0x8001\l; CALL XREF from sym.shell @ 0x80006660\l0x80009b7c      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x80009b80      jalr v0\l0x80009b84      move a0, s0\l0x80009b88      lui v0, 0x8001\l"]
	"0x80009b8c" [URL="sym.test_memory/0x80009b8c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009cbc\l0x80009b8c      addiu a1, s1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l0x80009b90      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x80009b94      jalr v0\l0x80009b98      addiu a0, zero, 1\l0x80009b9c      b 0x80009cd4\l0x80009ba0      lw ra, (var_4h)\l"]
	"0x80009ba4" [URL="sym.test_memory/0x80009ba4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009ab8\l0x80009ba4      addiu s3, s3, -0x65d4\l0x80009ba8      jalr s3\l0x80009bac      move s5, v0\l0x80009bb0      bnez v0, 0x80009bc4\l0x80009bb4      lui s6, 0x8001\l"]
	"0x80009bb8" [URL="sym.test_memory/0x80009bb8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009bb8      lui a1, 0x8001\l"]
	"0x80009bbc" [URL="sym.test_memory/0x80009bbc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009c14\l0x80009bbc      b 0x80009ac8\l0x80009bc0      addiu a1, a1, 0x4be4                                   \l; arg2 ; esilref: '\l; memlist->length does not match computed free space'\l"]
	"0x80009bc4" [URL="sym.test_memory/0x80009bc4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009bb0\l0x80009bc4      lui s2, 0x8001\l0x80009bc8      addiu a1, s6, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; arg2 ; aav.0x800143fc\l0x80009bcc      addiu s2, s2, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x80009bd0      jalr s2\l0x80009bd4      move a0, s0\l0x80009bd8      lui a1, 0x8001\l0x80009bdc      addiu a1, a1, 0x4c18                                   ; arg2 ; esilref: 'Free small piece'\l0x80009be0      jalr s1\l0x80009be4      move a0, s0\l0x80009be8      lui v0, 0x8000\l0x80009bec      addiu a1, zero, 1                                      ; arg2\l0x80009bf0      addiu v0, v0, 0x2f94                                   ; 0x80002f94 ; \"N\" ; sym.memfree\l0x80009bf4      jalr v0\l0x80009bf8      move a0, s5\l0x80009bfc      bne v0, s7, 0x80009c0c\l0x80009c00      lui a1, 0x8001\l"]
	"0x80009c04" [URL="sym.test_memory/0x80009c04", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009c04      b 0x80009ac8\l0x80009c08      addiu a1, a1, 0x4c2c                                   ; esilref: 'freemem SYSERR'\l"]
	"0x80009c0c" [URL="sym.test_memory/0x80009c0c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009bfc\l0x80009c0c      jalr s3\l0x80009c10      nop\l0x80009c14      beqz v0, 0x80009bbc\l0x80009c18      lui a1, 0x8001\l"]
	"0x80009c1c" [URL="sym.test_memory/0x80009c1c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009c1c      addiu a1, s6, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l0x80009c20      jalr s2\l0x80009c24      move a0, s0\l0x80009c28      b 0x80009adc\l0x80009c2c      addiu s2, zero, 1\l"]
	"0x80009c30" [URL="sym.test_memory/0x80009c30", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009b04\l0x80009c30      sw s1, (v0)\l0x80009c34      sw s3, 4(v0)\l0x80009c38      b 0x80009afc\l0x80009c3c      move s1, v0\l"]
	"0x80009c40" [URL="sym.test_memory/0x80009c40", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009b20\l0x80009c40      lw s4, (s1)                                            ; [0x80002f94:4]=0x10a0004e ; \"N\"\l0x80009c44      lw a1, 4(s1)\l0x80009c48      jalr s3\l0x80009c4c      move a0, s1\l0x80009c50      b 0x80009b20\l0x80009c54      move s1, s4\l"]
	"0x80009c58" [URL="sym.test_memory/0x80009c58", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009b34\l0x80009c58      lui v0, 0x8001\l0x80009c5c      addiu a1, s1, 0x43fc                                   ; arg2\l0x80009c60      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x80009c64      jalr v0\l0x80009c68      move a0, s0\l0x80009c6c      b 0x80009b54\l0x80009c70      move s3, s2\l"]
	"0x80009c74" [URL="sym.test_memory/0x80009c74", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009b68\l0x80009c74      lui s2, 0x8001\l0x80009c78      addiu a1, s1, 0x43fc\l0x80009c7c      addiu s2, s2, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x80009c80      jalr s2\l0x80009c84      move a0, s0\l0x80009c88      lui v0, 0x8000\l0x80009c8c      addiu a1, zero, 8\l0x80009c90      addiu v0, v0, 0x2f94                                   ; 0x80002f94 ; \"N\" ; sym.memfree\l0x80009c94      jalr v0\l0x80009c98      addiu a0, s4, -4\l0x80009c9c      bne v0, s5, 0x80009cac\l0x80009ca0      lui a1, 0x8001\l"]
	"0x80009ca4" [URL="sym.test_memory/0x80009ca4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009ca4      b 0x80009b78\l0x80009ca8      addiu a1, a1, 0x4c70                                   \l; esilref: '\l; stkfree SYSERR'\l"]
	"0x80009cac" [URL="sym.test_memory/0x80009cac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009c9c\l0x80009cac      addiu a1, s1, 0x43fc\l0x80009cb0      jalr s2\l0x80009cb4      move a0, s0\l0x80009cb8      addiu v0, zero, 1\l0x80009cbc      bne s3, v0, 0x80009b8c\l0x80009cc0      lui v0, 0x8001\l"]
	"0x80009cc4" [URL="sym.test_memory/0x80009cc4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80009cc4      addiu a1, s1, 0x43fc\l0x80009cc8      jalr s2\l0x80009ccc      addiu a0, zero, 1\l0x80009cd0      lw ra, (var_4h)\l"]
	"0x80009cd4" [URL="sym.test_memory/0x80009cd4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_memory @ 0x80009b9c\l0x80009cd4      lw s7, (var_8h)\l0x80009cd8      lw s6, (var_ch)\l0x80009cdc      lw s5, (var_10h)\l0x80009ce0      lw s4, (var_14h)\l0x80009ce4      lw s3, (var_18h)\l0x80009ce8      lw s2, (var_1ch)\l0x80009cec      lw s1, (var_20h)\l0x80009cf0      lw s0, (var_24h)\l0x80009cf4      addiu v0, zero, 1\l0x80009cf8      jr ra\l0x80009cfc      addiu sp, sp, 0x38\l"]
        "0x80009a64" -> "0x80009ba4" [color="#13a10e"];
        "0x80009a64" -> "0x80009ac0" [color="#c50f1f"];
        "0x80009ac0" -> "0x80009ac8" [color="#0037da"];
        "0x80009ac8" -> "0x80009adc" [color="#0037da"];
        "0x80009adc" -> "0x80009afc" [color="#0037da"];
        "0x80009afc" -> "0x80009c30" [color="#13a10e"];
        "0x80009afc" -> "0x80009b0c" [color="#c50f1f"];
        "0x80009b0c" -> "0x80009afc" [color="#13a10e"];
        "0x80009b0c" -> "0x80009b18" [color="#c50f1f"];
        "0x80009b18" -> "0x80009b20" [color="#0037da"];
        "0x80009b20" -> "0x80009c40" [color="#13a10e"];
        "0x80009b20" -> "0x80009b28" [color="#c50f1f"];
        "0x80009b28" -> "0x80009c58" [color="#13a10e"];
        "0x80009b28" -> "0x80009b3c" [color="#c50f1f"];
        "0x80009b3c" -> "0x80009b54" [color="#0037da"];
        "0x80009b54" -> "0x80009c74" [color="#13a10e"];
        "0x80009b54" -> "0x80009b70" [color="#c50f1f"];
        "0x80009b70" -> "0x80009b78" [color="#0037da"];
        "0x80009b78" -> "0x80009b8c" [color="#0037da"];
        "0x80009b8c" -> "0x80009cd4" [color="#0037da"];
        "0x80009ba4" -> "0x80009bc4" [color="#13a10e"];
        "0x80009ba4" -> "0x80009bb8" [color="#c50f1f"];
        "0x80009bb8" -> "0x80009bbc" [color="#0037da"];
        "0x80009bbc" -> "0x80009ac8" [color="#0037da"];
        "0x80009bc4" -> "0x80009c0c" [color="#13a10e"];
        "0x80009bc4" -> "0x80009c04" [color="#c50f1f"];
        "0x80009c04" -> "0x80009ac8" [color="#0037da"];
        "0x80009c0c" -> "0x80009bbc" [color="#13a10e"];
        "0x80009c0c" -> "0x80009c1c" [color="#c50f1f"];
        "0x80009c1c" -> "0x80009adc" [color="#0037da"];
        "0x80009c30" -> "0x80009afc" [color="#0037da"];
        "0x80009c40" -> "0x80009b20" [color="#0037da"];
        "0x80009c58" -> "0x80009b54" [color="#0037da"];
        "0x80009c74" -> "0x80009cac" [color="#13a10e"];
        "0x80009c74" -> "0x80009ca4" [color="#c50f1f"];
        "0x80009ca4" -> "0x80009b78" [color="#0037da"];
        "0x80009cac" -> "0x80009b8c" [color="#13a10e"];
        "0x80009cac" -> "0x80009cc4" [color="#c50f1f"];
        "0x80009cc4" -> "0x80009cd4" [color="#0037da"];
}
