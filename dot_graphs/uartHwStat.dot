digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x80004edc" [URL="sym.uartHwStat/0x80004edc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; CALL XREFS from sym.uartStat @ 0x80005730, 0x80005734\l212: sym.uartHwStat (int32_t arg1);\l; var int32_t var_10h @ sp+0x10\l; var int32_t var_ch @ sp+0x14\l; var int32_t var_8h @ sp+0x18\l; var int32_t var_4h @ sp+0x1c\l; arg int32_t arg1 @ a0\l0x80004edc      addiu sp, sp, -0x20\l0x80004ee0      sw s2, (var_8h)\l0x80004ee4      sw s0, (var_10h)\l0x80004ee8      move s2, a0\l0x80004eec      lui s0, 0x8001\l0x80004ef0      lui a0, 0x8001\l0x80004ef4      addiu s0, s0, 0x1c68                                   ; 0x80011c68\l                                                                       ; sym.printf ; sym.printf\l0x80004ef8      addiu a0, a0, 0x3230                                   \l; arg1 ; esilref: '\l; \tINTERRUPT ENABLE:\l; '\l0x80004efc      sw ra, (var_4h)\l0x80004f00      jalr s0\l0x80004f04      sw s1, (var_ch)\l0x80004f08      lui a0, 0x8001\l0x80004f0c      jalr s0\l0x80004f10      addiu a0, a0, 0x3248                                   \l; arg1 ; esilref: '\t------------------------------------------\l; '\l0x80004f14      lbu v0, 1(s2)\l0x80004f18      lui a0, 0x8001\l0x80004f1c      andi v0, v0, 1\l0x80004f20      sll v1, v0, 2\l0x80004f24      lui v0, 0x8001\l0x80004f28      addiu s1, v0, 0x3300                                   ; 0x80013300\l                                                                       ; obj.label.1279 ; obj.label.1279\l0x80004f2c      addu v0, v1, s1\l0x80004f30      lw a1, (v0)\l0x80004f34      jalr s0\l0x80004f38      addiu a0, a0, 0x3278                                   \l; arg1 ; esilref: '\t&s  Receiver FIFO Reached Trigger Level\l; '\l0x80004f3c      lbu v0, 1(s2)\l0x80004f40      lui a0, 0x8001\l0x80004f44      sll v0, v0, 1\l0x80004f48      andi v0, v0, 4\l0x80004f4c      addu v0, v0, s1\l0x80004f50      lw a1, (v0)\l0x80004f54      jalr s0\l0x80004f58      addiu a0, a0, 0x32a4                                   \l; arg1 ; esilref: '\t&s  Transmitter FIFO Empty\l; '\l0x80004f5c      lbu v0, 1(s2)\l0x80004f60      lui a0, 0x8001\l0x80004f64      andi v0, v0, 4\l0x80004f68      addu v0, v0, s1\l0x80004f6c      lw a1, (v0)\l0x80004f70      jalr s0\l0x80004f74      addiu a0, a0, 0x32c4                                   \l; arg1 ; esilref: '\t&s  Receiver Error or BREAK\l; '\l0x80004f78      lbu v0, 1(s2)\l0x80004f7c      lw ra, (var_4h)\l0x80004f80      srl v0, v0, 1\l0x80004f84      andi v0, v0, 4\l0x80004f88      addu v0, v0, s1\l0x80004f8c      lw s2, (var_8h)\l0x80004f90      lw s1, (var_ch)\l0x80004f94      lui a0, 0x8001\l0x80004f98      move t9, s0\l0x80004f9c      lw a1, (v0)\l0x80004fa0      lw s0, (var_10h)\l0x80004fa4      addiu a0, a0, 0x32e4                                   ; arg1 ; esilref: '\t&s  Modem Status'\l0x80004fa8      jr t9\l0x80004fac      addiu sp, sp, 0x20\l"]
}
