digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x80009fa8" [URL="sym.test_bufpool/0x80009fa8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; UNKNOWN XREF from obj.testtab @ +0x8c\l912: sym.test_bufpool (int32_t arg1, int32_t arg2, int32_t arg3);\l; var int32_t var_e8h @ sp+0x10\l; var int32_t var_68h @ sp+0x90\l; var int32_t var_40h @ sp+0xb8\l; var int32_t var_3ch @ sp+0xbc\l; var int32_t var_38h @ sp+0xc0\l; var int32_t var_34h @ sp+0xc4\l; var int32_t var_30h @ sp+0xc8\l; var int32_t var_28h @ sp+0xd0\l; var int32_t var_24h @ sp+0xd4\l; var int32_t var_20h @ sp+0xd8\l; var int32_t var_1ch @ sp+0xdc\l; var int32_t var_18h @ sp+0xe0\l; var int32_t var_14h @ sp+0xe4\l; var int32_t var_10h @ sp+0xe8\l; var int32_t var_ch @ sp+0xec\l; var int32_t var_8h @ sp+0xf0\l; var int32_t var_4h @ sp+0xf4\l; arg int32_t arg1 @ a0\l; arg int32_t arg2 @ a1\l; arg int32_t arg3 @ a2\l0x80009fa8      addiu sp, sp, -0xf8\l0x80009fac      lui a1, 0x8001\l0x80009fb0      lui v0, 0x8001\l0x80009fb4      sw s7, (var_ch)\l0x80009fb8      addiu s7, sp, 0x90\l0x80009fbc      sw ra, (var_4h)\l0x80009fc0      addiu a2, zero, 0x22                                   ; arg3\l0x80009fc4      sw fp, (var_8h)\l0x80009fc8      sw s5, (var_14h)\l0x80009fcc      sw s3, (var_1ch)\l0x80009fd0      sw s2, (var_20h)\l0x80009fd4      sw s1, (var_24h)\l0x80009fd8      sw s0, (var_28h)\l0x80009fdc      addiu a1, a1, 0x4e04                                   ; arg2 ; esilref: 'abcdefghijklmnopqrstuvwxyz1234567'\l0x80009fe0      move s0, a0\l0x80009fe4      addiu v0, v0, 0x1c14                                   ; 0x80011c14 ; \"%\\x10\\x80\" ; sym.memcpy\l0x80009fe8      move a0, s7\l0x80009fec      sw s6, (var_10h)\l0x80009ff0      sw s4, (var_18h)\l0x80009ff4      sw v0, (var_3ch)\l0x80009ff8      jalr v0\l0x80009ffc      lui s3, 0x8001\l0x8000a000      lui a1, 0x8001\l0x8000a004      addiu a1, a1, 0x4c98                                   ; arg2 ; esilref: 'Create buffer pool'\l0x8000a008      addiu s3, s3, -0x71bc                                  ; 0x80008e44\l                                                                       ; sym.testPrint ; sym.testPrint\l0x8000a00c      jalr s3\l0x8000a010      move a0, s0\l0x8000a014      lui v0, 0x8000\l0x8000a018      addiu v0, v0, 0x1318                                   ; 0x80001318\l                                                                       ; loc.disable ; loc.disable\l0x8000a01c      jalr v0\l0x8000a020      sw v0, (var_38h)\l0x8000a024      move s1, v0\l0x8000a028      lui s5, 0x8002\l0x8000a02c      lui v0, 0x8000\l0x8000a030      addiu s5, s5, -0x34c0\l0x8000a034      addiu a0, zero, 0x20                                   ; arg1\l0x8000a038      addiu a1, zero, 0x20                                   ; arg2\l0x8000a03c      addiu v0, v0, 0x31c8                                   ; 0x800031c8\l                                                                       ; sym.bfpalloc ; sym.bfpalloc\l0x8000a040      jalr v0\l0x8000a044      lw s2, 4(s5)\l0x8000a048      move fp, v0\l0x8000a04c      lui v1, 0x8000\l0x8000a050      lw v0, 4(s5)\l0x8000a054      addiu v1, v1, 0x1330                                   ; 0x80001330\l                                                                       ; loc.restore ; loc.restore\l0x8000a058      addiu s2, s2, -0x500\l0x8000a05c      sw v1, (var_40h)\l0x8000a060      beq v0, s2, 0x8000a094\l0x8000a064      move a0, s1\l"]
	"0x8000a068" [URL="sym.test_bufpool/0x8000a068", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a068      move v0, v1\l0x8000a06c      jalr v0\l0x8000a070      nop\l0x8000a074      lui a1, 0x8001\l0x8000a078      addiu a1, a1, 0x4cac                                   \l; esilref: '\l; memlist.length reduction does not match pool size'\l"]
	"0x8000a07c" [URL="sym.test_bufpool/0x8000a07c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.test_bufpool @ 0x8000a24c, 0x8000a2bc\l0x8000a07c      lui v0, 0x8001\l0x8000a080      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000a084      jalr v0\l0x8000a088      addiu a0, zero, 1\l0x8000a08c      b 0x8000a2d0\l0x8000a090      lw ra, (var_4h)\l"]
	"0x8000a094" [URL="sym.test_bufpool/0x8000a094", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a060\l0x8000a094      lw v0, (var_40h)\l0x8000a098      lui s1, 0x8001\l0x8000a09c      jalr v0\l0x8000a0a0      lui s2, 0x8001\l0x8000a0a4      addiu s2, s2, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000a0a8      addiu a1, s1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; arg2 ; aav.0x800143fc\l0x8000a0ac      jalr s2\l0x8000a0b0      move a0, s0\l0x8000a0b4      lui a1, 0x8001\l0x8000a0b8      addiu a1, a1, 0x4ce0                                   ; arg2 ; esilref: 'Allocate single buffer'\l0x8000a0bc      jalr s3\l0x8000a0c0      move a0, s0\l0x8000a0c4      lui v0, 0x8000\l0x8000a0c8      addiu v0, v0, 0x340c                                   ; 0x8000340c\l                                                                       ; sym.bufget ; sym.bufget\l0x8000a0cc      move a0, fp\l0x8000a0d0      sw v0, (var_34h)\l0x8000a0d4      jalr v0\l0x8000a0d8      addiu s6, zero, -1\l0x8000a0dc      bne v0, s6, 0x8000a254\l0x8000a0e0      move s4, v0\l"]
	"0x8000a0e4" [URL="sym.test_bufpool/0x8000a0e4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a0e4      lui a1, 0x8001\l0x8000a0e8      addiu a1, a1, 0x4cf8                                   \l; esilref: '\l; bufget() returns SYSERR'\l"]
	"0x8000a0ec" [URL="sym.test_bufpool/0x8000a0ec", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a288\l0x8000a0ec      lui v0, 0x8001\l0x8000a0f0      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000a0f4      jalr v0\l0x8000a0f8      move a0, s0\l0x8000a0fc      move s4, zero\l"]
	"0x8000a100" [URL="sym.test_bufpool/0x8000a100", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a29c\l0x8000a100      lui a1, 0x8001\l0x8000a104      addiu a1, a1, 0x4d48                                   ; esilref: 'Allocate and fill all buffers'\l0x8000a108      move a0, s0\l0x8000a10c      jalr s3\l0x8000a110      addiu s6, sp, 0x10\l0x8000a114      move v1, s6\l0x8000a118      lw v0, (var_34h)\l"]
	"0x8000a11c" [URL="sym.test_bufpool/0x8000a11c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a154\l0x8000a11c      move a0, fp\l0x8000a120      jalr v0\l0x8000a124      sw v1, (var_30h)\l0x8000a128      lw v1, (var_30h)\l0x8000a12c      move a0, v0\l0x8000a130      sw v0, (v1)\l0x8000a134      addiu v0, zero, -1\l0x8000a138      beq a0, v0, 0x8000a32c\l0x8000a13c      lw v0, (var_3ch)\l"]
	"0x8000a140" [URL="sym.test_bufpool/0x8000a140", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a140      addiu a2, zero, 0x20\l0x8000a144      jalr v0\l0x8000a148      move a1, s7\l0x8000a14c      lw v1, (var_30h)\l0x8000a150      addiu v1, v1, 4\l0x8000a154      bne s7, v1, 0x8000a11c\l0x8000a158      lw v0, (var_34h)\l"]
	"0x8000a15c" [URL="sym.test_bufpool/0x8000a15c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a15c      lui a3, 0x8001\l0x8000a160      move v1, s6\l0x8000a164      addiu a3, a3, 0x1be4                                   ; 0x80011be4 ; \"%\\x18\" ; sym.memcmp\l"]
	"0x8000a168" [URL="sym.test_bufpool/0x8000a168", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a18c\l0x8000a168      lw a0, (v1)\l0x8000a16c      addiu a2, zero, 0x20\l0x8000a170      move a1, s7\l0x8000a174      sw v1, (var_34h)\l0x8000a178      jalr a3\l0x8000a17c      sw a3, (var_3ch)\l0x8000a180      bnez v0, 0x8000a320\l0x8000a184      lw v1, (var_34h)\l"]
	"0x8000a188" [URL="sym.test_bufpool/0x8000a188", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a188      addiu v1, v1, 4\l0x8000a18c      bne s7, v1, 0x8000a168\l0x8000a190      lw a3, (var_3ch)\l"]
	"0x8000a194" [URL="sym.test_bufpool/0x8000a194", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a194      addiu a1, s1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l0x8000a198      jalr s2\l0x8000a19c      move a0, s0\l0x8000a1a0      lui a1, 0x8001\l0x8000a1a4      addiu a1, a1, 0x4dd4                                   ; esilref: 'Free all buffers'\l0x8000a1a8      jalr s3\l0x8000a1ac      move a0, s0\l0x8000a1b0      lui v1, 0x8000\l0x8000a1b4      addiu v1, v1, 0x34b4                                   ; 0x800034b4\l                                                                       ; sym.buffree ; sym.buffree\l"]
	"0x8000a1b8" [URL="sym.test_bufpool/0x8000a1b8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a1d0\l0x8000a1b8      lw a0, (s6)\l0x8000a1bc      jalr v1\l0x8000a1c0      sw v1, (var_3ch)\l0x8000a1c4      addiu a1, zero, -1\l0x8000a1c8      beq v0, a1, 0x8000a300\l0x8000a1cc      addiu s6, s6, 4\l"]
	"0x8000a1d0" [URL="sym.test_bufpool/0x8000a1d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a1d0      bne s7, s6, 0x8000a1b8\l0x8000a1d4      lw v1, (var_3ch)\l"]
	"0x8000a1d8" [URL="sym.test_bufpool/0x8000a1d8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a1d8      addiu a1, s1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l0x8000a1dc      jalr s2\l0x8000a1e0      move a0, s0\l"]
	"0x8000a1e4" [URL="sym.test_bufpool/0x8000a1e4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a318\l0x8000a1e4      lui a1, 0x8001\l0x8000a1e8      addiu a1, a1, 0x4d68                                   ; esilref: 'Free buffer pool'\l0x8000a1ec      jalr s3\l0x8000a1f0      move a0, s0\l0x8000a1f4      lw v0, (var_38h)\l0x8000a1f8      jalr v0\l0x8000a1fc      nop\l0x8000a200      move s3, v0\l0x8000a204      lui v0, 0x8000\l0x8000a208      lw s6, 4(s5)\l0x8000a20c      addiu v0, v0, 0x3324                                   ; 0x80003324\l                                                                       ; sym.bfpfree ; sym.bfpfree\l0x8000a210      jalr v0\l0x8000a214      move a0, fp\l0x8000a218      lw v0, 4(s5)\l0x8000a21c      addiu s6, s6, 0x500\l0x8000a220      beq v0, s6, 0x8000a2a4\l0x8000a224      move a0, s3\l"]
	"0x8000a228" [URL="sym.test_bufpool/0x8000a228", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a228      lw v0, (var_40h)\l0x8000a22c      jalr v0\l0x8000a230      nop\l0x8000a234      lui a1, 0x8001\l0x8000a238      lui v0, 0x8001\l0x8000a23c      addiu a1, a1, 0x4d7c                                   \l; esilref: '\l; memlist.length increase does not match pool size'\l0x8000a240      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000a244      jalr v0\l0x8000a248      move a0, s0\l0x8000a24c      b 0x8000a07c\l0x8000a250      addiu a1, s1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l"]
	"0x8000a254" [URL="sym.test_bufpool/0x8000a254", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a0dc\l0x8000a254      addiu a1, s1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; arg2 ; aav.0x800143fc\l0x8000a258      jalr s2\l0x8000a25c      move a0, s0\l0x8000a260      lui a1, 0x8001\l0x8000a264      move a0, s0\l0x8000a268      jalr s3\l0x8000a26c      addiu a1, a1, 0x4d14                                   ; esilref: 'Return single buffer'\l0x8000a270      lui v0, 0x8000\l0x8000a274      addiu v0, v0, 0x34b4                                   ; 0x800034b4\l                                                                       ; sym.buffree ; sym.buffree\l0x8000a278      jalr v0\l0x8000a27c      move a0, s4\l0x8000a280      bne v0, s6, 0x8000a290\l0x8000a284      lui a1, 0x8001\l"]
	"0x8000a288" [URL="sym.test_bufpool/0x8000a288", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a288      b 0x8000a0ec\l0x8000a28c      addiu a1, a1, 0x4d2c                                   \l; esilref: '\l; buffree() returns SYSERR'\l"]
	"0x8000a290" [URL="sym.test_bufpool/0x8000a290", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a280\l0x8000a290      addiu a1, s1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l0x8000a294      jalr s2\l0x8000a298      move a0, s0\l0x8000a29c      b 0x8000a100\l0x8000a2a0      addiu s4, zero, 1\l"]
	"0x8000a2a4" [URL="sym.test_bufpool/0x8000a2a4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a220\l0x8000a2a4      lw v0, (var_40h)\l0x8000a2a8      jalr v0\l0x8000a2ac      nop\l0x8000a2b0      addiu a1, s1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l0x8000a2b4      jalr s2\l0x8000a2b8      move a0, s0\l0x8000a2bc      beqz s4, 0x8000a07c\l0x8000a2c0      addiu a1, s1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l"]
	"0x8000a2c4" [URL="sym.test_bufpool/0x8000a2c4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000a2c4      jalr s2\l0x8000a2c8      addiu a0, zero, 1\l0x8000a2cc      lw ra, (var_4h)\l"]
	"0x8000a2d0" [URL="sym.test_bufpool/0x8000a2d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a08c\l0x8000a2d0      lw fp, (var_8h)\l0x8000a2d4      lw s7, (var_ch)\l0x8000a2d8      lw s6, (var_10h)\l0x8000a2dc      lw s5, (var_14h)\l0x8000a2e0      lw s4, (var_18h)\l0x8000a2e4      lw s3, (var_1ch)\l0x8000a2e8      lw s2, (var_20h)\l0x8000a2ec      lw s1, (var_24h)\l0x8000a2f0      lw s0, (var_28h)\l0x8000a2f4      addiu v0, zero, 1\l0x8000a2f8      jr ra\l0x8000a2fc      addiu sp, sp, 0xf8\l"]
	"0x8000a300" [URL="sym.test_bufpool/0x8000a300", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a1c8\l0x8000a300      lui a1, 0x8001\l0x8000a304      addiu a1, a1, 0x4d2c                                   \l; esilref: '\l; buffree() returns SYSERR'\l"]
	"0x8000a308" [URL="sym.test_bufpool/0x8000a308", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.test_bufpool @ 0x8000a324, 0x8000a330\l0x8000a308      lui v0, 0x8001\l0x8000a30c      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000a310      jalr v0\l0x8000a314      move a0, s0\l0x8000a318      b 0x8000a1e4\l0x8000a31c      move s4, zero\l"]
	"0x8000a320" [URL="sym.test_bufpool/0x8000a320", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a180\l0x8000a320      lui a1, 0x8001\l0x8000a324      b 0x8000a308\l0x8000a328      addiu a1, a1, 0x4db0                                   \l; esilref: '\l; buffer data does not match source'\l"]
	"0x8000a32c" [URL="sym.test_bufpool/0x8000a32c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_bufpool @ 0x8000a138\l0x8000a32c      lui a1, 0x8001\l0x8000a330      b 0x8000a308\l0x8000a334      addiu a1, a1, 0x4de8                                   \l; esilref: '\l; getbuf() returns SYSERR'\l"]
        "0x80009fa8" -> "0x8000a094" [color="#13a10e"];
        "0x80009fa8" -> "0x8000a068" [color="#c50f1f"];
        "0x8000a068" -> "0x8000a07c" [color="#0037da"];
        "0x8000a07c" -> "0x8000a2d0" [color="#0037da"];
        "0x8000a094" -> "0x8000a254" [color="#13a10e"];
        "0x8000a094" -> "0x8000a0e4" [color="#c50f1f"];
        "0x8000a0e4" -> "0x8000a0ec" [color="#0037da"];
        "0x8000a0ec" -> "0x8000a100" [color="#0037da"];
        "0x8000a100" -> "0x8000a11c" [color="#0037da"];
        "0x8000a11c" -> "0x8000a32c" [color="#13a10e"];
        "0x8000a11c" -> "0x8000a140" [color="#c50f1f"];
        "0x8000a140" -> "0x8000a11c" [color="#13a10e"];
        "0x8000a140" -> "0x8000a15c" [color="#c50f1f"];
        "0x8000a15c" -> "0x8000a168" [color="#0037da"];
        "0x8000a168" -> "0x8000a320" [color="#13a10e"];
        "0x8000a168" -> "0x8000a188" [color="#c50f1f"];
        "0x8000a188" -> "0x8000a168" [color="#13a10e"];
        "0x8000a188" -> "0x8000a194" [color="#c50f1f"];
        "0x8000a194" -> "0x8000a1b8" [color="#0037da"];
        "0x8000a1b8" -> "0x8000a300" [color="#13a10e"];
        "0x8000a1b8" -> "0x8000a1d0" [color="#c50f1f"];
        "0x8000a1d0" -> "0x8000a1b8" [color="#13a10e"];
        "0x8000a1d0" -> "0x8000a1d8" [color="#c50f1f"];
        "0x8000a1d8" -> "0x8000a1e4" [color="#0037da"];
        "0x8000a1e4" -> "0x8000a2a4" [color="#13a10e"];
        "0x8000a1e4" -> "0x8000a228" [color="#c50f1f"];
        "0x8000a228" -> "0x8000a07c" [color="#0037da"];
        "0x8000a254" -> "0x8000a290" [color="#13a10e"];
        "0x8000a254" -> "0x8000a288" [color="#c50f1f"];
        "0x8000a288" -> "0x8000a0ec" [color="#0037da"];
        "0x8000a290" -> "0x8000a100" [color="#0037da"];
        "0x8000a2a4" -> "0x8000a07c" [color="#13a10e"];
        "0x8000a2a4" -> "0x8000a2c4" [color="#c50f1f"];
        "0x8000a2c4" -> "0x8000a2d0" [color="#0037da"];
        "0x8000a300" -> "0x8000a308" [color="#0037da"];
        "0x8000a308" -> "0x8000a1e4" [color="#0037da"];
        "0x8000a320" -> "0x8000a308" [color="#0037da"];
        "0x8000a32c" -> "0x8000a308" [color="#0037da"];
}
