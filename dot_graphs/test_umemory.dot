digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x8000f314" [URL="sym.test_umemory/0x8000f314", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; UNKNOWN XREF from obj.testtab @ +0xfc\l748: sym.test_umemory (int32_t arg1, int32_t arg2);\l; var int32_t var_24h @ sp+0x14\l; var int32_t var_20h @ sp+0x18\l; var int32_t var_1ch @ sp+0x1c\l; var int32_t var_18h @ sp+0x20\l; var int32_t var_14h @ sp+0x24\l; var int32_t var_10h @ sp+0x28\l; var int32_t var_ch @ sp+0x2c\l; var int32_t var_8h @ sp+0x30\l; var int32_t var_4h @ sp+0x34\l; arg int32_t arg1 @ a0\l; arg int32_t arg2 @ a1\l0x8000f314      addiu sp, sp, -0x38\l0x8000f318      lui a1, 0x8001\l0x8000f31c      sw s1, (var_20h)\l0x8000f320      lui s1, 0x8001\l0x8000f324      sw s2, (var_1ch)\l0x8000f328      sw s0, (var_24h)\l0x8000f32c      sw ra, (var_4h)\l0x8000f330      sw s7, (var_8h)\l0x8000f334      sw s6, (var_ch)\l0x8000f338      sw s5, (var_10h)\l0x8000f33c      sw s4, (var_14h)\l0x8000f340      sw s3, (var_18h)\l0x8000f344      addiu a1, a1, 0x6ee0                                   ; arg2 ; esilref: 'malloc(0)'\l0x8000f348      addiu s1, s1, -0x71bc                                  ; 0x80008e44\l                                                                       ; sym.testPrint ; sym.testPrint\l0x8000f34c      lui s2, 0x8001\l0x8000f350      move s0, a0\l0x8000f354      jalr s1\l0x8000f358      addiu s2, s2, 0x21fc                                   ; 0x800121fc\l                                                                       ; sym.malloc ; sym.malloc\l0x8000f35c      jalr s2\l0x8000f360      move a0, zero\l0x8000f364      beqz v0, 0x8000f4c8\l0x8000f368      lui v0, 0x8001\l"]
	"0x8000f36c" [URL="sym.test_umemory/0x8000f36c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000f36c      lui a1, 0x8001\l0x8000f370      addiu a1, a1, 0x6eec                                   ; esilref: 'Non-NULL pointer detected'\l0x8000f374      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000f378      jalr v0\l0x8000f37c      move a0, s0\l0x8000f380      lui a1, 0x8001\l0x8000f384      lui a0, 0x8001\l0x8000f388      lui v0, 0x8001\l0x8000f38c      addiu a2, zero, 0x16\l0x8000f390      addiu a1, a1, 0x6f08                                   ; esilref: '../test/test_umemory.c'\l0x8000f394      addiu v0, v0, 0x1c68                                   ; 0x80011c68\l                                                                       ; sym.printf ; sym.printf\l0x8000f398      jalr v0\l0x8000f39c      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000f3a0      move s3, zero\l"]
	"0x8000f3a4" [URL="sym.test_umemory/0x8000f3a4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f4e0\l0x8000f3a4      lui a1, 0x8001\l0x8000f3a8      move a0, s0\l0x8000f3ac      jalr s1\l0x8000f3b0      addiu a1, a1, 0x6f20                                   ; arg2 ; esilref: 'malloc(2147483647)'\l0x8000f3b4      lui a0, 0x7fff\l0x8000f3b8      jalr s2\l0x8000f3bc      ori a0, a0, 0xffff                                     ; arg1\l0x8000f3c0      beqz v0, 0x8000f4e8\l0x8000f3c4      lui v0, 0x8001\l"]
	"0x8000f3c8" [URL="sym.test_umemory/0x8000f3c8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000f3c8      lui a1, 0x8001\l0x8000f3cc      addiu a1, a1, 0x6f34                                   ; esilref: 'Too much memory.'\l0x8000f3d0      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000f3d4      jalr v0\l0x8000f3d8      move a0, s0\l0x8000f3dc      lui a1, 0x8001\l0x8000f3e0      lui a0, 0x8001\l0x8000f3e4      lui v0, 0x8001\l0x8000f3e8      addiu a2, zero, 0x1b\l0x8000f3ec      addiu a1, a1, 0x6f08                                   ; esilref: '../test/test_umemory.c'\l0x8000f3f0      addiu v0, v0, 0x1c68                                   ; 0x80011c68\l                                                                       ; sym.printf ; sym.printf\l0x8000f3f4      jalr v0\l0x8000f3f8      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000f3fc      move s3, zero\l0x8000f400      lui a1, 0x8001\l"]
	"0x8000f404" [URL="sym.test_umemory/0x8000f404", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f500\l0x8000f404      addiu a1, a1, 0x4bbc                                   ; arg2 ; esilref: 'Allocate small piece'\l0x8000f408      jalr s1\l0x8000f40c      move a0, s0\l0x8000f410      jalr s2\l0x8000f414      addiu a0, zero, 1                                      ; arg1\l0x8000f418      bnez v0, 0x8000f508\l0x8000f41c      move s6, v0\l"]
	"0x8000f420" [URL="sym.test_umemory/0x8000f420", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000f420      lui a1, 0x8001\l0x8000f424      addiu a1, a1, 0x6f48                                   ; esilref: 'malloc NULL'\l"]
	"0x8000f428" [URL="sym.test_umemory/0x8000f428", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f524\l0x8000f428      lui v0, 0x8001\l0x8000f42c      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000f430      jalr v0\l0x8000f434      move a0, s0\l0x8000f438      move s3, zero\l0x8000f43c      lui a1, 0x8001\l"]
	"0x8000f440" [URL="sym.test_umemory/0x8000f440", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f57c\l0x8000f440      addiu a1, a1, 0x4c3c                                   ; esilref: 'Allocate 'all' of memory and free'\l0x8000f444      jalr s1\l0x8000f448      move a0, s0\l0x8000f44c      addiu s5, zero, 0x11\l0x8000f450      move s1, zero\l0x8000f454      lui s4, 0x10\l"]
	"0x8000f458" [URL="sym.test_umemory/0x8000f458", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.test_umemory @ 0x8000f46c, 0x8000f58c\l0x8000f458      jalr s2\l0x8000f45c      move a0, s4\l0x8000f460      bnez v0, 0x8000f584\l0x8000f464      nop\l"]
	"0x8000f468" [URL="sym.test_umemory/0x8000f468", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000f468      addiu s5, s5, -1\l0x8000f46c      bnez s5, 0x8000f458\l0x8000f470      srl s4, s4, 1\l"]
	"0x8000f474" [URL="sym.test_umemory/0x8000f474", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000f474      lui s2, 0x8001\l0x8000f478      addiu s2, s2, 0x225c                                   ; 0x8001225c ; \"%\\x10\\x80\" ; sym.free\l"]
	"0x8000f47c" [URL="sym.test_umemory/0x8000f47c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f5a0\l0x8000f47c      bnez s1, 0x8000f594\l0x8000f480      lui v0, 0x8001\l"]
	"0x8000f484" [URL="sym.test_umemory/0x8000f484", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000f484      addiu v0, v0, -0xd58                                   ; 0x8000f2a8\l                                                                       ; sym.list_check_1 ; sym.list_check_1\l0x8000f488      jalr v0\l0x8000f48c      lui s1, 0x8001\l0x8000f490      bnez v0, 0x8000f5a8\l0x8000f494      lui a1, 0x8001\l"]
	"0x8000f498" [URL="sym.test_umemory/0x8000f498", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000f498      lui v0, 0x8001\l0x8000f49c      addiu a1, a1, 0x6f54                                   \l; esilref: '\l; length does not match computed free space'\l0x8000f4a0      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000f4a4      jalr v0\l0x8000f4a8      move a0, s0\l0x8000f4ac      lui v0, 0x8001\l"]
	"0x8000f4b0" [URL="sym.test_umemory/0x8000f4b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f5bc\l0x8000f4b0      addiu a1, s1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l0x8000f4b4      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000f4b8      jalr v0\l0x8000f4bc      addiu a0, zero, 1\l0x8000f4c0      b 0x8000f5d4\l0x8000f4c4      lw ra, (var_4h)\l"]
	"0x8000f4c8" [URL="sym.test_umemory/0x8000f4c8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f364\l0x8000f4c8      lui a1, 0x8001\l0x8000f4cc      lui v0, 0x8001\l0x8000f4d0      addiu a1, a1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; arg2 ; aav.0x800143fc\l0x8000f4d4      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000f4d8      jalr v0\l0x8000f4dc      move a0, s0\l0x8000f4e0      b 0x8000f3a4\l0x8000f4e4      addiu s3, zero, 1\l"]
	"0x8000f4e8" [URL="sym.test_umemory/0x8000f4e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f3c0\l0x8000f4e8      lui a1, 0x8001\l0x8000f4ec      lui v0, 0x8001\l0x8000f4f0      addiu a1, a1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; arg2 ; aav.0x800143fc\l0x8000f4f4      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000f4f8      jalr v0\l0x8000f4fc      move a0, s0\l0x8000f500      b 0x8000f404\l0x8000f504      lui a1, 0x8001\l"]
	"0x8000f508" [URL="sym.test_umemory/0x8000f508", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f418\l0x8000f508      lui s5, 0x8001\l0x8000f50c      addiu s5, s5, -0xd58\l0x8000f510      jalr s5\l; CALL XREF from sym.test_umemory @ 0x8000f510\l0x8000f514      nop\l0x8000f518      bnez v0, 0x8000f52c\l0x8000f51c      lui s7, 0x8001\l"]
	"0x8000f520" [URL="sym.test_umemory/0x8000f520", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f568\l0x8000f520      lui a1, 0x8001\l0x8000f524      b 0x8000f428\l0x8000f528      addiu a1, a1, 0x6f54                                   \l; esilref: '\l; length does not match computed free space'\l"]
	"0x8000f52c" [URL="sym.test_umemory/0x8000f52c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f518\l0x8000f52c      lui s4, 0x8001\l0x8000f530      addiu a1, s7, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; arg2 ; aav.0x800143fc\l0x8000f534      addiu s4, s4, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000f538      jalr s4\l0x8000f53c      move a0, s0\l0x8000f540      lui a1, 0x8001\l0x8000f544      addiu a1, a1, 0x4c18                                   ; esilref: 'Free small piece'\l0x8000f548      jalr s1\l0x8000f54c      move a0, s0\l0x8000f550      lui v0, 0x8001\l0x8000f554      addiu v0, v0, 0x225c                                   ; 0x8001225c ; \"%\\x10\\x80\" ; sym.free\l0x8000f558      jalr v0\l0x8000f55c      move a0, s6\l0x8000f560      jalr s5\l; CALL XREF from sym.test_umemory @ 0x8000f560\l0x8000f564      nop\l0x8000f568      beqz v0, 0x8000f520\l0x8000f56c      nop\l"]
	"0x8000f570" [URL="sym.test_umemory/0x8000f570", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000f570      addiu a1, s7, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l0x8000f574      jalr s4\l0x8000f578      move a0, s0\l0x8000f57c      b 0x8000f440\l0x8000f580      lui a1, 0x8001\l"]
	"0x8000f584" [URL="sym.test_umemory/0x8000f584", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f460\l0x8000f584      sw s1, (v0)\l0x8000f588      sw s4, 4(v0)\l0x8000f58c      b 0x8000f458\l0x8000f590      move s1, v0\l"]
	"0x8000f594" [URL="sym.test_umemory/0x8000f594", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f47c\l0x8000f594      lw s4, (s1)                                            ; [0x8001225c:4]=0x801025 ; \"%\\x10\\x80\"\l0x8000f598      jalr s2\l0x8000f59c      move a0, s1\l0x8000f5a0      b 0x8000f47c\l0x8000f5a4      move s1, s4\l"]
	"0x8000f5a8" [URL="sym.test_umemory/0x8000f5a8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f490\l0x8000f5a8      move a0, s0\l0x8000f5ac      lui s0, 0x8001\l0x8000f5b0      addiu s0, s0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000f5b4      jalr s0\l0x8000f5b8      addiu a1, s1, 0x43fc\l0x8000f5bc      beqz s3, 0x8000f4b0\l0x8000f5c0      lui v0, 0x8001\l"]
	"0x8000f5c4" [URL="sym.test_umemory/0x8000f5c4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000f5c4      addiu a1, s1, 0x43fc\l0x8000f5c8      jalr s0\l0x8000f5cc      addiu a0, zero, 1\l0x8000f5d0      lw ra, (var_4h)\l"]
	"0x8000f5d4" [URL="sym.test_umemory/0x8000f5d4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_umemory @ 0x8000f4c0\l0x8000f5d4      lw s7, (var_8h)\l0x8000f5d8      lw s6, (var_ch)\l0x8000f5dc      lw s5, (var_10h)\l0x8000f5e0      lw s4, (var_14h)\l0x8000f5e4      lw s3, (var_18h)\l0x8000f5e8      lw s2, (var_1ch)\l0x8000f5ec      lw s1, (var_20h)\l0x8000f5f0      lw s0, (var_24h)\l0x8000f5f4      addiu v0, zero, 1\l0x8000f5f8      jr ra\l0x8000f5fc      addiu sp, sp, 0x38\l"]
        "0x8000f314" -> "0x8000f4c8" [color="#13a10e"];
        "0x8000f314" -> "0x8000f36c" [color="#c50f1f"];
        "0x8000f36c" -> "0x8000f3a4" [color="#0037da"];
        "0x8000f3a4" -> "0x8000f4e8" [color="#13a10e"];
        "0x8000f3a4" -> "0x8000f3c8" [color="#c50f1f"];
        "0x8000f3c8" -> "0x8000f404" [color="#0037da"];
        "0x8000f404" -> "0x8000f508" [color="#13a10e"];
        "0x8000f404" -> "0x8000f420" [color="#c50f1f"];
        "0x8000f420" -> "0x8000f428" [color="#0037da"];
        "0x8000f428" -> "0x8000f440" [color="#0037da"];
        "0x8000f440" -> "0x8000f458" [color="#0037da"];
        "0x8000f458" -> "0x8000f584" [color="#13a10e"];
        "0x8000f458" -> "0x8000f468" [color="#c50f1f"];
        "0x8000f468" -> "0x8000f458" [color="#13a10e"];
        "0x8000f468" -> "0x8000f474" [color="#c50f1f"];
        "0x8000f474" -> "0x8000f47c" [color="#0037da"];
        "0x8000f47c" -> "0x8000f594" [color="#13a10e"];
        "0x8000f47c" -> "0x8000f484" [color="#c50f1f"];
        "0x8000f484" -> "0x8000f5a8" [color="#13a10e"];
        "0x8000f484" -> "0x8000f498" [color="#c50f1f"];
        "0x8000f498" -> "0x8000f4b0" [color="#0037da"];
        "0x8000f4b0" -> "0x8000f5d4" [color="#0037da"];
        "0x8000f4c8" -> "0x8000f3a4" [color="#0037da"];
        "0x8000f4e8" -> "0x8000f404" [color="#0037da"];
        "0x8000f508" -> "0x8000f52c" [color="#13a10e"];
        "0x8000f508" -> "0x8000f520" [color="#c50f1f"];
        "0x8000f520" -> "0x8000f428" [color="#0037da"];
        "0x8000f52c" -> "0x8000f520" [color="#13a10e"];
        "0x8000f52c" -> "0x8000f570" [color="#c50f1f"];
        "0x8000f570" -> "0x8000f440" [color="#0037da"];
        "0x8000f584" -> "0x8000f458" [color="#0037da"];
        "0x8000f594" -> "0x8000f47c" [color="#0037da"];
        "0x8000f5a8" -> "0x8000f4b0" [color="#13a10e"];
        "0x8000f5a8" -> "0x8000f5c4" [color="#c50f1f"];
        "0x8000f5c4" -> "0x8000f5d4" [color="#0037da"];
}
