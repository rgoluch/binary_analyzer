digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x8000cdfc" [URL="sym.test_libStdio/0x8000cdfc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; UNKNOWN XREF from obj.testtab @ +0x54\l4112: sym.test_libStdio (int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg_54h, int32_t arg_98h, int32_t arg_9ch, int32_t arg_a0h, int32_t arg_a4h, int32_t arg_a8h, int32_t arg_ach, int32_t arg_b0h, int32_t arg_b4h, int32_t arg_b8h, int32_t arg_bch);\l; arg int32_t arg_54h @ fp+0x54\l; arg int32_t arg_98h @ fp+0x98\l; arg int32_t arg_9ch @ fp+0x9c\l; arg int32_t arg_a0h @ fp+0xa0\l; arg int32_t arg_a4h @ fp+0xa4\l; arg int32_t arg_a8h @ fp+0xa8\l; arg int32_t arg_ach @ fp+0xac\l; arg int32_t arg_b0h @ fp+0xb0\l; arg int32_t arg_b4h @ fp+0xb4\l; arg int32_t arg_b8h @ fp+0xb8\l; arg int32_t arg_bch @ fp+0xbc\l; var int32_t var_128h @ sp+0x10\l; var int32_t var_124h @ sp+0x14\l; var int32_t var_120h @ sp+0x18\l; var int32_t var_28h @ sp+0x110\l; var int32_t var_24h @ sp+0x114\l; var int32_t var_20h @ sp+0x118\l; var int32_t var_1ch @ sp+0x11c\l; var int32_t var_18h @ sp+0x120\l; var int32_t var_14h @ sp+0x124\l; var int32_t var_10h @ sp+0x128\l; var int32_t var_ch @ sp+0x12c\l; var int32_t var_8h @ sp+0x130\l; var int32_t var_4h @ sp+0x134\l; arg int32_t arg1 @ a0\l; arg int32_t arg2 @ a1\l; arg int32_t arg3 @ a2\l0x8000cdfc      addiu sp, sp, -0x138\l0x8000ce00      lui v0, 0x8000\l0x8000ce04      addiu v0, v0, 0x38f0                                   ; 0x800038f0\l                                                                       ; sym.open ; sym.open\l0x8000ce08      sw fp, (var_8h)\l0x8000ce0c      sw s5, (var_14h)\l0x8000ce10      sw s2, (var_20h)\l0x8000ce14      sw s0, (var_28h)\l0x8000ce18      sw ra, (var_4h)\l0x8000ce1c      sw s7, (var_ch)\l0x8000ce20      sw s6, (var_10h)\l0x8000ce24      sw s4, (var_18h)\l0x8000ce28      sw s3, (var_1ch)\l0x8000ce2c      sw s1, (var_24h)\l0x8000ce30      move fp, sp\l0x8000ce34      move s5, a0\l0x8000ce38      jalr v0\l0x8000ce3c      addiu a0, zero, 2                                      ; arg1\l0x8000ce40      lui s0, 0x8001\l0x8000ce44      addiu v1, zero, -1\l0x8000ce48      addiu s0, s0, 0x1c68                                   ; 0x80011c68\l                                                                       ; sym.printf ; sym.printf\l0x8000ce4c      bne v0, v1, 0x8000e074\l0x8000ce50      lui s2, 0x8001\l"]
	"0x8000ce54" [URL="sym.test_libStdio/0x8000ce54", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000ce54      lui a1, 0x8001\l0x8000ce58      lui v0, 0x8001\l0x8000ce5c      addiu a1, a1, 0x56ec                                   ; esilref: 'failed to open loopback device'\l0x8000ce60      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000ce64      jalr v0\l0x8000ce68      move a0, s5\l0x8000ce6c      lui a1, 0x8001\l0x8000ce70      lui a0, 0x8001\l0x8000ce74      addiu a2, zero, 0x20\l0x8000ce78      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000ce7c      jalr s0\l0x8000ce80      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000ce84      move s7, zero\l"]
	"0x8000ce88" [URL="sym.test_libStdio/0x8000ce88", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e088\l0x8000ce88      lui v0, 0x8000\l0x8000ce8c      move a3, zero\l0x8000ce90      addiu a2, zero, 1                                      ; arg3\l0x8000ce94      addiu a1, zero, 1                                      ; arg2\l0x8000ce98      addiu v0, v0, 0x3890                                   ; 0x80003890\l                                                                       ; sym.control ; sym.control\l0x8000ce9c      jalr v0\l0x8000cea0      addiu a0, zero, 2                                      ; arg1\l0x8000cea4      addiu v1, zero, -1\l0x8000cea8      bne v0, v1, 0x8000e090\l0x8000ceac      lui v0, 0x8001\l"]
	"0x8000ceb0" [URL="sym.test_libStdio/0x8000ceb0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000ceb0      lui a1, 0x8001\l0x8000ceb4      lui v0, 0x8001\l0x8000ceb8      addiu a1, a1, 0x5724                                   ; esilref: 'failed to set loopback device to nonblocking'\l0x8000cebc      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000cec0      jalr v0\l0x8000cec4      move a0, s5\l0x8000cec8      lui a1, 0x8001\l0x8000cecc      lui a0, 0x8001\l0x8000ced0      addiu a2, zero, 0x23\l0x8000ced4      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000ced8      jalr s0\l0x8000cedc      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000cee0      move s7, zero\l0x8000cee4      lui a1, 0x8001\l"]
	"0x8000cee8" [URL="sym.test_libStdio/0x8000cee8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e0a0\l0x8000cee8      lui v0, 0x8001\l0x8000ceec      addiu v0, v0, -0x71bc                                  ; 0x80008e44\l                                                                       ; sym.testPrint ; sym.testPrint\l0x8000cef0      addiu a1, a1, 0x5754                                   ; arg2 ; esilref: 'fgetc, fputc: basic functionality'\l0x8000cef4      move a0, s5\l0x8000cef8      jalr v0\l0x8000cefc      sw v0, (arg_98h)\l0x8000cf00      lui v0, 0x8001\l0x8000cf04      addiu v0, v0, 0x1a44                                   ; 0x80011a44 ; \"%\\x10\\xa0\" ; sym.fputc\l0x8000cf08      addiu a1, zero, 2                                      ; arg2\l0x8000cf0c      addiu a0, zero, 0x61\l0x8000cf10      jalr v0\l0x8000cf14      sw v0, (arg_a4h)\l0x8000cf18      addiu v1, zero, 0x61\l0x8000cf1c      beq v0, v1, 0x8000e0a8\l0x8000cf20      lui a1, 0x8001\l"]
	"0x8000cf24" [URL="sym.test_libStdio/0x8000cf24", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000cf24      lui v0, 0x8001\l0x8000cf28      addiu a1, a1, 0x5778                                   ; esilref: 'fputc failed to return put character'\l0x8000cf2c      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000cf30      jalr v0\l0x8000cf34      move a0, s5\l0x8000cf38      lui a1, 0x8001\l0x8000cf3c      lui a0, 0x8001\l0x8000cf40      addiu a2, zero, 0x2a\l0x8000cf44      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000cf48      jalr s0\l0x8000cf4c      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000cf50      move s7, zero\l0x8000cf54      lw v0, (arg_a4h)\l"]
	"0x8000cf58" [URL="sym.test_libStdio/0x8000cf58", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e0bc\l0x8000cf58      addiu a1, zero, 2\l0x8000cf5c      jalr v0\l0x8000cf60      addiu a0, zero, 0xa\l0x8000cf64      addiu v1, zero, 0xa\l0x8000cf68      beq v0, v1, 0x8000e0c4\l0x8000cf6c      lui a1, 0x8001\l"]
	"0x8000cf70" [URL="sym.test_libStdio/0x8000cf70", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000cf70      lui v0, 0x8001\l0x8000cf74      addiu a1, a1, 0x5778                                   ; esilref: 'fputc failed to return put character'\l0x8000cf78      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000cf7c      jalr v0\l0x8000cf80      move a0, s5\l0x8000cf84      lui a1, 0x8001\l0x8000cf88      lui a0, 0x8001\l0x8000cf8c      addiu a2, zero, 0x2c\l0x8000cf90      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000cf94      jalr s0\l0x8000cf98      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000cf9c      move s7, zero\l0x8000cfa0      lw v0, (arg_a4h)\l"]
	"0x8000cfa4" [URL="sym.test_libStdio/0x8000cfa4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e0d8\l0x8000cfa4      addiu a1, zero, 2\l0x8000cfa8      jalr v0\l0x8000cfac      addiu a0, zero, 4\l0x8000cfb0      addiu v1, zero, 4\l0x8000cfb4      beq v0, v1, 0x8000e0e0\l0x8000cfb8      lui a1, 0x8001\l"]
	"0x8000cfbc" [URL="sym.test_libStdio/0x8000cfbc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000cfbc      lui v0, 0x8001\l0x8000cfc0      addiu a1, a1, 0x5778                                   ; esilref: 'fputc failed to return put character'\l0x8000cfc4      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000cfc8      jalr v0\l0x8000cfcc      move a0, s5\l0x8000cfd0      lui a1, 0x8001\l0x8000cfd4      lui a0, 0x8001\l0x8000cfd8      addiu a2, zero, 0x2e\l0x8000cfdc      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000cfe0      jalr s0\l0x8000cfe4      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000cfe8      move s7, zero\l0x8000cfec      lui v0, 0x8001\l"]
	"0x8000cff0" [URL="sym.test_libStdio/0x8000cff0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e0f4\l0x8000cff0      addiu v0, v0, 0x1904                                   ; 0x80011904\l                                                                       ; sym.fgetc ; sym.fgetc\l0x8000cff4      addiu a0, zero, 2\l0x8000cff8      jalr v0\l0x8000cffc      sw v0, (arg_a0h)\l0x8000d000      addiu v1, zero, 0x61\l0x8000d004      beq v0, v1, 0x8000e0fc\l0x8000d008      lui a1, 0x8001\l"]
	"0x8000d00c" [URL="sym.test_libStdio/0x8000d00c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d00c      lui v0, 0x8001\l0x8000d010      addiu a1, a1, 0x57a0                                   ; esilref: 'fgetc failed to return character'\l0x8000d014      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d018      jalr v0\l0x8000d01c      move a0, s5\l0x8000d020      lui a1, 0x8001\l0x8000d024      lui a0, 0x8001\l0x8000d028      addiu a2, zero, 0x30\l0x8000d02c      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d030      jalr s0\l0x8000d034      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d038      move s7, zero\l0x8000d03c      lw v0, (arg_a0h)\l"]
	"0x8000d040" [URL="sym.test_libStdio/0x8000d040", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e110\l0x8000d040      jalr v0\l0x8000d044      addiu a0, zero, 2\l0x8000d048      addiu v1, zero, 0xa\l0x8000d04c      beq v0, v1, 0x8000e118\l0x8000d050      lui a1, 0x8001\l"]
	"0x8000d054" [URL="sym.test_libStdio/0x8000d054", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d054      lui v0, 0x8001\l0x8000d058      addiu a1, a1, 0x57a0                                   ; esilref: 'fgetc failed to return character'\l0x8000d05c      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d060      jalr v0\l0x8000d064      move a0, s5\l0x8000d068      lui a1, 0x8001\l0x8000d06c      lui a0, 0x8001\l0x8000d070      addiu a2, zero, 0x32\l0x8000d074      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d078      jalr s0\l0x8000d07c      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d080      move s7, zero\l0x8000d084      lw v0, (arg_a0h)\l"]
	"0x8000d088" [URL="sym.test_libStdio/0x8000d088", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e12c\l0x8000d088      jalr v0\l0x8000d08c      addiu a0, zero, 2\l0x8000d090      addiu v1, zero, 4\l0x8000d094      beq v0, v1, 0x8000e134\l0x8000d098      lui a1, 0x8001\l"]
	"0x8000d09c" [URL="sym.test_libStdio/0x8000d09c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d09c      lui v0, 0x8001\l0x8000d0a0      addiu a1, a1, 0x57a0                                   ; esilref: 'fgetc failed to return character'\l0x8000d0a4      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d0a8      jalr v0\l0x8000d0ac      move a0, s5\l0x8000d0b0      lui a1, 0x8001\l0x8000d0b4      lui a0, 0x8001\l0x8000d0b8      addiu a2, zero, 0x34\l0x8000d0bc      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d0c0      jalr s0\l0x8000d0c4      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d0c8      move s7, zero\l0x8000d0cc      lw v0, (arg_98h)\l"]
	"0x8000d0d0" [URL="sym.test_libStdio/0x8000d0d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e148\l0x8000d0d0      lui a1, 0x8001\l0x8000d0d4      addiu a1, a1, 0x57c4                                   ; esilref: 'fgets: basic functionality'\l0x8000d0d8      jalr v0\l0x8000d0dc      move a0, s5\l0x8000d0e0      lui s1, 0x8001\l0x8000d0e4      lui v0, 0x8000\l0x8000d0e8      addiu v0, v0, 0x39c0                                   ; 0x800039c0\l                                                                       ; sym.write ; sym.write\l0x8000d0ec      addiu a2, zero, 0xf\l0x8000d0f0      addiu a1, s1, 0x57e0                                   \l; esilref: 'Test sentence.\l; '\l0x8000d0f4      addiu a0, zero, 2\l0x8000d0f8      jalr v0\l0x8000d0fc      sw v0, (arg_a8h)\l0x8000d100      addiu v1, zero, 0xf\l0x8000d104      beq v0, v1, 0x8000e150\l0x8000d108      sw s1, (arg_9ch)\l"]
	"0x8000d10c" [URL="sym.test_libStdio/0x8000d10c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d10c      lui a1, 0x8001\l0x8000d110      lui v0, 0x8001\l0x8000d114      addiu a1, a1, 0x57f0                                   ; esilref: 'failed to write data to loopback device'\l0x8000d118      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d11c      jalr v0\l0x8000d120      move a0, s5\l0x8000d124      lui a1, 0x8001\l0x8000d128      lui a0, 0x8001\l0x8000d12c      addiu a2, zero, 0x3b\l0x8000d130      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d134      jalr s0\l0x8000d138      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d13c      move s7, zero\l0x8000d140      addiu s1, fp, 0x54\l"]
	"0x8000d144" [URL="sym.test_libStdio/0x8000d144", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e164\l0x8000d144      lui s6, 0x8001\l0x8000d148      addiu a2, zero, 0x14\l0x8000d14c      addiu a1, zero, 0x58\l0x8000d150      move a0, s1\l0x8000d154      addiu s6, s6, 0x1c40                                   ; 0x80011c40 ; \"%\\x10\\x80\" ; sym.memset\l0x8000d158      jalr s6\l0x8000d15c      lui s3, 0x8001\l0x8000d160      addiu s3, s3, 0x1944                                   ; 0x80011944\l                                                                       ; sym.fgets ; sym.fgets\l0x8000d164      addiu a2, zero, 2\l0x8000d168      addiu a1, zero, 0x14\l0x8000d16c      jalr s3\l0x8000d170      move a0, s1\l0x8000d174      beq s1, v0, 0x8000e16c\l0x8000d178      lui v0, 0x8001\l"]
	"0x8000d17c" [URL="sym.test_libStdio/0x8000d17c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d17c      lui a1, 0x8001\l0x8000d180      addiu a1, a1, 0x5818                                   ; esilref: 'fgets failed to return output buffer'\l0x8000d184      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d188      jalr v0\l0x8000d18c      move a0, s5\l0x8000d190      lui a1, 0x8001\l0x8000d194      lui a0, 0x8001\l0x8000d198      addiu a2, zero, 0x3e\l0x8000d19c      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d1a0      jalr s0\l0x8000d1a4      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d1a8      move s7, zero\l0x8000d1ac      lui a1, 0x8001\l"]
	"0x8000d1b0" [URL="sym.test_libStdio/0x8000d1b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e180\l0x8000d1b0      lui s4, 0x8001\l0x8000d1b4      addiu a2, zero, 0x14\l0x8000d1b8      addiu a1, a1, 0x635c                                   \l; esilref: 'Test sentence.\l; '\l0x8000d1bc      addiu s4, s4, 0x1be4                                   ; 0x80011be4 ; \"%\\x18\" ; sym.memcmp\l0x8000d1c0      jalr s4\l0x8000d1c4      move a0, s1\l0x8000d1c8      beqz v0, 0x8000e188\l0x8000d1cc      lui v0, 0x8001\l"]
	"0x8000d1d0" [URL="sym.test_libStdio/0x8000d1d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d1d0      lui a1, 0x8001\l0x8000d1d4      lui v0, 0x8001\l0x8000d1d8      addiu a1, a1, 0x5840                                   ; esilref: 'fgets failed to correctly return written data'\l0x8000d1dc      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d1e0      jalr v0\l0x8000d1e4      move a0, s5\l0x8000d1e8      lui a1, 0x8001\l0x8000d1ec      lui a0, 0x8001\l0x8000d1f0      addiu a2, zero, 0x3f\l0x8000d1f4      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d1f8      jalr s0\l0x8000d1fc      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d200      move s7, zero\l0x8000d204      lw v0, (arg_98h)\l"]
	"0x8000d208" [URL="sym.test_libStdio/0x8000d208", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e198\l0x8000d208      lui a1, 0x8001\l0x8000d20c      addiu a1, a1, 0x5870                                   ; esilref: 'fgets: partial reads'\l0x8000d210      jalr v0\l0x8000d214      move a0, s5\l0x8000d218      lw v0, (arg_9ch)\l0x8000d21c      addiu a2, zero, 0xf\l0x8000d220      addiu a1, v0, 0x57e0\l0x8000d224      lw v0, (arg_a8h)\l0x8000d228      jalr v0\l0x8000d22c      addiu a0, zero, 2\l0x8000d230      addiu v1, zero, 0xf\l0x8000d234      beq v0, v1, 0x8000e1a0\l0x8000d238      lui a1, 0x8001\l"]
	"0x8000d23c" [URL="sym.test_libStdio/0x8000d23c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d23c      lui v0, 0x8001\l0x8000d240      addiu a1, a1, 0x57f0                                   ; esilref: 'failed to write data to loopback device'\l0x8000d244      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d248      jalr v0\l0x8000d24c      move a0, s5\l0x8000d250      lui a1, 0x8001\l0x8000d254      lui a0, 0x8001\l0x8000d258      addiu a2, zero, 0x45\l0x8000d25c      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d260      jalr s0\l0x8000d264      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d268      move s7, zero\l0x8000d26c      addiu a2, zero, 0x14\l"]
	"0x8000d270" [URL="sym.test_libStdio/0x8000d270", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e1b4\l0x8000d270      addiu a1, zero, 0x58\l0x8000d274      jalr s6\l0x8000d278      move a0, s1\l0x8000d27c      addiu a2, zero, 2\l0x8000d280      addiu a1, zero, 8\l0x8000d284      jalr s3\l0x8000d288      move a0, s1\l0x8000d28c      beq s1, v0, 0x8000e1bc\l0x8000d290      lui v0, 0x8001\l"]
	"0x8000d294" [URL="sym.test_libStdio/0x8000d294", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d294      lui a1, 0x8001\l0x8000d298      addiu a1, a1, 0x5818                                   ; esilref: 'fgets failed to return output buffer'\l0x8000d29c      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d2a0      jalr v0\l0x8000d2a4      move a0, s5\l0x8000d2a8      lui a1, 0x8001\l0x8000d2ac      lui a0, 0x8001\l0x8000d2b0      addiu a2, zero, 0x48\l0x8000d2b4      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d2b8      jalr s0\l0x8000d2bc      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d2c0      move s7, zero\l0x8000d2c4      lui a1, 0x8001\l"]
	"0x8000d2c8" [URL="sym.test_libStdio/0x8000d2c8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e1d0\l0x8000d2c8      addiu a2, zero, 0xa\l0x8000d2cc      addiu a1, a1, 0x6374                                   ; esilref: 'Test se'\l0x8000d2d0      jalr s4\l0x8000d2d4      move a0, s1\l0x8000d2d8      beqz v0, 0x8000e1d8\l0x8000d2dc      lui v0, 0x8001\l"]
	"0x8000d2e0" [URL="sym.test_libStdio/0x8000d2e0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d2e0      lui a1, 0x8001\l0x8000d2e4      lui v0, 0x8001\l0x8000d2e8      addiu a1, a1, 0x5840                                   ; esilref: 'fgets failed to correctly return written data'\l0x8000d2ec      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d2f0      jalr v0\l0x8000d2f4      move a0, s5\l0x8000d2f8      lui a1, 0x8001\l0x8000d2fc      lui a0, 0x8001\l0x8000d300      addiu a2, zero, 0x49\l0x8000d304      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d308      jalr s0\l0x8000d30c      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d310      move s7, zero\l0x8000d314      addiu a2, zero, 0x14\l"]
	"0x8000d318" [URL="sym.test_libStdio/0x8000d318", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e1e8\l0x8000d318      addiu a1, zero, 0x58\l0x8000d31c      jalr s6\l0x8000d320      move a0, s1\l0x8000d324      addiu a2, zero, 2\l0x8000d328      addiu a1, zero, 9\l0x8000d32c      jalr s3\l0x8000d330      move a0, s1\l0x8000d334      beq s1, v0, 0x8000e1f0\l0x8000d338      lui v0, 0x8001\l"]
	"0x8000d33c" [URL="sym.test_libStdio/0x8000d33c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d33c      lui a1, 0x8001\l0x8000d340      addiu a1, a1, 0x5818                                   ; esilref: 'fgets failed to return output buffer'\l0x8000d344      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d348      jalr v0\l0x8000d34c      move a0, s5\l0x8000d350      lui a1, 0x8001\l0x8000d354      lui a0, 0x8001\l0x8000d358      addiu a2, zero, 0x4d\l0x8000d35c      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d360      jalr s0\l0x8000d364      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d368      move s7, zero\l0x8000d36c      lui a1, 0x8001\l"]
	"0x8000d370" [URL="sym.test_libStdio/0x8000d370", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e204\l0x8000d370      addiu a2, zero, 0xa\l0x8000d374      addiu a1, a1, 0x6380                                   \l; esilref: 'ntence.\l; '\l0x8000d378      jalr s4\l0x8000d37c      move a0, s1\l0x8000d380      beqz v0, 0x8000e20c\l0x8000d384      lui v0, 0x8001\l"]
	"0x8000d388" [URL="sym.test_libStdio/0x8000d388", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d388      lui a1, 0x8001\l0x8000d38c      lui v0, 0x8001\l0x8000d390      addiu a1, a1, 0x5840                                   ; esilref: 'fgets failed to correctly return written data'\l0x8000d394      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d398      jalr v0\l0x8000d39c      move a0, s5\l0x8000d3a0      lui a1, 0x8001\l0x8000d3a4      lui a0, 0x8001\l0x8000d3a8      addiu a2, zero, 0x4e\l0x8000d3ac      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d3b0      jalr s0\l0x8000d3b4      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d3b8      move s7, zero\l0x8000d3bc      lw v0, (arg_98h)\l"]
	"0x8000d3c0" [URL="sym.test_libStdio/0x8000d3c0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e21c\l0x8000d3c0      lui a1, 0x8001\l0x8000d3c4      addiu a1, a1, 0x5888                                   ; esilref: 'fgets: return NULL on end-of-file'\l0x8000d3c8      jalr v0\l0x8000d3cc      move a0, s5\l0x8000d3d0      addiu a2, zero, 2\l0x8000d3d4      addiu a1, zero, 9\l0x8000d3d8      jalr s3\l0x8000d3dc      move a0, s1\l0x8000d3e0      beqz v0, 0x8000e224\l0x8000d3e4      lui a1, 0x8001\l"]
	"0x8000d3e8" [URL="sym.test_libStdio/0x8000d3e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d3e8      lui v0, 0x8001\l0x8000d3ec      addiu a1, a1, 0x58ac                                   ; esilref: 'fgets failed to return NULL on end-of-file'\l0x8000d3f0      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d3f4      jalr v0\l0x8000d3f8      move a0, s5\l0x8000d3fc      lui a1, 0x8001\l0x8000d400      lui a0, 0x8001\l0x8000d404      addiu a2, zero, 0x54\l0x8000d408      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d40c      jalr s0\l0x8000d410      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d414      move s7, zero\l0x8000d418      lw v0, (arg_98h)\l"]
	"0x8000d41c" [URL="sym.test_libStdio/0x8000d41c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e238\l0x8000d41c      lui a1, 0x8001\l0x8000d420      addiu a1, a1, 0x58d8                                   ; esilref: 'fgets: only read until newline'\l0x8000d424      jalr v0\l0x8000d428      move a0, s5\l0x8000d42c      lw v0, (arg_a8h)\l0x8000d430      lui a1, 0x8001\l0x8000d434      addiu a2, zero, 0xc\l0x8000d438      addiu a1, a1, 0x58f8                                   \l; esilref: 'line1\l; line2\l; '\l0x8000d43c      jalr v0\l0x8000d440      addiu a0, zero, 2\l0x8000d444      addiu v1, zero, 0xc\l0x8000d448      beq v0, v1, 0x8000e240\l0x8000d44c      lui a1, 0x8001\l"]
	"0x8000d450" [URL="sym.test_libStdio/0x8000d450", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d450      lui v0, 0x8001\l0x8000d454      addiu a1, a1, 0x57f0                                   ; esilref: 'failed to write data to loopback device'\l0x8000d458      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d45c      jalr v0\l0x8000d460      move a0, s5\l0x8000d464      lui a1, 0x8001\l0x8000d468      lui a0, 0x8001\l0x8000d46c      addiu a2, zero, 0x59\l0x8000d470      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d474      jalr s0\l0x8000d478      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d47c      move s7, zero\l0x8000d480      addiu a2, zero, 0x14\l"]
	"0x8000d484" [URL="sym.test_libStdio/0x8000d484", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e254\l0x8000d484      addiu a1, zero, 0x58\l0x8000d488      jalr s6\l0x8000d48c      move a0, s1\l0x8000d490      addiu a2, zero, 2\l0x8000d494      addiu a1, zero, 0x10\l0x8000d498      jalr s3\l0x8000d49c      move a0, s1\l0x8000d4a0      beq s1, v0, 0x8000e25c\l0x8000d4a4      lui v0, 0x8001\l"]
	"0x8000d4a8" [URL="sym.test_libStdio/0x8000d4a8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d4a8      lui a1, 0x8001\l0x8000d4ac      addiu a1, a1, 0x5818                                   ; esilref: 'fgets failed to return output buffer'\l0x8000d4b0      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d4b4      jalr v0\l0x8000d4b8      move a0, s5\l0x8000d4bc      lui a1, 0x8001\l0x8000d4c0      lui a0, 0x8001\l0x8000d4c4      addiu a2, zero, 0x5c\l0x8000d4c8      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d4cc      jalr s0\l0x8000d4d0      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d4d4      move s7, zero\l0x8000d4d8      lui a1, 0x8001\l"]
	"0x8000d4dc" [URL="sym.test_libStdio/0x8000d4dc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e270\l0x8000d4dc      addiu a2, zero, 0xa\l0x8000d4e0      addiu a1, a1, 0x638c                                   \l; esilref: 'line1\l; '\l0x8000d4e4      jalr s4\l0x8000d4e8      move a0, s1\l0x8000d4ec      beqz v0, 0x8000e278\l0x8000d4f0      lui v0, 0x8001\l"]
	"0x8000d4f4" [URL="sym.test_libStdio/0x8000d4f4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d4f4      lui a1, 0x8001\l0x8000d4f8      lui v0, 0x8001\l0x8000d4fc      addiu a1, a1, 0x5908                                   ; esilref: 'fgets failed to read only partial line'\l0x8000d500      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d504      jalr v0\l0x8000d508      move a0, s5\l0x8000d50c      lui a1, 0x8001\l0x8000d510      lui a0, 0x8001\l0x8000d514      addiu a2, zero, 0x5d\l0x8000d518      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d51c      jalr s0\l0x8000d520      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d524      move s7, zero\l0x8000d528      addiu a2, zero, 0x14\l"]
	"0x8000d52c" [URL="sym.test_libStdio/0x8000d52c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e288\l0x8000d52c      addiu a1, zero, 0x58\l0x8000d530      jalr s6\l0x8000d534      move a0, s1\l0x8000d538      addiu a2, zero, 2\l0x8000d53c      addiu a1, zero, 0x10\l0x8000d540      jalr s3\l0x8000d544      move a0, s1\l0x8000d548      beq s1, v0, 0x8000e290\l0x8000d54c      lui v0, 0x8001\l"]
	"0x8000d550" [URL="sym.test_libStdio/0x8000d550", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d550      lui a1, 0x8001\l0x8000d554      addiu a1, a1, 0x5818                                   ; esilref: 'fgets failed to return output buffer'\l0x8000d558      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d55c      jalr v0\l0x8000d560      move a0, s5\l0x8000d564      lui a1, 0x8001\l0x8000d568      lui a0, 0x8001\l0x8000d56c      addiu a2, zero, 0x62\l0x8000d570      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d574      jalr s0\l0x8000d578      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d57c      move s7, zero\l0x8000d580      lui a1, 0x8001\l"]
	"0x8000d584" [URL="sym.test_libStdio/0x8000d584", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e2a4\l0x8000d584      addiu a2, zero, 0xa\l0x8000d588      addiu a1, a1, 0x6398                                   \l; esilref: 'line2\l; '\l0x8000d58c      jalr s4\l0x8000d590      move a0, s1\l0x8000d594      beqz v0, 0x8000e2ac\l0x8000d598      lui v0, 0x8001\l"]
	"0x8000d59c" [URL="sym.test_libStdio/0x8000d59c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d59c      lui a1, 0x8001\l0x8000d5a0      lui v0, 0x8001\l0x8000d5a4      addiu a1, a1, 0x5908                                   ; esilref: 'fgets failed to read only partial line'\l0x8000d5a8      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d5ac      jalr v0\l0x8000d5b0      move a0, s5\l0x8000d5b4      lui a1, 0x8001\l0x8000d5b8      lui a0, 0x8001\l0x8000d5bc      addiu a2, zero, 0x63\l0x8000d5c0      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d5c4      jalr s0\l0x8000d5c8      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d5cc      move s7, zero\l0x8000d5d0      lw v0, (arg_98h)\l"]
	"0x8000d5d4" [URL="sym.test_libStdio/0x8000d5d4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e2bc\l0x8000d5d4      lui a1, 0x8001\l0x8000d5d8      addiu a1, a1, 0x5930                                   ; esilref: 'fputs: basic functionality'\l0x8000d5dc      jalr v0\l0x8000d5e0      move a0, s5\l0x8000d5e4      lui s3, 0x8001\l0x8000d5e8      lui v0, 0x8001\l0x8000d5ec      addiu a1, zero, 2\l0x8000d5f0      addiu v0, v0, 0x1a90                                   ; 0x80011a90\l                                                                       ; sym.fputs ; sym.fputs\l0x8000d5f4      jalr v0\l0x8000d5f8      addiu a0, s3, 0x594c                                   ; esilref: 'Put test.'\l0x8000d5fc      bgez v0, 0x8000e2c4\l0x8000d600      lui v0, 0x8001\l"]
	"0x8000d604" [URL="sym.test_libStdio/0x8000d604", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d604      lui a1, 0x8001\l0x8000d608      lui v0, 0x8001\l0x8000d60c      addiu a1, a1, 0x5958                                   ; esilref: 'fputs failed to return nonnegative value on success'\l0x8000d610      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d614      jalr v0\l0x8000d618      move a0, s5\l0x8000d61c      lui a1, 0x8001\l0x8000d620      lui a0, 0x8001\l0x8000d624      addiu a2, zero, 0x69\l0x8000d628      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d62c      jalr s0\l0x8000d630      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d634      move s7, zero\l0x8000d638      lui v0, 0x8000\l"]
	"0x8000d63c" [URL="sym.test_libStdio/0x8000d63c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e2d4\l0x8000d63c      addiu v0, v0, 0x3958                                   ; 0x80003958\l                                                                       ; sym.read ; sym.read\l0x8000d640      addiu a2, zero, 9\l0x8000d644      move a1, s1\l0x8000d648      addiu a0, zero, 2\l0x8000d64c      jalr v0\l0x8000d650      sw v0, (arg_b4h)\l0x8000d654      addiu v1, zero, 9\l0x8000d658      beq v0, v1, 0x8000e2dc\l0x8000d65c      lui a1, 0x8001\l"]
	"0x8000d660" [URL="sym.test_libStdio/0x8000d660", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d660      lui v0, 0x8001\l0x8000d664      addiu a1, a1, 0x598c                                   ; esilref: 'failed to read data put with fputs'\l0x8000d668      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d66c      jalr v0\l0x8000d670      move a0, s5\l0x8000d674      lui a1, 0x8001\l0x8000d678      lui a0, 0x8001\l0x8000d67c      addiu a2, zero, 0x6b\l0x8000d680      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d684      jalr s0\l0x8000d688      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d68c      move s7, zero\l0x8000d690      lui s6, 0x8001\l"]
	"0x8000d694" [URL="sym.test_libStdio/0x8000d694", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e2f0\l0x8000d694      addiu v0, s6, 0x2094                                   ; 0x80012094 ; \"%\\x18\" ; sym.strncmp\l0x8000d698      addiu a2, zero, 9\l0x8000d69c      addiu a1, s3, 0x594c                                   ; esilref: 'Put test.'\l0x8000d6a0      move a0, s1\l0x8000d6a4      jalr v0\l0x8000d6a8      sw v0, (arg_9ch)\l0x8000d6ac      beqz v0, 0x8000e2f8\l0x8000d6b0      lui v0, 0x8001\l"]
	"0x8000d6b4" [URL="sym.test_libStdio/0x8000d6b4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d6b4      lui a1, 0x8001\l0x8000d6b8      lui v0, 0x8001\l0x8000d6bc      addiu a1, a1, 0x59b0                                   ; esilref: 'data read back with fputs was not the same as written'\l0x8000d6c0      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d6c4      jalr v0\l0x8000d6c8      move a0, s5\l0x8000d6cc      lui a1, 0x8001\l0x8000d6d0      lui a0, 0x8001\l0x8000d6d4      addiu a2, zero, 0x6c\l0x8000d6d8      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d6dc      jalr s0\l0x8000d6e0      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d6e4      move s7, zero\l0x8000d6e8      lw v0, (arg_98h)\l"]
	"0x8000d6ec" [URL="sym.test_libStdio/0x8000d6ec", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e308\l0x8000d6ec      lui a1, 0x8001\l0x8000d6f0      addiu a1, a1, 0x59e8                                   ; esilref: 'putchar, getchar: basic functionality'\l0x8000d6f4      move a0, s5\l0x8000d6f8      jalr v0\l0x8000d6fc      lui s4, 0x8002\l0x8000d700      lw v0, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x8000d704      addiu a2, zero, 0x54\l0x8000d708      mul v1, v0, a2\l0x8000d70c      lui s3, 0x8002\l0x8000d710      addiu s3, s3, -0x3004                                  ; 0x8001cffc\l                                                                       ; v1 ; obj.thrtab\l0x8000d714      addu v0, v1, s3\l0x8000d718      addiu v1, zero, 2\l0x8000d71c      lw s6, 0x44(v0)\l0x8000d720      sw v1, 0x44(v0)\l0x8000d724      lw v0, (arg_a4h)\l0x8000d728      addiu a0, zero, 0x61\l0x8000d72c      jalr v0\l0x8000d730      addiu a1, zero, 2\l0x8000d734      lw v1, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x8000d738      addiu a2, zero, 0x54\l0x8000d73c      mul a0, v1, a2\l0x8000d740      addu v1, a0, s3\l0x8000d744      sw s6, 0x44(v1)\l0x8000d748      addiu v1, zero, 0x61\l0x8000d74c      beq v0, v1, 0x8000e310\l0x8000d750      lui a1, 0x8001\l"]
	"0x8000d754" [URL="sym.test_libStdio/0x8000d754", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d754      lui v0, 0x8001\l0x8000d758      addiu a1, a1, 0x5a10                                   ; esilref: 'putchar failed to return character written'\l0x8000d75c      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d760      jalr v0\l0x8000d764      move a0, s5\l0x8000d768      lui a1, 0x8001\l0x8000d76c      lui a0, 0x8001\l0x8000d770      addiu a2, zero, 0x75\l0x8000d774      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d778      jalr s0\l0x8000d77c      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d780      move s7, zero\l0x8000d784      lw v0, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l"]
	"0x8000d788" [URL="sym.test_libStdio/0x8000d788", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e324\l0x8000d788      addiu a1, zero, 0x54\l0x8000d78c      mul v1, v0, a1\l0x8000d790      addu v0, v1, s3\l0x8000d794      addiu v1, zero, 2\l0x8000d798      lw s6, 0x40(v0)\l0x8000d79c      sw v1, 0x40(v0)\l0x8000d7a0      lw v0, (arg_a0h)\l0x8000d7a4      jalr v0\l0x8000d7a8      addiu a0, zero, 2\l0x8000d7ac      lw v1, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x8000d7b0      addiu a1, zero, 0x54\l0x8000d7b4      mul a0, v1, a1\l0x8000d7b8      addu v1, a0, s3\l0x8000d7bc      sw s6, 0x40(v1)\l0x8000d7c0      addiu v1, zero, 0x61\l0x8000d7c4      beq v0, v1, 0x8000e32c\l0x8000d7c8      lui a1, 0x8001\l"]
	"0x8000d7cc" [URL="sym.test_libStdio/0x8000d7cc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d7cc      lui v0, 0x8001\l0x8000d7d0      addiu a1, a1, 0x5a3c                                   ; esilref: 'getchar failed to return character previously written'\l0x8000d7d4      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d7d8      jalr v0\l0x8000d7dc      move a0, s5\l0x8000d7e0      lui a1, 0x8001\l0x8000d7e4      lui a0, 0x8001\l0x8000d7e8      addiu a2, zero, 0x7a\l0x8000d7ec      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d7f0      jalr s0\l0x8000d7f4      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d7f8      move s7, zero\l0x8000d7fc      lw v0, (arg_98h)\l"]
	"0x8000d800" [URL="sym.test_libStdio/0x8000d800", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e340\l0x8000d800      lui a1, 0x8001\l0x8000d804      addiu a1, a1, 0x5a74                                   ; esilref: 'getchar: return EOF on end-of-file'\l0x8000d808      jalr v0\l0x8000d80c      move a0, s5\l0x8000d810      lw v0, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x8000d814      addiu a1, zero, 0x54\l0x8000d818      mul v1, v0, a1\l0x8000d81c      addu v0, v1, s3\l0x8000d820      addiu v1, zero, 2\l0x8000d824      lw s6, 0x40(v0)\l0x8000d828      sw v1, 0x40(v0)\l0x8000d82c      lw v0, (arg_a0h)\l0x8000d830      jalr v0\l0x8000d834      addiu a0, zero, 2\l0x8000d838      lw v1, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x8000d83c      addiu a1, zero, 0x54\l0x8000d840      mul a0, v1, a1\l0x8000d844      addu v1, a0, s3\l0x8000d848      sw s6, 0x40(v1)\l0x8000d84c      addiu v1, zero, -2\l0x8000d850      beq v0, v1, 0x8000e348\l0x8000d854      lui a1, 0x8001\l"]
	"0x8000d858" [URL="sym.test_libStdio/0x8000d858", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d858      lui v0, 0x8001\l0x8000d85c      addiu a1, a1, 0x5a98                                   ; esilref: 'getchar failed to return EOF on end-of-file'\l0x8000d860      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d864      jalr v0\l0x8000d868      move a0, s5\l0x8000d86c      lui a1, 0x8001\l0x8000d870      lui a0, 0x8001\l0x8000d874      addiu a2, zero, 0x81\l0x8000d878      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d87c      jalr s0\l0x8000d880      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d884      move s7, zero\l0x8000d888      lw v0, (arg_98h)\l"]
	"0x8000d88c" [URL="sym.test_libStdio/0x8000d88c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e35c\l0x8000d88c      lui a1, 0x8001\l0x8000d890      addiu a1, a1, 0x5ac4                                   ; esilref: 'fprintf: basic functionality'\l0x8000d894      jalr v0\l0x8000d898      move a0, s5\l0x8000d89c      lui t0, 0x8001\l0x8000d8a0      addiu v0, t0, 0x5b6c                                   ; esilref: 'ABC'\l0x8000d8a4      sw t0, (arg_a4h)\l0x8000d8a8      sw v0, (arg_b8h)\l0x8000d8ac      sw v0, (var_120h)\l0x8000d8b0      addiu v0, zero, 0x4b\l0x8000d8b4      sw v0, (var_124h)\l0x8000d8b8      sw v0, (var_128h)\l0x8000d8bc      lui v0, 0x8001\l0x8000d8c0      lui s6, 0x8001\l0x8000d8c4      addiu v0, v0, 0x1a00                                   ; 0x80011a00\l                                                                       ; t9 ; sym.fprintf\l0x8000d8c8      addiu a0, zero, 2\l0x8000d8cc      addiu a3, zero, 0x4b\l0x8000d8d0      addiu a2, zero, 0x4b\l0x8000d8d4      addiu a1, s6, 0x5ae4                                   ; esilref: '&d &o &x &c &s'\l0x8000d8d8      jalr v0\l0x8000d8dc      sw v0, (arg_a0h)\l0x8000d8e0      lw t0, (arg_a4h)\l0x8000d8e4      addiu a0, zero, 0xf\l0x8000d8e8      sw t0, (arg_bch)\l0x8000d8ec      beq v0, a0, 0x8000e364\l0x8000d8f0      sw s6, (arg_ach)\l"]
	"0x8000d8f4" [URL="sym.test_libStdio/0x8000d8f4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d8f4      lui a1, 0x8001\l0x8000d8f8      lui v0, 0x8001\l0x8000d8fc      addiu a1, a1, 0x5af4                                   ; esilref: 'fprintf() did not correctly return number of characters written'\l0x8000d900      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d904      jalr v0\l0x8000d908      move a0, s5\l0x8000d90c      lui a1, 0x8001\l0x8000d910      lui a0, 0x8001\l0x8000d914      addiu a2, zero, 0x87\l0x8000d918      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d91c      jalr s0\l0x8000d920      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d924      move s7, zero\l0x8000d928      lw v0, (arg_b4h)\l"]
	"0x8000d92c" [URL="sym.test_libStdio/0x8000d92c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e378\l0x8000d92c      addiu a2, zero, 0xf\l0x8000d930      move a1, s1\l0x8000d934      jalr v0\l0x8000d938      addiu a0, zero, 2\l0x8000d93c      addiu v1, zero, 0xf\l0x8000d940      beq v0, v1, 0x8000e380\l0x8000d944      lui a1, 0x8001\l"]
	"0x8000d948" [URL="sym.test_libStdio/0x8000d948", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d948      lui v0, 0x8001\l0x8000d94c      addiu a1, a1, 0x5b34                                   ; esilref: 'failed to read data back from loop device'\l0x8000d950      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d954      jalr v0\l0x8000d958      move a0, s5\l0x8000d95c      lui a1, 0x8001\l0x8000d960      lui a0, 0x8001\l0x8000d964      addiu a2, zero, 0x8b\l0x8000d968      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d96c      jalr s0\l0x8000d970      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d974      move s7, zero\l0x8000d978      lw v0, (arg_9ch)\l"]
	"0x8000d97c" [URL="sym.test_libStdio/0x8000d97c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e394\l0x8000d97c      lui s0, 0x8001\l0x8000d980      addiu a2, zero, 0xf\l0x8000d984      addiu a1, s0, 0x5b60                                   ; esilref: '75 113 4b K ABC'\l0x8000d988      jalr v0\l0x8000d98c      move a0, s1\l0x8000d990      lui v1, 0x8001\l0x8000d994      addiu s6, v1, 0x1c68                                   ; 0x80011c68\l                                                                       ; sym.printf ; sym.printf\l0x8000d998      lui v1, 0x8001\l0x8000d99c      beqz v0, 0x8000e39c\l0x8000d9a0      sw v1, (arg_b0h)\l"]
	"0x8000d9a4" [URL="sym.test_libStdio/0x8000d9a4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000d9a4      lui a1, 0x8001\l0x8000d9a8      lui v0, 0x8001\l0x8000d9ac      addiu a1, a1, 0x5b70                                   ; esilref: 'fprintf() failed to print the data correctly'\l0x8000d9b0      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000d9b4      jalr v0\l0x8000d9b8      move a0, s5\l0x8000d9bc      lui a1, 0x8001\l0x8000d9c0      lui a0, 0x8001\l0x8000d9c4      addiu a2, zero, 0x8e\l0x8000d9c8      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000d9cc      jalr s6\l0x8000d9d0      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000d9d4      move s7, zero\l0x8000d9d8      lw v0, (arg_98h)\l"]
	"0x8000d9dc" [URL="sym.test_libStdio/0x8000d9dc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000e3b4\l0x8000d9dc      lui a1, 0x8001\l0x8000d9e0      addiu a1, a1, 0x5ba0                                   ; esilref: 'printf: basic functionality'\l0x8000d9e4      jalr v0\l0x8000d9e8      move a0, s5\l0x8000d9ec      lw v0, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x8000d9f0      addiu s2, zero, 0x54\l0x8000d9f4      mul v1, v0, s2\l0x8000d9f8      addiu a3, zero, 0x4b\l0x8000d9fc      addu v0, v1, s3\l0x8000da00      lw t0, 0x44(v0)\l0x8000da04      addiu v1, zero, 2\l0x8000da08      sw t0, (arg_98h)\l0x8000da0c      sw v1, 0x44(v0)\l0x8000da10      lw v0, (arg_b8h)\l0x8000da14      addiu a2, zero, 0x4b\l0x8000da18      sw v0, (var_124h)\l0x8000da1c      addiu v0, zero, 0x4b\l0x8000da20      sw v0, (var_128h)\l0x8000da24      lw v0, (arg_ach)\l0x8000da28      addiu a1, zero, 0x4b\l0x8000da2c      jalr s6\l0x8000da30      addiu a0, v0, 0x5ae4\l0x8000da34      lw v1, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x8000da38      lw t0, (arg_98h)\l0x8000da3c      mul a0, v1, s2\l0x8000da40      addu v1, a0, s3\l0x8000da44      sw t0, 0x44(v1)\l0x8000da48      addiu v1, zero, 0xf\l0x8000da4c      beq v0, v1, 0x8000e3bc\l0x8000da50      lui a1, 0x8001\l"]
	"0x8000da54" [URL="sym.test_libStdio/0x8000da54", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000da54      lui v0, 0x8001\l0x8000da58      addiu a1, a1, 0x5bbc                                   ; esilref: 'printf() did not correctly return number of characters written'\l0x8000da5c      addiu v0, v0, -0x7204                                  ; 0x80008dfc\l                                                                       ; sym.testFail ; sym.testFail\l0x8000da60      jalr v0\l0x8000da64      move a0, s5\l0x8000da68      lui a1, 0x8001\l0x8000da6c      lui a0, 0x8001\l0x8000da70      addiu a2, zero, 0x97\l0x8000da74      addiu a1, a1, 0x570c                                   ; esilref: '../test/test_libStdio.c'\l0x8000da78      jalr s6\l0x8000da7c      addiu a0, a0, 0x5104                                   \l; esilref: '\t&s:&d\r\l; '\l0x8000da80      move s7, zero\l0x8000da84      lw v0, (arg_b4h)\l; CODE XREF from sym.test_libStdio @ 0x8000e3d4\l0x8000da88      addiu a2, zero, 0xf\l0x8000da8c      move a1, s1\l0x8000da90      jalr v0\l0x8000da94      addiu a0, zero, 2\l0x8000da98      addiu v1, zero, 0xf\l0x8000da9c      beq v0, v1, 0x8000e3dc\l0x8000daa0      lui a1, 0x8001\l"]
	"0x8000e074" [URL="sym.test_libStdio/0x8000e074", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000ce4c\l0x8000e074      lui v0, 0x8001\l0x8000e078      addiu a1, s2, 0x43fc                                   ; arg2\l0x8000e07c      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e080      jalr v0\l0x8000e084      move a0, s5\l0x8000e088      b 0x8000ce88\l0x8000e08c      addiu s7, zero, 1\l"]
	"0x8000e090" [URL="sym.test_libStdio/0x8000e090", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000cea8\l0x8000e090      addiu a1, s2, 0x43fc                                   ; arg2\l0x8000e094      addiu v0, v0, -0x7228\l0x8000e098      jalr v0\l0x8000e09c      move a0, s5\l0x8000e0a0      b 0x8000cee8\l0x8000e0a4      lui a1, 0x8001\l"]
	"0x8000e0a8" [URL="sym.test_libStdio/0x8000e0a8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000cf1c\l0x8000e0a8      lui v0, 0x8001\l0x8000e0ac      addiu a1, s2, 0x43fc\l0x8000e0b0      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e0b4      jalr v0\l0x8000e0b8      move a0, s5\l0x8000e0bc      b 0x8000cf58\l0x8000e0c0      lw v0, (arg_a4h)\l"]
	"0x8000e0c4" [URL="sym.test_libStdio/0x8000e0c4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000cf68\l0x8000e0c4      lui v0, 0x8001\l0x8000e0c8      addiu a1, s2, 0x43fc\l0x8000e0cc      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e0d0      jalr v0\l0x8000e0d4      move a0, s5\l0x8000e0d8      b 0x8000cfa4\l0x8000e0dc      lw v0, (arg_a4h)\l"]
	"0x8000e0e0" [URL="sym.test_libStdio/0x8000e0e0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000cfb4\l0x8000e0e0      lui v0, 0x8001\l0x8000e0e4      addiu a1, s2, 0x43fc\l0x8000e0e8      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e0ec      jalr v0\l0x8000e0f0      move a0, s5\l0x8000e0f4      b 0x8000cff0\l0x8000e0f8      lui v0, 0x8001\l"]
	"0x8000e0fc" [URL="sym.test_libStdio/0x8000e0fc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d004\l0x8000e0fc      lui v0, 0x8001\l0x8000e100      addiu a1, s2, 0x43fc\l0x8000e104      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e108      jalr v0\l0x8000e10c      move a0, s5\l0x8000e110      b 0x8000d040\l0x8000e114      lw v0, (arg_a0h)\l"]
	"0x8000e118" [URL="sym.test_libStdio/0x8000e118", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d04c\l0x8000e118      lui v0, 0x8001\l0x8000e11c      addiu a1, s2, 0x43fc\l0x8000e120      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e124      jalr v0\l0x8000e128      move a0, s5\l0x8000e12c      b 0x8000d088\l0x8000e130      lw v0, (arg_a0h)\l"]
	"0x8000e134" [URL="sym.test_libStdio/0x8000e134", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d094\l0x8000e134      lui v0, 0x8001\l0x8000e138      addiu a1, s2, 0x43fc\l0x8000e13c      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e140      jalr v0\l0x8000e144      move a0, s5\l0x8000e148      b 0x8000d0d0\l0x8000e14c      lw v0, (arg_98h)\l"]
	"0x8000e150" [URL="sym.test_libStdio/0x8000e150", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d104\l0x8000e150      lui v0, 0x8001\l0x8000e154      addiu a1, s2, 0x43fc\l0x8000e158      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e15c      jalr v0\l0x8000e160      move a0, s5\l0x8000e164      b 0x8000d144\l0x8000e168      addiu s1, fp, 0x54\l"]
	"0x8000e16c" [URL="sym.test_libStdio/0x8000e16c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d174\l0x8000e16c      lui v0, 0x8001\l0x8000e170      addiu a1, s2, 0x43fc\l0x8000e174      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e178      jalr v0\l0x8000e17c      move a0, s5\l0x8000e180      b 0x8000d1b0\l0x8000e184      lui a1, 0x8001\l"]
	"0x8000e188" [URL="sym.test_libStdio/0x8000e188", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d1c8\l0x8000e188      addiu a1, s2, 0x43fc\l0x8000e18c      addiu v0, v0, -0x7228\l0x8000e190      jalr v0\l0x8000e194      move a0, s5\l0x8000e198      b 0x8000d208\l0x8000e19c      lw v0, (arg_98h)\l"]
	"0x8000e1a0" [URL="sym.test_libStdio/0x8000e1a0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d234\l0x8000e1a0      lui v0, 0x8001\l0x8000e1a4      addiu a1, s2, 0x43fc\l0x8000e1a8      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e1ac      jalr v0\l0x8000e1b0      move a0, s5\l0x8000e1b4      b 0x8000d270\l0x8000e1b8      addiu a2, zero, 0x14\l"]
	"0x8000e1bc" [URL="sym.test_libStdio/0x8000e1bc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d28c\l0x8000e1bc      lui v0, 0x8001\l0x8000e1c0      addiu a1, s2, 0x43fc\l0x8000e1c4      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e1c8      jalr v0\l0x8000e1cc      move a0, s5\l0x8000e1d0      b 0x8000d2c8\l0x8000e1d4      lui a1, 0x8001\l"]
	"0x8000e1d8" [URL="sym.test_libStdio/0x8000e1d8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d2d8\l0x8000e1d8      addiu a1, s2, 0x43fc\l0x8000e1dc      addiu v0, v0, -0x7228\l0x8000e1e0      jalr v0\l0x8000e1e4      move a0, s5\l0x8000e1e8      b 0x8000d318\l0x8000e1ec      addiu a2, zero, 0x14\l"]
	"0x8000e1f0" [URL="sym.test_libStdio/0x8000e1f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d334\l0x8000e1f0      lui v0, 0x8001\l0x8000e1f4      addiu a1, s2, 0x43fc\l0x8000e1f8      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e1fc      jalr v0\l0x8000e200      move a0, s5\l0x8000e204      b 0x8000d370\l0x8000e208      lui a1, 0x8001\l"]
	"0x8000e20c" [URL="sym.test_libStdio/0x8000e20c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d380\l0x8000e20c      addiu a1, s2, 0x43fc\l0x8000e210      addiu v0, v0, -0x7228\l0x8000e214      jalr v0\l0x8000e218      move a0, s5\l0x8000e21c      b 0x8000d3c0\l0x8000e220      lw v0, (arg_98h)\l"]
	"0x8000e224" [URL="sym.test_libStdio/0x8000e224", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d3e0\l0x8000e224      lui v0, 0x8001\l0x8000e228      addiu a1, s2, 0x43fc\l0x8000e22c      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e230      jalr v0\l0x8000e234      move a0, s5\l0x8000e238      b 0x8000d41c\l0x8000e23c      lw v0, (arg_98h)\l"]
	"0x8000e240" [URL="sym.test_libStdio/0x8000e240", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d448\l0x8000e240      lui v0, 0x8001\l0x8000e244      addiu a1, s2, 0x43fc\l0x8000e248      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e24c      jalr v0\l0x8000e250      move a0, s5\l0x8000e254      b 0x8000d484\l0x8000e258      addiu a2, zero, 0x14\l"]
	"0x8000e25c" [URL="sym.test_libStdio/0x8000e25c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d4a0\l0x8000e25c      lui v0, 0x8001\l0x8000e260      addiu a1, s2, 0x43fc\l0x8000e264      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e268      jalr v0\l0x8000e26c      move a0, s5\l0x8000e270      b 0x8000d4dc\l0x8000e274      lui a1, 0x8001\l"]
	"0x8000e278" [URL="sym.test_libStdio/0x8000e278", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d4ec\l0x8000e278      addiu a1, s2, 0x43fc\l0x8000e27c      addiu v0, v0, -0x7228\l0x8000e280      jalr v0\l0x8000e284      move a0, s5\l0x8000e288      b 0x8000d52c\l0x8000e28c      addiu a2, zero, 0x14\l"]
	"0x8000e290" [URL="sym.test_libStdio/0x8000e290", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d548\l0x8000e290      lui v0, 0x8001\l0x8000e294      addiu a1, s2, 0x43fc\l0x8000e298      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e29c      jalr v0\l0x8000e2a0      move a0, s5\l0x8000e2a4      b 0x8000d584\l0x8000e2a8      lui a1, 0x8001\l"]
	"0x8000e2ac" [URL="sym.test_libStdio/0x8000e2ac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d594\l0x8000e2ac      addiu a1, s2, 0x43fc\l0x8000e2b0      addiu v0, v0, -0x7228\l0x8000e2b4      jalr v0\l0x8000e2b8      move a0, s5\l0x8000e2bc      b 0x8000d5d4\l0x8000e2c0      lw v0, (arg_98h)\l"]
	"0x8000e2c4" [URL="sym.test_libStdio/0x8000e2c4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d5fc\l0x8000e2c4      addiu a1, s2, 0x43fc\l0x8000e2c8      addiu v0, v0, -0x7228\l0x8000e2cc      jalr v0\l0x8000e2d0      move a0, s5\l0x8000e2d4      b 0x8000d63c\l0x8000e2d8      lui v0, 0x8000\l"]
	"0x8000e2dc" [URL="sym.test_libStdio/0x8000e2dc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d658\l0x8000e2dc      lui v0, 0x8001\l0x8000e2e0      addiu a1, s2, 0x43fc\l0x8000e2e4      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e2e8      jalr v0\l0x8000e2ec      move a0, s5\l0x8000e2f0      b 0x8000d694\l0x8000e2f4      lui s6, 0x8001\l"]
	"0x8000e2f8" [URL="sym.test_libStdio/0x8000e2f8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d6ac\l0x8000e2f8      addiu a1, s2, 0x43fc\l0x8000e2fc      addiu v0, v0, -0x7228\l0x8000e300      jalr v0\l0x8000e304      move a0, s5\l0x8000e308      b 0x8000d6ec\l0x8000e30c      lw v0, (arg_98h)\l"]
	"0x8000e310" [URL="sym.test_libStdio/0x8000e310", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d74c\l0x8000e310      lui v0, 0x8001\l0x8000e314      addiu a1, s2, 0x43fc\l0x8000e318      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e31c      jalr v0\l0x8000e320      move a0, s5\l0x8000e324      b 0x8000d788\l0x8000e328      lw v0, -0x3588(s4)\l"]
	"0x8000e32c" [URL="sym.test_libStdio/0x8000e32c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d7c4\l0x8000e32c      lui v0, 0x8001\l0x8000e330      addiu a1, s2, 0x43fc\l0x8000e334      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e338      jalr v0\l0x8000e33c      move a0, s5\l0x8000e340      b 0x8000d800\l0x8000e344      lw v0, (arg_98h)\l"]
	"0x8000e348" [URL="sym.test_libStdio/0x8000e348", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d850\l0x8000e348      lui v0, 0x8001\l0x8000e34c      addiu a1, s2, 0x43fc\l0x8000e350      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e354      jalr v0\l0x8000e358      move a0, s5\l0x8000e35c      b 0x8000d88c\l0x8000e360      lw v0, (arg_98h)\l"]
	"0x8000e364" [URL="sym.test_libStdio/0x8000e364", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d8ec\l0x8000e364      lui v0, 0x8001\l0x8000e368      addiu a1, s2, 0x43fc\l0x8000e36c      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e370      jalr v0\l0x8000e374      move a0, s5\l0x8000e378      b 0x8000d92c\l0x8000e37c      lw v0, (arg_b4h)\l"]
	"0x8000e380" [URL="sym.test_libStdio/0x8000e380", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d940\l0x8000e380      lui v0, 0x8001\l0x8000e384      addiu a1, s2, 0x43fc\l0x8000e388      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e38c      jalr v0\l0x8000e390      move a0, s5\l0x8000e394      b 0x8000d97c\l0x8000e398      lw v0, (arg_9ch)\l"]
	"0x8000e39c" [URL="sym.test_libStdio/0x8000e39c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000d99c\l0x8000e39c      lui v0, 0x8001\l0x8000e3a0      addiu a1, v0, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l0x8000e3a4      lui v0, 0x8001\l0x8000e3a8      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e3ac      jalr v0\l0x8000e3b0      move a0, s5\l0x8000e3b4      b 0x8000d9dc\l0x8000e3b8      lw v0, (arg_98h)\l"]
	"0x8000e3bc" [URL="sym.test_libStdio/0x8000e3bc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.test_libStdio @ 0x8000da4c\l0x8000e3bc      lui v0, 0x8001\l0x8000e3c0      addiu a1, v0, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; aav.0x800143fc\l0x8000e3c4      lui v0, 0x8001\l0x8000e3c8      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000e3cc      jalr v0\l0x8000e3d0      move a0, s5\l0x8000e3d4      b 0x8000da88\l0x8000e3d8      lw v0, (arg_b4h)\l"]
        "0x8000cdfc" -> "0x8000e074" [color="#13a10e"];
        "0x8000cdfc" -> "0x8000ce54" [color="#c50f1f"];
        "0x8000ce54" -> "0x8000ce88" [color="#0037da"];
        "0x8000ce88" -> "0x8000e090" [color="#13a10e"];
        "0x8000ce88" -> "0x8000ceb0" [color="#c50f1f"];
        "0x8000ceb0" -> "0x8000cee8" [color="#0037da"];
        "0x8000cee8" -> "0x8000e0a8" [color="#13a10e"];
        "0x8000cee8" -> "0x8000cf24" [color="#c50f1f"];
        "0x8000cf24" -> "0x8000cf58" [color="#0037da"];
        "0x8000cf58" -> "0x8000e0c4" [color="#13a10e"];
        "0x8000cf58" -> "0x8000cf70" [color="#c50f1f"];
        "0x8000cf70" -> "0x8000cfa4" [color="#0037da"];
        "0x8000cfa4" -> "0x8000e0e0" [color="#13a10e"];
        "0x8000cfa4" -> "0x8000cfbc" [color="#c50f1f"];
        "0x8000cfbc" -> "0x8000cff0" [color="#0037da"];
        "0x8000cff0" -> "0x8000e0fc" [color="#13a10e"];
        "0x8000cff0" -> "0x8000d00c" [color="#c50f1f"];
        "0x8000d00c" -> "0x8000d040" [color="#0037da"];
        "0x8000d040" -> "0x8000e118" [color="#13a10e"];
        "0x8000d040" -> "0x8000d054" [color="#c50f1f"];
        "0x8000d054" -> "0x8000d088" [color="#0037da"];
        "0x8000d088" -> "0x8000e134" [color="#13a10e"];
        "0x8000d088" -> "0x8000d09c" [color="#c50f1f"];
        "0x8000d09c" -> "0x8000d0d0" [color="#0037da"];
        "0x8000d0d0" -> "0x8000e150" [color="#13a10e"];
        "0x8000d0d0" -> "0x8000d10c" [color="#c50f1f"];
        "0x8000d10c" -> "0x8000d144" [color="#0037da"];
        "0x8000d144" -> "0x8000e16c" [color="#13a10e"];
        "0x8000d144" -> "0x8000d17c" [color="#c50f1f"];
        "0x8000d17c" -> "0x8000d1b0" [color="#0037da"];
        "0x8000d1b0" -> "0x8000e188" [color="#13a10e"];
        "0x8000d1b0" -> "0x8000d1d0" [color="#c50f1f"];
        "0x8000d1d0" -> "0x8000d208" [color="#0037da"];
        "0x8000d208" -> "0x8000e1a0" [color="#13a10e"];
        "0x8000d208" -> "0x8000d23c" [color="#c50f1f"];
        "0x8000d23c" -> "0x8000d270" [color="#0037da"];
        "0x8000d270" -> "0x8000e1bc" [color="#13a10e"];
        "0x8000d270" -> "0x8000d294" [color="#c50f1f"];
        "0x8000d294" -> "0x8000d2c8" [color="#0037da"];
        "0x8000d2c8" -> "0x8000e1d8" [color="#13a10e"];
        "0x8000d2c8" -> "0x8000d2e0" [color="#c50f1f"];
        "0x8000d2e0" -> "0x8000d318" [color="#0037da"];
        "0x8000d318" -> "0x8000e1f0" [color="#13a10e"];
        "0x8000d318" -> "0x8000d33c" [color="#c50f1f"];
        "0x8000d33c" -> "0x8000d370" [color="#0037da"];
        "0x8000d370" -> "0x8000e20c" [color="#13a10e"];
        "0x8000d370" -> "0x8000d388" [color="#c50f1f"];
        "0x8000d388" -> "0x8000d3c0" [color="#0037da"];
        "0x8000d3c0" -> "0x8000e224" [color="#13a10e"];
        "0x8000d3c0" -> "0x8000d3e8" [color="#c50f1f"];
        "0x8000d3e8" -> "0x8000d41c" [color="#0037da"];
        "0x8000d41c" -> "0x8000e240" [color="#13a10e"];
        "0x8000d41c" -> "0x8000d450" [color="#c50f1f"];
        "0x8000d450" -> "0x8000d484" [color="#0037da"];
        "0x8000d484" -> "0x8000e25c" [color="#13a10e"];
        "0x8000d484" -> "0x8000d4a8" [color="#c50f1f"];
        "0x8000d4a8" -> "0x8000d4dc" [color="#0037da"];
        "0x8000d4dc" -> "0x8000e278" [color="#13a10e"];
        "0x8000d4dc" -> "0x8000d4f4" [color="#c50f1f"];
        "0x8000d4f4" -> "0x8000d52c" [color="#0037da"];
        "0x8000d52c" -> "0x8000e290" [color="#13a10e"];
        "0x8000d52c" -> "0x8000d550" [color="#c50f1f"];
        "0x8000d550" -> "0x8000d584" [color="#0037da"];
        "0x8000d584" -> "0x8000e2ac" [color="#13a10e"];
        "0x8000d584" -> "0x8000d59c" [color="#c50f1f"];
        "0x8000d59c" -> "0x8000d5d4" [color="#0037da"];
        "0x8000d5d4" -> "0x8000e2c4" [color="#13a10e"];
        "0x8000d5d4" -> "0x8000d604" [color="#c50f1f"];
        "0x8000d604" -> "0x8000d63c" [color="#0037da"];
        "0x8000d63c" -> "0x8000e2dc" [color="#13a10e"];
        "0x8000d63c" -> "0x8000d660" [color="#c50f1f"];
        "0x8000d660" -> "0x8000d694" [color="#0037da"];
        "0x8000d694" -> "0x8000e2f8" [color="#13a10e"];
        "0x8000d694" -> "0x8000d6b4" [color="#c50f1f"];
        "0x8000d6b4" -> "0x8000d6ec" [color="#0037da"];
        "0x8000d6ec" -> "0x8000e310" [color="#13a10e"];
        "0x8000d6ec" -> "0x8000d754" [color="#c50f1f"];
        "0x8000d754" -> "0x8000d788" [color="#0037da"];
        "0x8000d788" -> "0x8000e32c" [color="#13a10e"];
        "0x8000d788" -> "0x8000d7cc" [color="#c50f1f"];
        "0x8000d7cc" -> "0x8000d800" [color="#0037da"];
        "0x8000d800" -> "0x8000e348" [color="#13a10e"];
        "0x8000d800" -> "0x8000d858" [color="#c50f1f"];
        "0x8000d858" -> "0x8000d88c" [color="#0037da"];
        "0x8000d88c" -> "0x8000e364" [color="#13a10e"];
        "0x8000d88c" -> "0x8000d8f4" [color="#c50f1f"];
        "0x8000d8f4" -> "0x8000d92c" [color="#0037da"];
        "0x8000d92c" -> "0x8000e380" [color="#13a10e"];
        "0x8000d92c" -> "0x8000d948" [color="#c50f1f"];
        "0x8000d948" -> "0x8000d97c" [color="#0037da"];
        "0x8000d97c" -> "0x8000e39c" [color="#13a10e"];
        "0x8000d97c" -> "0x8000d9a4" [color="#c50f1f"];
        "0x8000d9a4" -> "0x8000d9dc" [color="#0037da"];
        "0x8000d9dc" -> "0x8000e3bc" [color="#13a10e"];
        "0x8000d9dc" -> "0x8000da54" [color="#c50f1f"];
        "0x8000da54" -> "0x8000e3dc" [color="#13a10e"];
        "0x8000da54" -> "0x8000daa4" [color="#c50f1f"];
        "0x8000e074" -> "0x8000ce88" [color="#0037da"];
        "0x8000e090" -> "0x8000cee8" [color="#0037da"];
        "0x8000e0a8" -> "0x8000cf58" [color="#0037da"];
        "0x8000e0c4" -> "0x8000cfa4" [color="#0037da"];
        "0x8000e0e0" -> "0x8000cff0" [color="#0037da"];
        "0x8000e0fc" -> "0x8000d040" [color="#0037da"];
        "0x8000e118" -> "0x8000d088" [color="#0037da"];
        "0x8000e134" -> "0x8000d0d0" [color="#0037da"];
        "0x8000e150" -> "0x8000d144" [color="#0037da"];
        "0x8000e16c" -> "0x8000d1b0" [color="#0037da"];
        "0x8000e188" -> "0x8000d208" [color="#0037da"];
        "0x8000e1a0" -> "0x8000d270" [color="#0037da"];
        "0x8000e1bc" -> "0x8000d2c8" [color="#0037da"];
        "0x8000e1d8" -> "0x8000d318" [color="#0037da"];
        "0x8000e1f0" -> "0x8000d370" [color="#0037da"];
        "0x8000e20c" -> "0x8000d3c0" [color="#0037da"];
        "0x8000e224" -> "0x8000d41c" [color="#0037da"];
        "0x8000e240" -> "0x8000d484" [color="#0037da"];
        "0x8000e25c" -> "0x8000d4dc" [color="#0037da"];
        "0x8000e278" -> "0x8000d52c" [color="#0037da"];
        "0x8000e290" -> "0x8000d584" [color="#0037da"];
        "0x8000e2ac" -> "0x8000d5d4" [color="#0037da"];
        "0x8000e2c4" -> "0x8000d63c" [color="#0037da"];
        "0x8000e2dc" -> "0x8000d694" [color="#0037da"];
        "0x8000e2f8" -> "0x8000d6ec" [color="#0037da"];
        "0x8000e310" -> "0x8000d788" [color="#0037da"];
        "0x8000e32c" -> "0x8000d800" [color="#0037da"];
        "0x8000e348" -> "0x8000d88c" [color="#0037da"];
        "0x8000e364" -> "0x8000d92c" [color="#0037da"];
        "0x8000e380" -> "0x8000d97c" [color="#0037da"];
        "0x8000e39c" -> "0x8000d9dc" [color="#0037da"];
        "0x8000e3bc" -> "0x8000da88" [color="#0037da"];
}
