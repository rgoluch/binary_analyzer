digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x8000b74c" [URL="sym.test_preempt/0x8000b74c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; UNKNOWN XREF from obj.testtab @ +0x14\l156: sym.test_preempt (int32_t arg1, int32_t arg2, int32_t arg4);\l; var int32_t var_18h @ sp+0x10\l; var int32_t var_10h @ sp+0x18\l; var int32_t var_4h @ sp+0x24\l; arg int32_t arg1 @ a0\l; arg int32_t arg2 @ a1\l; arg int32_t arg4 @ a3\l0x8000b74c      lui v0, 0x8002\l0x8000b750      lw v0, -0x3588(v0)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x8000b754      addiu a0, zero, 0x54                                   ; arg1\l0x8000b758      mul a1, v0, a0\l0x8000b75c      lui v1, 0x8002\l0x8000b760      addiu sp, sp, -0x28\l0x8000b764      addiu v1, v1, -0x3004                                  ; 0x8001cffc ; obj.thrtab\l0x8000b768      addu v0, a1, v1                                        ; arg2\l0x8000b76c      sw ra, (var_4h)\l0x8000b770      sw zero, (var_18h)\l0x8000b774      lw a2, 4(v0)\l0x8000b778      lui a3, 0x8001\l0x8000b77c      lui a0, 0x8001\l0x8000b780      lui v0, 0x8000\l0x8000b784      addiu a3, a3, 0x51a8                                   ; arg4 ; esilref: 'test_spin'\l0x8000b788      lui a1, 1\l0x8000b78c      addiu v0, v0, 0x1c98                                   ; 0x80001c98\l                                                                       ; sym.create ; sym.create\l0x8000b790      jalr v0\l0x8000b794      addiu a0, a0, -0x48d4                                  ; 0x8000b72c\l                                                                       ; sym.spin ; arg1 ; sym.spin\l0x8000b798      move a0, v0\l0x8000b79c      sw v0, (var_10h)\l0x8000b7a0      lui v0, 0x8000\l0x8000b7a4      addiu v0, v0, 0x2020                                   ; 0x80002020\l                                                                       ; sym.ready ; sym.ready\l0x8000b7a8      jalr v0\l0x8000b7ac      addiu a1, zero, 1                                      ; arg2\l0x8000b7b0      lui v0, 0x8000\l0x8000b7b4      addiu v0, v0, 0x1e78                                   ; 0x80001e78\l                                                                       ; sym.kill ; sym.kill\l0x8000b7b8      jalr v0\l0x8000b7bc      lw a0, (var_10h)\l0x8000b7c0      lui a1, 0x8001\l0x8000b7c4      lui v0, 0x8001\l0x8000b7c8      addiu v0, v0, -0x7228                                  ; 0x80008dd8\l                                                                       ; sym.testPass ; sym.testPass\l0x8000b7cc      addiu a1, a1, 0x43fc                                   ; 0x800143fc\l                                                                       ; aav.0x800143fc ; arg2 ; aav.0x800143fc\l0x8000b7d0      jalr v0\l0x8000b7d4      addiu a0, zero, 1                                      ; arg1\l0x8000b7d8      lw ra, (var_4h)\l0x8000b7dc      addiu v0, zero, 1\l0x8000b7e0      jr ra\l0x8000b7e4      addiu sp, sp, 0x28\l"]
}
