digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x80006c04" [URL="sym.xsh_exit/0x80006c04", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; UNKNOWN XREF from obj.commandtab @ +0x20\l360: sym.xsh_exit (signed int arg1, int32_t arg2);\l; var int32_t var_18h @ sp+0x10\l; var int32_t var_14h @ sp+0x14\l; var int32_t var_10h @ sp+0x18\l; var int32_t var_ch @ sp+0x1c\l; var int32_t var_8h @ sp+0x20\l; var int32_t var_4h @ sp+0x24\l; arg signed int arg1 @ a0\l; arg int32_t arg2 @ a1\l0x80006c04      addiu sp, sp, -0x28\l0x80006c08      addiu v0, zero, 2\l0x80006c0c      sw s0, (var_18h)\l0x80006c10      sw ra, (var_4h)\l0x80006c14      sw s4, (var_8h)\l0x80006c18      sw s3, (var_ch)\l0x80006c1c      sw s2, (var_10h)\l0x80006c20      sw s1, (var_14h)\l0x80006c24      bne a0, v0, 0x80006d14\l0x80006c28      move s0, a1\l"]
	"0x80006c2c" [URL="sym.xsh_exit/0x80006c2c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80006c2c      lui a1, 0x8001\l0x80006c30      lui v0, 0x8001\l0x80006c34      lw a0, 4(s0)\l0x80006c38      addiu v0, v0, 0x1f44                                   ; 0x80011f44\l                                                                       ; sym.strcmp ; sym.strcmp\l0x80006c3c      jalr v0\l0x80006c40      addiu a1, a1, 0x37c0                                   ; arg2 ; esilref: '--help'\l0x80006c44      beqz v0, 0x80006cc8\l0x80006c48      lui a0, 0x8001\l"]
	"0x80006c4c" [URL="sym.xsh_exit/0x80006c4c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_exit @ 0x80006d18\l0x80006c4c      lui s4, 0x8002\l0x80006c50      lw v0, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x80006c54      addiu s3, zero, 0x54\l0x80006c58      mul v1, v0, s3\l0x80006c5c      lui s2, 0x8002\l0x80006c60      addiu s2, s2, -0x3004                                  ; 0x8001cffc\l                                                                       ; v1 ; obj.thrtab\l0x80006c64      addu v0, v1, s2\l0x80006c68      lw a2, (s0)\l0x80006c6c      lw a0, 0x48(v0)\l0x80006c70      lui a1, 0x8001\l0x80006c74      lui s1, 0x8001\l0x80006c78      addiu s1, s1, 0x1a00                                   ; 0x80011a00\l                                                                       ; t9 ; sym.fprintf\l0x80006c7c      jalr s1\l0x80006c80      addiu a1, a1, 0x37c8                                   \l; arg2 ; esilref: '&s: too many arguments\l; '\l0x80006c84      lw v0, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x80006c88      lui a1, 0x8001\l0x80006c8c      mul v1, v0, s3\l0x80006c90      lw a2, (s0)\l0x80006c94      addu s2, v1, s2\l0x80006c98      lw a0, 0x48(s2)\l0x80006c9c      jalr s1\l0x80006ca0      addiu a1, a1, 0x37e0                                   \l; arg2 ; esilref: 'Try '&s --help' for more information.\l; '\l0x80006ca4      addiu v0, zero, 1\l"]
	"0x80006ca8" [URL="sym.xsh_exit/0x80006ca8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_exit @ 0x80006d0c, 0x80006d64\l0x80006ca8      lw ra, (var_4h)\l0x80006cac      lw s4, (var_8h)\l0x80006cb0      lw s3, (var_ch)\l0x80006cb4      lw s2, (var_10h)\l0x80006cb8      lw s1, (var_14h)\l0x80006cbc      lw s0, (var_18h)\l0x80006cc0      jr ra\l0x80006cc4      addiu sp, sp, 0x28\l"]
	"0x80006cc8" [URL="sym.xsh_exit/0x80006cc8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_exit @ 0x80006c44\l0x80006cc8      lw a1, (s0)\l0x80006ccc      lui s0, 0x8001\l0x80006cd0      addiu s0, s0, 0x1c68                                   ; 0x80011c68\l                                                                       ; sym.printf ; sym.printf\l0x80006cd4      jalr s0\l0x80006cd8      addiu a0, a0, 0x3808                                   ; arg1\l0x80006cdc      lui a0, 0x8001\l0x80006ce0      jalr s0\l0x80006ce4      addiu a0, a0, 0x3814                                   \l; arg1 ; esilref: 'Description:\l; '\l0x80006ce8      lui a0, 0x8001\l0x80006cec      jalr s0\l0x80006cf0      addiu a0, a0, 0x38f8                                   \l; esilref: '\tCloses the Xinu shell.\l; '\l0x80006cf4      lui a0, 0x8001\l0x80006cf8      jalr s0\l0x80006cfc      addiu a0, a0, 0x383c                                   \l; esilref: 'Options:\l; '\l0x80006d00      lui a0, 0x8001\l0x80006d04      jalr s0\l0x80006d08      addiu a0, a0, 0x3848                                   \l; esilref: '\t--help\t display this help and exit\l; '\l0x80006d0c      b 0x80006ca8\l0x80006d10      addiu v0, zero, 1\l"]
	"0x80006d14" [URL="sym.xsh_exit/0x80006d14", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_exit @ 0x80006c24\l0x80006d14      slti a0, a0, 2                                         ; arg1\l0x80006d18      beqz a0, 0x80006c4c\l0x80006d1c      lui a0, 0x8001\l"]
	"0x80006d20" [URL="sym.xsh_exit/0x80006d20", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80006d20      lui v0, 0x8001\l0x80006d24      addiu v0, v0, 0x1c68                                   ; 0x80011c68\l                                                                       ; sym.printf ; sym.printf\l0x80006d28      jalr v0\l0x80006d2c      addiu a0, a0, 0x3660                                   \l; arg1 ; esilref: 'Shell closed.\l; '\l0x80006d30      lui v0, 0x8000\l0x80006d34      addiu v0, v0, 0x279c                                   ; 0x8000279c\l                                                                       ; sym.sleep ; sym.sleep\l0x80006d38      jalr v0\l0x80006d3c      addiu a0, zero, 0xa                                    ; arg1\l0x80006d40      lui v0, 0x8000\l0x80006d44      addiu v0, v0, 0x249c                                   ; 0x8000249c\l                                                                       ; sym.gettid ; sym.gettid\l0x80006d48      jalr v0\l0x80006d4c      nop\l0x80006d50      move a0, v0\l0x80006d54      lui v0, 0x8000\l0x80006d58      addiu v0, v0, 0x1e78                                   ; 0x80001e78\l                                                                       ; sym.kill ; sym.kill\l0x80006d5c      jalr v0\l0x80006d60      nop\l0x80006d64      b 0x80006ca8\l0x80006d68      move v0, zero\l"]
        "0x80006c04" -> "0x80006d14" [color="#13a10e"];
        "0x80006c04" -> "0x80006c2c" [color="#c50f1f"];
        "0x80006c2c" -> "0x80006cc8" [color="#13a10e"];
        "0x80006c2c" -> "0x80006c4c" [color="#c50f1f"];
        "0x80006c4c" -> "0x80006ca8" [color="#0037da"];
        "0x80006cc8" -> "0x80006ca8" [color="#0037da"];
        "0x80006d14" -> "0x80006c4c" [color="#13a10e"];
        "0x80006d14" -> "0x80006d20" [color="#c50f1f"];
        "0x80006d20" -> "0x80006ca8" [color="#0037da"];
}
