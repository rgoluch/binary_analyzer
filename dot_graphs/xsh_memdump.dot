digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x80007864" [URL="sym.xsh_memdump/0x80007864", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ; UNKNOWN XREF from obj.commandtab @ +0x68\l740: sym.xsh_memdump (int32_t arg1, int32_t arg2);\l; var int32_t var_30h @ sp+0x10\l; var int32_t var_28h @ sp+0x18\l; var int32_t var_24h @ sp+0x1c\l; var int32_t var_20h @ sp+0x20\l; var int32_t var_1ch @ sp+0x24\l; var int32_t var_18h @ sp+0x28\l; var int32_t var_14h @ sp+0x2c\l; var int32_t var_10h @ sp+0x30\l; var int32_t var_ch @ sp+0x34\l; var int32_t var_8h @ sp+0x38\l; var int32_t var_4h @ sp+0x3c\l; arg int32_t arg1 @ a0\l; arg int32_t arg2 @ a1\l0x80007864      addiu sp, sp, -0x40\l0x80007868      addiu v0, zero, 2\l0x8000786c      sw s0, (var_28h)\l0x80007870      sw ra, (var_4h)\l0x80007874      sw fp, (var_8h)\l0x80007878      sw s7, (var_ch)\l0x8000787c      sw s6, (var_10h)\l0x80007880      sw s5, (var_14h)\l0x80007884      sw s4, (var_18h)\l0x80007888      sw s3, (var_1ch)\l0x8000788c      sw s2, (var_20h)\l0x80007890      sw s1, (var_24h)\l0x80007894      bne a0, v0, 0x80007980\l0x80007898      move s0, a1\l"]
	"0x8000789c" [URL="sym.xsh_memdump/0x8000789c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x8000789c      lui a1, 0x8001\l0x800078a0      lui v0, 0x8001\l0x800078a4      lw a0, 4(s0)\l0x800078a8      addiu v0, v0, 0x1f44                                   ; 0x80011f44\l                                                                       ; sym.strcmp ; sym.strcmp\l0x800078ac      jalr v0\l0x800078b0      addiu a1, a1, 0x37c0                                   ; arg2 ; esilref: '--help'\l0x800078b4      bnez v0, 0x80007994\l0x800078b8      lui s4, 0x8002\l"]
	"0x800078bc" [URL="sym.xsh_memdump/0x800078bc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x800078bc      lw a1, (s0)\l0x800078c0      lui a0, 0x8001\l0x800078c4      lui s0, 0x8001\l0x800078c8      addiu s0, s0, 0x1c68                                   ; 0x80011c68\l                                                                       ; sym.printf ; sym.printf\l0x800078cc      jalr s0\l0x800078d0      addiu a0, a0, 0x3d48                                   \l; arg1 ; esilref: 'Usage: &s [-C] [-f] <START> <LENGTH>\l; \l; '\l0x800078d4      lui a0, 0x8001\l0x800078d8      jalr s0\l0x800078dc      addiu a0, a0, 0x3814                                   \l; arg1 ; esilref: 'Description:\l; '\l0x800078e0      lui a0, 0x8001\l0x800078e4      jalr s0\l0x800078e8      addiu a0, a0, 0x3d70                                   \l; arg1 ; esilref: '\tDumps the region of memory starting at START\l; '\l0x800078ec      lui a0, 0x8001\l0x800078f0      jalr s0\l0x800078f4      addiu a0, a0, 0x3da0                                   \l; arg1 ; esilref: '\tand completing at START+LENGTH to standard out\l; '\l0x800078f8      lui a0, 0x8001\l0x800078fc      jalr s0\l0x80007900      addiu a0, a0, 0x3dd4                                   \l; arg1 ; esilref: '\tSTART and LENGTH can be hex or dec.\l; '\l0x80007904      lui a0, 0x8001\l0x80007908      jalr s0\l0x8000790c      addiu a0, a0, 0x383c                                   \l; arg1 ; esilref: 'Options:\l; '\l0x80007910      lui a0, 0x8001\l0x80007914      jalr s0\l0x80007918      addiu a0, a0, 0x3dfc                                   \l; arg1 ; esilref: '\t<START>\t\tregion of memory at which to start\l; '\l0x8000791c      lui a0, 0x8001\l0x80007920      jalr s0\l0x80007924      addiu a0, a0, 0x3e2c                                   \l; esilref: '\t<LENGTH>\tlength to be dumped\l; '\l0x80007928      lui a0, 0x8001\l0x8000792c      jalr s0\l0x80007930      addiu a0, a0, 0x3e4c                                   \l; esilref: '\t-C\t\tdisplay in canonical mode (hex+ASCII)\l; '\l0x80007934      lui a0, 0x8001\l0x80007938      jalr s0\l0x8000793c      addiu a0, a0, 0x3e78                                   \l; esilref: '\t-f\t\tignore sanity checks for addresses\l; '\l0x80007940      lui a0, 0x8001\l0x80007944      jalr s0\l0x80007948      addiu a0, a0, 0x3ea4                                   \l; esilref: '\t--help\t\tdisplay this help and exit\l; '\l0x8000794c      addiu v0, zero, 1\l"]
	"0x80007950" [URL="sym.xsh_memdump/0x80007950", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_memdump @ 0x800079e8, 0x80007b28, 0x80007b40\l0x80007950      lw ra, (var_4h)\l0x80007954      lw fp, (var_8h)\l0x80007958      lw s7, (var_ch)\l0x8000795c      lw s6, (var_10h)\l0x80007960      lw s5, (var_14h)\l0x80007964      lw s4, (var_18h)\l0x80007968      lw s3, (var_1ch)\l0x8000796c      lw s2, (var_20h)\l0x80007970      lw s1, (var_24h)\l0x80007974      lw s0, (var_28h)\l0x80007978      jr ra\l0x8000797c      addiu sp, sp, 0x40\l"]
	"0x80007980" [URL="sym.xsh_memdump/0x80007980", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007894\l0x80007980      addiu v0, a0, -3\l0x80007984      sltiu v0, v0, 3\l0x80007988      bnez v0, 0x80007ab8\l0x8000798c      move s7, a0\l"]
	"0x80007990" [URL="sym.xsh_memdump/0x80007990", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007a44\l0x80007990      lui s4, 0x8002\l"]
	"0x80007994" [URL="sym.xsh_memdump/0x80007994", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x800078b4\l0x80007994      lw v0, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x80007998      addiu s3, zero, 0x54\l0x8000799c      mul v1, v0, s3\l0x800079a0      lui s2, 0x8002\l0x800079a4      addiu s2, s2, -0x3004                                  ; 0x8001cffc\l                                                                       ; v1 ; obj.thrtab\l0x800079a8      lui a1, 0x8001\l0x800079ac      lw a2, (s0)\l0x800079b0      addu v0, v1, s2\l0x800079b4      addiu a1, a1, 0x38e0                                   \l; esilref: '&s: too few arguments\l; '\l"]
	"0x800079b8" [URL="sym.xsh_memdump/0x800079b8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007aa8\l0x800079b8      lui s1, 0x8001\l0x800079bc      addiu s1, s1, 0x1a00                                   ; 0x80011a00\l                                                                       ; t9 ; sym.fprintf\l0x800079c0      jalr s1\l0x800079c4      lw a0, 0x48(v0)\l0x800079c8      lw v0, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x800079cc      lw a2, (s0)\l0x800079d0      mul v1, v0, s3\l0x800079d4      lui a1, 0x8001\l0x800079d8      addu s2, v1, s2\l0x800079dc      lw a0, 0x48(s2)\l0x800079e0      jalr s1\l0x800079e4      addiu a1, a1, 0x387c                                   \l; esilref: 'Try '&s --help' for more information\l; '\l0x800079e8      b 0x80007950\l0x800079ec      addiu v0, zero, 1\l"]
	"0x800079f0" [URL="sym.xsh_memdump/0x800079f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007a24\l0x800079f0      addiu s3, zero, 1\l"]
	"0x800079f4" [URL="sym.xsh_memdump/0x800079f4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007ab0\l0x800079f4      addiu fp, fp, -1\l"]
	"0x800079f8" [URL="sym.xsh_memdump/0x800079f8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007ad4\l0x800079f8      addiu s1, s7, 1\l0x800079fc      subu s1, s1, fp\l0x80007a00      andi s1, s1, 0xffff\l0x80007a04      slt v0, s1, fp\l0x80007a08      beqz v0, 0x80007a40\l0x80007a0c      sll v1, s1, 2\l"]
	"0x80007a10" [URL="sym.xsh_memdump/0x80007a10", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80007a10      addu v1, s0, v1\l0x80007a14      lw a0, (v1)\l0x80007a18      move a1, s5\l0x80007a1c      jalr s2\l0x80007a20      sw v1, (var_30h)\l0x80007a24      beqz v0, 0x800079f0\l0x80007a28      lw v1, (var_30h)\l"]
	"0x80007a2c" [URL="sym.xsh_memdump/0x80007a2c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80007a2c      lw a0, (v1)\l0x80007a30      jalr s2\l0x80007a34      addiu a1, s6, 0x3ecc\l0x80007a38      beqz v0, 0x80007ab0\l0x80007a3c      nop\l"]
	"0x80007a40" [URL="sym.xsh_memdump/0x80007a40", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007a08\l0x80007a40      addiu v0, zero, 3\l0x80007a44      bne fp, v0, 0x80007990\l0x80007a48      sll s1, s1, 2\l"]
	"0x80007a4c" [URL="sym.xsh_memdump/0x80007a4c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80007a4c      addu s1, s0, s1\l0x80007a50      lui s5, 0x8000\l0x80007a54      addiu s5, s5, 0x77c8\l0x80007a58      jalr s5\l; CALL XREF from sym.xsh_memdump @ 0x80007a58\l0x80007a5c      lw a0, (s1)\l0x80007a60      lw a0, 4(s1)\l0x80007a64      jalr s5\l; CALL XREF from sym.xsh_memdump @ 0x80007a64\l0x80007a68      move s2, v0\l0x80007a6c      move a1, v0\l0x80007a70      addiu v0, zero, -1\l0x80007a74      beq s2, v0, 0x80007a84\l0x80007a78      nop\l"]
	"0x80007a7c" [URL="sym.xsh_memdump/0x80007a7c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80007a7c      bne a1, v0, 0x80007adc\l0x80007a80      nop\l"]
	"0x80007a84" [URL="sym.xsh_memdump/0x80007a84", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007a74\l0x80007a84      lui s4, 0x8002\l0x80007a88      lw v0, -0x3588(s4)                                     ; [0x8001ca78:4]=0\l                                                                       ; obj.thrcurrent\l0x80007a8c      addiu s3, zero, 0x54\l0x80007a90      mul v1, v0, s3\l0x80007a94      lui s2, 0x8002\l0x80007a98      addiu s2, s2, -0x3004                                  ; 0x8001cffc\l                                                                       ; v1 ; obj.thrtab\l0x80007a9c      lui a1, 0x8001\l0x80007aa0      lw a2, (s0)\l0x80007aa4      addu v0, v1, s2\l0x80007aa8      b 0x800079b8\l0x80007aac      addiu a1, a1, 0x3ed0                                   \l; esilref: '&s: invalid argument\l; '\l"]
	"0x80007ab0" [URL="sym.xsh_memdump/0x80007ab0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007a38\l0x80007ab0      b 0x800079f4\l0x80007ab4      addiu s4, zero, 1\l"]
	"0x80007ab8" [URL="sym.xsh_memdump/0x80007ab8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007988\l0x80007ab8      lui s5, 0x8001\l0x80007abc      lui s2, 0x8001\l0x80007ac0      move fp, a0\l0x80007ac4      move s4, zero\l0x80007ac8      move s3, zero\l0x80007acc      addiu s5, s5, 0x70f4\l0x80007ad0      addiu s2, s2, 0x1f44                                   ; 0x80011f44\l                                                                       ; sym.strcmp ; sym.strcmp\l0x80007ad4      b 0x800079f8\l0x80007ad8      lui s6, 0x8001\l"]
	"0x80007adc" [URL="sym.xsh_memdump/0x80007adc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007a7c\l0x80007adc      bnez s4, 0x80007b18\l0x80007ae0      lui v0, 0x8000\l"]
	"0x80007ae4" [URL="sym.xsh_memdump/0x80007ae4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80007ae4      beqz a1, 0x80007b1c\l0x80007ae8      move a2, s3\l"]
	"0x80007aec" [URL="sym.xsh_memdump/0x80007aec", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80007aec      addu v0, s2, a1\l0x80007af0      sltu v1, v0, s2\l0x80007af4      bnez v1, 0x80007b30\l0x80007af8      lui a0, 0x8001\l"]
	"0x80007afc" [URL="sym.xsh_memdump/0x80007afc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80007afc      bgez s2, 0x80007b30\l0x80007b00      lui v1, 0xc000\l"]
	"0x80007b04" [URL="sym.xsh_memdump/0x80007b04", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80007b04      addiu v1, v1, 1\l0x80007b08      sltu v0, v0, v1\l0x80007b0c      beqz v0, 0x80007b30\l0x80007b10      nop\l"]
	"0x80007b14" [URL="sym.xsh_memdump/0x80007b14", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x80007b14      lui v0, 0x8000\l"]
	"0x80007b18" [URL="sym.xsh_memdump/0x80007b18", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007adc\l0x80007b18      move a2, s3\l"]
	"0x80007b1c" [URL="sym.xsh_memdump/0x80007b1c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from sym.xsh_memdump @ 0x80007ae4\l0x80007b1c      addiu v0, v0, 0x3ad0                                   ; 0x80003ad0\l                                                                       ; sym.hexdump ; sym.hexdump\l0x80007b20      jalr v0\l0x80007b24      move a0, s2\l0x80007b28      b 0x80007950\l0x80007b2c      move v0, zero\l"]
	"0x80007b30" [URL="sym.xsh_memdump/0x80007b30", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from sym.xsh_memdump @ 0x80007af4, 0x80007afc, 0x80007b0c\l0x80007b30      lui v0, 0x8001\l0x80007b34      addiu v0, v0, 0x1c68                                   ; 0x80011c68\l                                                                       ; sym.printf ; sym.printf\l0x80007b38      jalr v0\l0x80007b3c      addiu a0, a0, 0x3ee8\l0x80007b40      b 0x80007950\l0x80007b44      move v0, zero\l"]
        "0x80007864" -> "0x80007980" [color="#13a10e"];
        "0x80007864" -> "0x8000789c" [color="#c50f1f"];
        "0x8000789c" -> "0x80007994" [color="#13a10e"];
        "0x8000789c" -> "0x800078bc" [color="#c50f1f"];
        "0x800078bc" -> "0x80007950" [color="#0037da"];
        "0x80007980" -> "0x80007ab8" [color="#13a10e"];
        "0x80007980" -> "0x80007990" [color="#c50f1f"];
        "0x80007990" -> "0x80007994" [color="#0037da"];
        "0x80007994" -> "0x800079b8" [color="#0037da"];
        "0x800079b8" -> "0x80007950" [color="#0037da"];
        "0x800079f0" -> "0x800079f4" [color="#0037da"];
        "0x800079f4" -> "0x800079f8" [color="#0037da"];
        "0x800079f8" -> "0x80007a40" [color="#13a10e"];
        "0x800079f8" -> "0x80007a10" [color="#c50f1f"];
        "0x80007a10" -> "0x800079f0" [color="#13a10e"];
        "0x80007a10" -> "0x80007a2c" [color="#c50f1f"];
        "0x80007a2c" -> "0x80007ab0" [color="#13a10e"];
        "0x80007a2c" -> "0x80007a40" [color="#c50f1f"];
        "0x80007a40" -> "0x80007990" [color="#13a10e"];
        "0x80007a40" -> "0x80007a4c" [color="#c50f1f"];
        "0x80007a4c" -> "0x80007a84" [color="#13a10e"];
        "0x80007a4c" -> "0x80007a7c" [color="#c50f1f"];
        "0x80007a7c" -> "0x80007adc" [color="#13a10e"];
        "0x80007a7c" -> "0x80007a84" [color="#c50f1f"];
        "0x80007a84" -> "0x800079b8" [color="#0037da"];
        "0x80007ab0" -> "0x800079f4" [color="#0037da"];
        "0x80007ab8" -> "0x800079f8" [color="#0037da"];
        "0x80007adc" -> "0x80007b18" [color="#13a10e"];
        "0x80007adc" -> "0x80007ae4" [color="#c50f1f"];
        "0x80007ae4" -> "0x80007b1c" [color="#13a10e"];
        "0x80007ae4" -> "0x80007aec" [color="#c50f1f"];
        "0x80007aec" -> "0x80007b30" [color="#13a10e"];
        "0x80007aec" -> "0x80007afc" [color="#c50f1f"];
        "0x80007afc" -> "0x80007b30" [color="#13a10e"];
        "0x80007afc" -> "0x80007b04" [color="#c50f1f"];
        "0x80007b04" -> "0x80007b30" [color="#13a10e"];
        "0x80007b04" -> "0x80007b14" [color="#c50f1f"];
        "0x80007b14" -> "0x80007b18" [color="#0037da"];
        "0x80007b18" -> "0x80007b1c" [color="#0037da"];
        "0x80007b1c" -> "0x80007950" [color="#0037da"];
        "0x80007b30" -> "0x80007950" [color="#0037da"];
}
